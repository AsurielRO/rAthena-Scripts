//===== rAthena Script =======================================
//= Dungeon Quest System
//===== Author ===============================================
//= llchrisll
//===== Credits ==============================================
//= "Ultimate Warper" Author from the eAthena Board.
//	Since no header was included and I forgot the name of him/her,
//	I couldn't ask the permission to use an part of the script.
//	I used the map coordinates.
//===== Current Version ======================================
//= 1.0
//===== GitHub Commit Link ===================================
//= https://github.com/llchrisll/lllchrislll-scripts/commit/
//===== Changelog ============================================
//= "()" contains the Commit ID, if available.
//= Just add the ID after "commit/" in the link.
//------------------------------------------------------------
//= 1.0 - Initial Release
//===== Compatible With ======================================
//= rAthena SQL 09/26-2015 Rev+
//===== Tested With ==========================================
//= rAthena SQL 09/26-2015 Revision
//===== Description ==========================================
//= Additional EXP Bonus (in Percent) based on Dungeon's Difficulty
//  - Difficulties: Easy, Medium, Hard
//  - EXP Rates: 50%, 100%, 150% (changeable)
//= Dungeon Warp Service
//  - Warp to the Entrance only
//= Party Settings dynamically changeable
//  - Quantity of Parties in each Dungeon
//= Party Join Feature
//  - Requesting to join an existing Party, on accept the Leader can decide
//    to which member the applicant will be warped to
//= Dungeon Rewards:
//  - Regular Dungeon Points (On/Off Function)
//    Base Points*Difficulty of Dungeon
//  - MvP Dungeon Points (On/Off Function)
//    Per slain MvP, you gain "x" Points (changeable)
//    Custom Character Permanent Variable for Exchanger 
//  - Dungeon Points Exchanger
//= Quests per Dungeons
//  - Each Dungeon can have an infinite amount of quests
//===== Comments =============================================
//= ...
//============================================================
/*
CREATE TABLE IF NOT EXISTS `dqs_list` (
 `dg_id` int(10) unsigned NOT NULL,
 `quest_id` int(10) unsigned default '2',
 `quest_type` tinyint(3) unsigned default '1',
 `mob_id` int(10) unsigned default '0',
 `mob_am` int(12) unsigned default '0',
 `item_id` int(10) unsigned default '0',
 `item_am` int(10) unsigned default '0',
 `reward_id` int(10) unsigned default '0',
 `reward_am` int(10) unsigned default '0',
 `status` tinyint(3) unsigned default '1'
 ) ENGINE=MyISAM;
 
 CREATE TABLE IF NOT EXISTS `dqs_party` (
 `dg_id` int(10) unsigned,
 `pty_id` int(10) unsigned default '0',
 `char_id` int(10) unsigned default '0',
 `start` int(10) unsigned default '1'
 `quest_id` int(10) unsigned NOT NULL,
 `mob_id` int(10) unsigned default '0',
 `mob_am` int(12) unsigned default '0',
 `req_am` int(12) unsigned default '0'
 ) ENGINE=MyISAM;
 
CREATE TABLE IF NOT EXISTS `dqs_dungeon` (
 `dg_id` int(10) unsigned NOT NULL,
 `name` varchar(255) default 'Unknown Dungeon',
 `difficulty` int(10) unsigned NOT NULL default '1',
 `req_level` int(10) unsigned NOT NULL default '1',
 `pty_limit` int(5) unsigned default '0',
 `floor` tinyint(3) unsigned NOT NULL default '1',
 `map_name` varchar(255) default 'prontera',
 `map_x` varchar(255) unsigned default '0',
 `map_y` varchar(255) unsigned default '0',
 `repeat` int(5) unsigned default '0',
 `status` tinyint(3) unsigned default '0'
) ENGINE=MyISAM;

CREATE TABLE IF NOT EXISTS `dqs_app` (
 `pty_id` int(10) unsigned default '0',
 `app_id` int(10) unsigned default '0',
 `name` varchar(255) default 'Unknown Player',
 `level` varchar(255) default '1',
 `class` int(10) unsigned default '0'
) ENGINE=MyISAM;
*/
prontera,151,185,4	script	Dungeon Quest Service	110,{

mes .n$;
mes "Hello, "+strcharinfo(0)+"!";
mes "How can I help you?";
next;
switch(select("- Dungeon Menu:- Information:- "+ ( (.dg_pts == 1)?"Points Exchanger:- Nothing":"Nothing") )) {

	case 1:
	mes .n$;
	if(!$@DQS_Sys) {
		mes "I'm sorry, but my Dungeon Quest Service is currently offline.";
		close;
	}
	mes "Please choose what you want to do below:";
	next;
	switch(select("- Register:- Quest Board:- Warp Service:- Complete Dungeon")) {
	
		// ============ Register for Dungeon ============ //
		case 1:
		mes .n$;
		if(getcharid(1) != 0) {
			mes "You are currently not in a Party, do you want to enter an dungeon by yourself? Or do you rather want to join a party?";
			if(select("- Join a Party:- Solo") == 1) {
				// Joining a party
				next;
				mes .n$;
				if(query_sql("SELECT `pty_id` FROM `dqs_party`") == -1) { // No Party registered yet
					mes "I'm sorry, but there is no party registered yet. Please come back later or make one yourself.";
					mes "But you require 2 or more members in your party.";
					close;
				}
				set .@join,1;
				next;
				mes .n$;
				mes "Please choose the dungeon first, then the party you want to join.";
			}
		} else {
			if(strcharinfo(0) != getpartyleader(getcharid(1))) {
				mes .n$;
				mes "Only the party leader can register your party for an Dungeon";
				close;
			}
			getpartymember(getcharid(1),2);
			for ( set .@p,0; .@p < $@partymembercount; set .@p,.@p + 1) 
				if(isloggedin($@partymemberaid[.@p]) == 1)  // Member logged in?
					set .@ct,.@ct + 1;
					
			if(.@ct < 2) {
				mes .n$;
				mes "A party requires minimum 2 members online to use the Dungeon Quest Service.";
				close;
			}
		}
		// =============== Creating Dungeon Menu ===============
		query_sql "SELECT `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `repeat` , `status` FROM `dqs_dungeon`",.@dg_id,.@name$,.@diff,.@pty_limit,.@req_lvl,.@rep,.@stat;
		for ( set .@du,0; .@du < getarraysize(.@dg_id); set .@du,.@du + 1) {
			query_sql "SELECT count( `pty_id` ) FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id[.@du]+"'",.@pty_ct;
			set .@men_dun$,.@men_dun$ + "- "+.@name$[.@du] + " ("+( (.@status[.@du] == 1)?.@pty_ct+"/"+.@pty_limit[.@du]:"Entry forbidden")+" (Min.Level - "+.@req_lvl[.@du]+")" + ( (.@name$[@du+1] != "")?":":"");
			setarray .@pt_count[.@du],.@pty_ct;
		}	
		next;
		mes .n$;
		mes "Now please choose the dungeon your party wants to go:";
		set @d,select( .@men_dun$ ) - 1;
		next;
		mes .n$;
		mes "Dungeon: "+.@name$[@d];
		mes "Difficulty: "+ ( (.@diff[@d] == 1)?"Easy": ( (@diff[.@d] == 2)?"Medium":"Hard") );
		mes "Minimum Level: "+.@req_lvl[@d];
		if(.@status[@d] == 0) {
			mes "Status: Entry forbidden";
			mes "Please choose a different dungeon.";
			close;
		}
		mes "Existing Parties: "+.@pt_count[@d];
		mes "Repeat Limit: "+.@rep[@d];
		if(@join) {
			next;
			mes .n$;
			if(BaseLevel < .@req_lvl[@d]) {
				mes "I'm sorry, but you don't meet the level requirement, which is "+.@req_lvl[@d]+"!";
				mes "Please try an other dungeon or level up until you reach that level.";
				close;
			}
			mes "I will now list the available parties:";
			mes " ";
			query_sql "SELECT `pty_id` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id[@d]+"' AND `pty_id` != '0'",.@pty_id;
			for ( set .@l,0; .@l < getarraysize(.@pty_id); set .@l,.@l + 1) {
				getpartymember(.@pty_id[.@l]);
				if($@partymembercount < MAX_PARTY) {
					mes "===================";
					mes "Party Name: "+getpartyname(.@pty_id[.@l]);
					mes "Leader: "+getpartyleader(.@pty_id[.@l]);
					mes "Current Members: "+$@partymembercount;
					setarray .@pty_list[getarraysize(.@pty_list)],.@pty_id[.@l];
					set .@pty_menu$,.@pty_menu$ + "- "+getpartyname(.@pty_id[.@l]) + ( (.@pty_id[.@l+1] != 0)?":":"");
					mes ( (.pty_id[.@l+1] != 0)?"":"===================");
				}
			}
			if(getarraysize(.@pty_list) < 1) {
				next;
				mes .n$;
				mes "I'm sorry, but there is no party on this map.";
				close;
			}
			mes " ";
			mes "Please choose, which party you want to send an application at:";
			set .@p,select(.@pty_menu$) - 1;
			if(isloggedin(getpartyleader(.@pty_list[.@p],1),getpartyleader(.@pty_list[.@p],2)) == 1) {
				mes "I will send now an request to the party leader with your Level and Class.";
				mes "Please wait until the leader will accept or decline your request.";
				mes "If the leader doesn't respond in any way, please try to PM him/her by yourself.";
				mes "The leader's name is ["+getpartyleader(.@pty_list[.@p])+"].";
				close2;
				set .@req_id,getcharid(0);
				set .@lvl$,BaseLevel+"/"+JobLevel;
				set .@cls,Class;
				set .@name$,strcharinfo(0);
				// Creating Applicant array for the party
				if(query_sql("SELECT `app_id` FROM `dqs_app` WHERE `pty_id` = '"+.@pty_list[.@p]+"'",.@app_id) == -1) {
					query_sql "INSERT INTO `dqs_app` ( `pty_id` , `app_id` , `name` , `level` , `class` ) VALUES ( '"+.@pty_list+"' , '"+.@req_id+"' , '"+escape_sql(strcharinfo(0))+"' , '"+BaseLevel+"/"+JobLevel+"' , '"+Class+"' )";
					detachrid;
					attachrid(getpartyleader(.@pty_list[.@p],1));
					announce .n$+": The player ["+.@name$+"] with Level "+.@lvl$+", Class: "+jobname(Class)+" requests to join your party. You can accept/decline by sending an whisper to me via \"NPC:Party_Join\" and as text \"List\". There you gain additional information.",bc_self;
				}
				end;

			} else {
				mes "It seems like that the party leader of "+getpartyname(.@pty_list[@p])+" isn't online.";
				mes "Please try another party.";
				close;
			}
		}
		next;
		mes .n$;
		if(.@pt_count[@d] >= .@pty_limit[@d]) {
			mes "I'm sorry, but this dungeon already reached the maximum of parties it can hold.";
			mes "Please choose a different one.";
			close;
		}
		// Solo Entry
		if( (getcharid(1) == 0 && BaseLevel < .@req_lvl[@d]) || (getd("DG_"+.@dg_id[@d]+"_RepeatCT") >= .@rep[@d])) {
			mes "I'm sorry, but you either didn't reach the required level or reached the repeat limit for this dungeon.";
			mes "Please choose either a different dungeon or try to level up first.";
			mes "The minimum level for this dungeon is "+.@req_lvl[@d]+"!";
			close;
		
		// Party Entry
		} else if(getcharid(1) != 0) {
			mes "I will now check the levels of your party members. Please wait....";
			/*
			getpartymember(getcharid(1),1);
			getpartymember(getcharid(1),2);
			for ( set .@l,0; .@l < $@partymembercount; set .@l,.@l + 1) {
				// Checking Level of each party member
				debugmes "Member (AID: "+$@partymemberaid[.@l]+", CID: "+$@partymembercid[.@l]+"):";
				debugmes "Logged in?: "+isloggedin($@partymemberaid[.@l],$@partymembercid[.@l]);
				debugmes "BaseLevel: "+readparam(11,""+strcharinfo(0,$@partymembercid[.@l]));
				debugmes "Repeat Counter: "+getvar(getd("DG_"+.@dg_id[@d]+"_RepeatCT"),$@partymembercid[.@l]);
				debugmes "Repeat Timer: "+getvar(getd("DG_"+.@dg_id[@d]+"_RepeatTimer"),$@partymembercid[.@l]);
				if( isloggedin($@partymemberaid[.@l],$@partymembercid[.@l]) == 1 && ( (readparam(11,""+strcharinfo(0,$@partymembercid[.@l])) < .@req_lvl[@d]) || (getvar(getd("DG_"+.@dg_id[@d]+"_RepeatCT"),$@partymembercid[.@l]) >= .@rep[@d]) ) ) 
					set .@l_ct,.@l_ct + 1;
				
				// Reseting Repeat Limit in case the Timer has been reached
				if(getvar(getd("DG_"+.@dg_id[@d]+"_RepeatTimer"),$@partymembercid[.@l]) <= gettimetick(2)) {
					setd("DG_"+.@dg_id[@d]+"_RepeatTimer"),0,$@partymembercid[.@l];
					setd("DG_"+.@dg_id[@d]+"_RepeatCT"),0,$@partymembercid[.@l];
				}
			}
			*/
			set .@pty_id,getcharid(1);
			addrid(1,0,.@pty_id);
			if(getcharid(1) == .@pty_id)
				set .@l_ct,.@l_ct + 1;
			debugmes "Party Member Counter via addrid: "+.@l_ct;
			
			next;
			mes .n$;
			if(.@l_ct > 0) {
				mes "It seems like "+.@l_ct+" of your members either haven't reached the required level or reached the repeat limit for this dungeon.";
				mes "Please choose either a different dungeon or try to level up your members.";
				mes "The minimum level for this dungeon is "+.@req_lvl[@d]+"!";
				close;
			}
		}
		mes "Well done, you have passed all checks.";
		mes "You"+ ( (getcharid(1) != 0)?"r party":"")+" will recieve an bonus of "+.exp[.@diff[@d]]+"%."; 
		mes "But before you can enter an dungeon, you can accept more quests first, therefore talk to me again and choose \"Quest Board\"";
		close2;
		// Inserting Data in the Database `dqs_party`
		query_sql "INSERT INTO `dqs_party` ( `dg_id` , `"+ ( (getcharid(1) == 0)?"char_id":"pty_id")+"` , `quest_id` , `start` ) VALUES ( '"+.@dg_id+"' , '"+ ( (getcharid(1) == 0)?getcharid(0):getcharid(1))+"' , '1' , '1' )";
		break;
		
		// ============ Quest Board ============ //
		case 2:
		mes .n$;
		// Check if player/party is registered for dungeon
		if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` = '1'",.@dg_id) == -1) {
			mes "I'm sorry, but you didn't register"+ ( (getcharid(1) != 0)?" your party":"")+" for an dungeon yet.";
			mes "Come back, when you have done that first.";
			close;
		}
		mes " --- Dungeon Quest - Information: ---";
		mes "Type: Default Quest";
		// Quest Details
		mes "Condition: Complete the dungeon by talking to the Exit NPC.";
		query_sql "SELECT `difficulty` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id+"'",.@diff;
		mes "Reward: "+.dg_pts*.@diff+"x Dungeon Points";
		next;
		mes .n$;
		query_sql "SELECT DISTINCT `quest_id` , `quest_type` , FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"'",.@q_id,.@q_type;
		if(getarraysize(.@q_id) < 1) {
			mes "I'm sorry, but I currently don't have any additional quests for you.";
			mes "But if you are allowed to enter the dungeon until additional quests are available.";
			close;
		}
		for ( set .@q,0; .@q < getarraysize(.@q_id); set .@q,.@q + 1) {
			set .@que_id,0; // Resetting variable
			if(query_sql("SELECT `quest_id` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' LIMIT 1",.@que_id) == -1)
				setarray .@que$[.@q],"^00FFFFNew";
			else 
				setarray .@que$[.@q],"^FF0000Running";
			debugmes "Recieving Status of Quest: "+.@que$[.@q];
			set .@q_list$,.@q_list$ + "- #"+.@q_id[.@q]+" ("+ ( (.@q_type[.@q] == 1)?"Monster Hunting":"Item Collecting")+") ["+.@que$[.@q]+"^000000]" + ( (.@q_id[.@q+1] != 0)?":":"");
		}
		mes "Please choose the quest from below you want to accept/abort or look at your progress.";
		mes "Format:";
		mes "Quest_ID (Quest Type) [Quest Status]";
		next;
		set .@q_c,select(.@q_list$) - 1;
		mes .n$;
		mes " --- Quest #"+.@q_id[.@q_c]+" - "+ ( (.@que[.@q_c] != -1)?"Progress":"Information")+": ---";
		mes "Type: "+( (.@q_type[.@q_c] == 1)?"Monster Hunting":"Item Collecting");
		// Quest Details
		if(.@q_type[.@q_c] == 1)
			query_sql "SELECT `mob_id` , `mob_am` , `reward_id` , `reward_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req1,.@req2,.@rew_id,.@rew_am;
		else
			query_sql "SELECT `item_id` , `item_am` , `reward_id` , `reward_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req1,.@req2,.@rew_id,.@rew_am;
		for ( set .@l,0; .@l < getarraysize(.@req1); set .@l,.@l + 1) 
			mes "- "+.@req2[.@l]+"x "+ ( (.@q_type[.@q_c] == 1)?strmobinfo(1,.@req1[.@l]):getitemname(.@req1[.@l]) );
		mes "Reward:";
		mes .@rew_am+"x "+( (.@rew_id == 1)?"Zeny": ( (.@rew_id == 2)?"Cash Points":getitemname(.@rew_id)));
		mes " ";
		mes "What do you like to do now?";
		mes "Note: \"Get Reward\" is available only when you didn't have enough space/weight for the items when completing an quest.";
		next;
		if(.@que[.@q_c] == -1) {
			select("- Accept:- Nevermind");
			if(@menu == 2) set .@s,5; else set .@s,@menu;
		} else
			set .@s,select("- Abort:- Progress:- Get Reward:- Nevermind") + 1;

		switch(.@s) {
			
			// Accept Quest 
			case 1:
			mes .n$;
			mes "You have accepted the quest.";

			query_sql "INSERT INTO `dqs_party` ( `dg_id` , `"+ ( (getcharid(1) == 0)?"char_id":"pty_id")+"` , `quest_id` ) VALUES ( '"+.@dg_id+"' , '"+ ( (getcharid(1) == 0)?getcharid(0):getcharid(1))+"' , '"+.@q_id[.@q_c]+"' )";
			if(.@q_type[.@q_c] == 1) // Monster Hunting
				for ( set .@a,0; .@a < getarraysize(.@req1); set .@a,.@a + 1)
					query_sql "UPDATE `dqs_party` SET `mob_id` = '"+.@req1[.@a]+"' , `req_am` = '"+.@req2[.@a]+"' WHERE `dg_id` = '"+.@dg_id+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'";
			break;
			
			// Abort Quest
			case 2:
			mes .n$;
			mes "Do you really want to abort the quest?";
			if(select("- Yes:- No") - 1) close;
			next;
			mes .n$;
			mes "Quest has been aborted.";
			if(.@q_type[.@q_c] == 1) // Monster Hunting
			for ( set .@a,0; .@a < getarraysize(.@req1); set .@a,.@a + 1)
				query_sql "SELECT `mob_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req2;
			
			query_sql "DELETE FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
			break;
			
			// Check Progress
			case 3:
			mes .n$;
			mes "Let's see, if you have completed the target....";
			if(.@q_type[.@q_c] == 1)
				query_sql "SELECT `mob_id` , `mob_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req1,.@req2;
			else
				query_sql "SELECT `item_id` , `item_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req1,.@req2;
			
			for ( set .@p,0; .@p < getarraysize(.@req1); set .@p,.@p + 1) {
				if(.@q_type[.@q_c] == 1)
					// Selecting the latest value in the database
					query_sql "SELECT `mob_am` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `mob_id` = '"+.@req1[.@p]+"'",.@am;
				else 
					if(getcharid(1) != 0) {
						addrid(1,getcharid(1));
						set .@am,.@am + countitem(.@req1[.@p]);
					} else 
						set .@am,countitem(.@req1[.@p]);
				
				if(.@am < .@req2[.@p]) set .@f,.@f + 1;
			}
			for ( set .@l,0; .@l < getarraysize(.@req1); set .@l,.@l + 1) 
				mes "- "+ ( (.@q_type[.@q_c] == 1)?strmobinfo(1,.@req1[.@l]):getitemname(.@req1[.@l]) )+": "+.@am+"/"+.@req2[.@l];
			mes " ";
			if(.@f) {
				mes "You didn't finish "+.@f+" target"+( (.@f == 1)?"":"s")+". Please come back, when you have finished those.";
				close;
			}
			
			next;
			// Removing quest items from inventory
			if(.@q_type[.@q_c] == 2)
				for ( set .@r,0; .@r < getarraysize(.@req1); set .@r,.@r + 1) 
					delitem .@req1[.@l],.@req2[.@l];
		
			mes .n$;
			break;
			
			// Get Reward
			case 4:
			mes .n$;
			if(getd("Rew_ID_"+.@q_id[.@q_c]) == 0) close;
			if(checkweight(getd("Rew_ID_"+.@q_id[.@q_c]),getd("Rew_AM_"+.@q_id[.@q_c])) == 1) 
				getitem .@rew_id,.@rew_am; 			
			dispbottom "You have recieved "+.@rew_am+"x "+( (.@rew_id == 1)?"Zeny": ( (.@rew_id == 2)?"Cash Points":getitemname(.@rew_id)));			
			setd("Rew_ID_"+.@q_id[.@q_c]),0;
			setd("Rew_AM_"+.@q_id[.@q_c]),0;
			close;
			
			// Nevermind
			case 5:
			close;			
		}
		mes "You have completed the quest, here is your reward!!";
		query_sql "SELECT `reward_id` , `reward_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@rew_id,.@rew_am;
		query_sql "DELETE FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
			
		if(getcharid(1) != 0)  
			addrid(1,0,getcharid(1));
				
		switch(.@rew_id) {
			case 1: set Zeny,Zeny + .@rew_am; break;
			case 2: set #CASHPOINTS,#CASHPOINTS + .@rew_am; break;
			default: 
			if(checkweight(.@rew_id,.@rew_am) == 1) 
				getitem .@rew_id,.@rew_am; 
			else {
				mes "It seems like you can't carry more items, than you already do. You have to remove some weight before you can recieve your reward.";
				mes "Please come back to me, when you have done that.";
				setd("Rew_ID_"+.@q_id[.@q_c]),.@rew_id;
				setd("Rew_AM_"+.@q_id[.@q_c]),.@rew_am;
			}
		}
		if(getd("Rew_ID_"+.@q_id[.@q_c]) != 0)
			dispbottom "You have recieved "+.@rew_am+"x "+( (.@rew_id == 1)?"Zeny": ( (.@rew_id == 2)?"Cash Points":getitemname(.@rew_id)));			
		break;

		// ============ Warp Service ============ //
		case 3:
		mes .n$;
		// Check if player/party is registered for dungeon
		if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` = '1'",.@dg_id) == -1) {
			mes "I'm sorry, but you didn't register"+ ( (getcharid(1) != 0)?" your party":"")+" for an dungeon yet.";
			mes "Come back, when you have done that first.";
			close;
		}
		mes "I will warp you "+ ( (getcharid(1) != 0)?"and your party ":"")+"now to the "+.@name$[@d]+ ( (compare(.@name$[@d],"Dungeon") == 1)?" ":" Dungeon ");
		close2;
		query_sql "SELECT `map_name` , `map_x` , `map_y` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id+"' AND `floor` = '1'",.@map$,.@map_x,.@map_y;
		// Warping Party ...
		if(getcharid(1) != 0) 
			warpparty .@map$+".gat",.@map_x,.@map_y,getcharid(1);
		else
			warp .@map$+".gat",.@map_x,.@map_y;
	
		break;
		
		// Complete Dungeon
		case 4:
		mes .n$;
		// Check if player/party is registered for dungeon
		if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` = '1'",.@dg_id) == -1) {
			mes "I'm sorry, but you didn't register"+ ( (getcharid(1) != 0)?" your party":"")+" for an dungeon yet.";
			mes "Come back, when you have done that and actually completed it first.";
			close;
		}
		// Checking if there are still uncompleted quests
		if(query_sql("SELECT `quest_id` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` != '1'",.@q_id) != -1) {
			mes "You"+ ( (getcharid(1) != 0)?"r party":"")+" still have quests to complete.";
			close;
		}
		// Checking if dungeon was completed
		query_sql "SELECT `rew_id` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '1' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",.@rew_id;
		if(.@rew_id != 1) {
			mes "You"+ ( (getcharid(1) != 0)?"r party":"")+" didn't complete the dungeon yet.";
			mes "Please come back, when it's done.";
			close;
		}
		
		/*
		Adding Repeat Counter + Timer when reached
		Reward
		Announce Party/Player completed .... Dungeon?
		Deleting database entried from `dqs_party`
		*/
		break;
	}
	break;
	
	// Information
	case 2:
	mes .n$;
	mes "So you want some information about the Dungeon Quest Service, huh?!";
	mes "Good, then I will start the main steps first:";
	next;
	mes "[ === Register === ]";
	mes "To use the Dungeon Quest Service, you can have enter either alone or as a party with a minimum of 2 online members.";
	mes "After you have chosen the dungeon you want to enter, you can accept, if available, additional quests to earn extra rewards.";
	mes "To do so, just choose \"Quest Board\" in the \"Dungeon Menu\".";
	next;
	mes "[==== Quests ====]";
	mes "There are 2 types of quests you can accept:";
	mes "- Monster Hunting";
	mes "- Item Collecting";
	mes " ";
	mes "[ === Quest Rewards ===]";
	mes "- Zeny";
	mes "- Cash Points";
	mes "- Items";
	mes " ";
	mes "[== Custom @Command ==]";
	mes "To help you, to check your quest progress anytime and anywhere, there is an custom @command: \"@checkdg\".";
	next;
	mes "[== Warp Service ==]";
	mes "I also offer you an Warp Service to the Dungeon Entrances by choosing \"Warp Service\".";
	mes "But that's not all, I also can warp you to Party Members, which are inside of the Dungeon or to the \"Check Point\", which is usually the beginning of the Dungeon Floor.";
	mes " ";
	mes "In the case you don't want to enter alone, but don't have players you can party up with, you can join an existing party, just choose \"Join\" when you want to \"Register\".";
	mes "I will send therefore to the party leader of the chosen party an info containing of your name, level and class.";
	mes "He/She can decide then if want to accept your application or not.";
	next;
	mes "[ === Dungeons === ]";
	mes "Each Dungeon has it's own Difficulty, Level Requirement and Repeat Limit.";
	mes "After every completion the Repeat Limit for that Dungeon will increase and when it has been reached and Repeat Delay becomes active.";
	mes "This Repeat Delay is only affecting you, not the dungeon.";
	next;
	mes "[ === Difficulty & EXP Bonus ===]";
	mes "I will now list the EXP Bonus of the various Difficulties:";
	mes "Easy: "+.exp[1]+"%";
	mes "Medium: "+.exp[2]+"%";
	mes "Hard: "+.exp[3]+"%";
	next;
	if(.dg_pts > 0) {
		mes "[ === Dungeon Rewards === ]";
		mes "Completing an Dungeon also rewards you with special \"Dungeon Points\", which can be exchanged against items.";
		mes "Choose \"Points Exchanger\" in the first menu for that.";
		mes "The base points you can gain for each Dungeon is "+.dg_pts+" and will be multiplied by the Dungeons Difficulty:";
		mes "\"1\" for Easy, by \"2\" for Medium, by \"3\" for Hard.";
		next;
	}
	if(.mvp_pts > 0) {
		mes "[ === MvP Rewards === ]";
		mes "Killing MvP's rewards you with special \"MvP Points\", which can be exchanged against items.";
		mes "Choose \"Points Exchanger\" in the first menu for that.";
		mes "The base points you can gain for each slain MvP is "+.mvp_pts+" and will be multiplied by the Dungeons Difficulty:";
		mes "\"1\" for Easy, by \"2\" for Medium, by \"3\" for Hard.";
		next;
	}
	mes .n$;
	mes "So that's all I can tell you about my service.";
	mes "See you again.";
	break;
	
	// Point Exchanger 
	case 3:
	if(!.dg_pts) break;
	mes .n$;
	mes "Which points do you want to exchange?";
	mes "Your Dungeon Points: "+getd(""+.dg_var$);
	mes "Your MvP Points: "+getd(""+.mvp_var$);
	next;
	switch(select("- Dungeon Points:- MvP Points")) {
		
		case 1:
		mes .n$;
		mes "Please choose the item you want your points to exchange to:";
		mes "Format: Amount x Item (Price per Exchange)";
		next;
		set .@b,select(.ex_m$) - 1;
		mes .n$;
		mes "You have selected "+.dg_ex_am+"x "+getitemname(.dg_ex[.@b])+".";
		mes "Is that correct?";
		if(select("- Yes:- No") - 1) close;
		next;
		mes .n$;
		mes "Now type the how often you want to exchange:";
		mes "Price per exchange: "+.dg_ex_cost[.@b];
		mes "Your Dungeon Points: "+getd(""+.dg_var$);
		// Setting exchange limit based on the current points you have
		set .@l,(getd(""+.dg_var$)/.dg_ex_cost[.@b]);
		mes "Maximum possible: "+.@l+", based on your current points.";
		next;
		if(input(.@buy,1,.@l) != 0) {
			mes .n$;
			mes "It seems like you put either a 0 or more than "+.@l+", which is the maximum you could exchange based on your points.";
			close;
		}
		mes .n$;
		getitem .dg_ex[.@b],.dg_ex_am[.@b];
		setd(""+.dg_var$),getd(""+.dg_var$) - (.@buy*.dg_ex_cost[.@b]);
		mes "Your exchange has been completed.";
		mes "See you again for the next exchange.";
		break;
		
		case 2:
		mes .n$;
		if(!.mvp_rew) {
			mes "I'm sorry, but this exchange service is not currently available duo the fact MvP Points not being gainable.";
			mes "Please come back another time.";
			close;
		}
		mes "Please choose the item you want your points to exchange to:";
		mes "Format: Amount x Item (Price per Exchange)";
		next;
		set .@b,select(.ex_mvp_m$) - 1;
		mes .n$;
		mes "You have selected "+.mvp_ex_am+"x "+getitemname(.mvp_ex[.@b])+".";
		mes "Is that correct?";
		if(select("- Yes:- No") - 1) close;
		next;
		mes .n$;
		mes "Now type the how often you want to exchange:";
		mes "Price per exchange: "+.mvp_ex_cost[.@b];
		mes "Your MvP Points: "+getd(""+.mvp_var$);
		// Setting exchange limit base on the current points you have
		set .@l,(getd(""+.mvp_var$)/.mvp_ex_cost[.@b]);
		mes "Maximum possible: "+.@l+", based on your current points.";
		next;
		if(input(.@buy,1,.@l) != 0) {
			mes .n$;
			mes "It seems like you put either a 0 or more than "+.@l+", which is the maximum you could exchange based on your points.";
			close;
		}
		mes .n$;
		getitem .mvp_ex[.@b],.mvp_ex_am[.@b];
		setd(""+.mvp_var$),getd(""+.mvp_var$) - (.@buy*.mvp_ex_cost[.@b]);
		mes "Your exchange has been completed.";
		mes "See you again for the next exchange.";
		break;
	}
	break;
	
	// Nevermind
	case 4:
	break;
	}
close;


// GM Control Center
OnGMAccess:
mes .n$;
mes "Hello, "+strcharinfo(0)+"!";
mes "How can I help you?";
next;
switch(select("- System Settings:- Dungeon Management:- Quest Management:- Dungeon Points Management:- Nevermid")) {

	// System Settings = OnInit
	case 1:
	
	
	break;
	
	// Dungeon Management
	case 2:
	/*
	Overview as Text: 
	- Amount of Dungeons
	
	query_sql "SELECT `dg_id`, `name` , count ( `floor` ) FROM `dqs_dungeon` GROUP BY `dq_id` ASC",.@dg_id,.@dg_name$,.@floor;
	mes "Dungeon ID - Dungeon Name - Floor Quantity";
	for ( set .@d,0; .@d < getarraysize(.@dg_id); set .@d,.@d + 1)
		mes .@dg_id[.@d]+" - "+.@dg_name$[.@d]+" - "+.@floor[.@d];
		
	switch Menu:
	> Add Dungeon
		- Selecting latest Dungeon ID
		- ...
	> Edit Dungeon
	   - Selecting Dungeon
	   - Edit Options:
	     + Name
		 + Difficulty
		 + Required Level
		 + Map Settings
		   * Add Map
		   * Edit Map
		   * Delete Map
		 + Party Limit
		 + Repeat Limit 
		 + Change Status
		   
	> Remove Dungeon
	   - Selecting Dungeon
	   - Removing
	*/
	break;
	
	// Quest Management 
	case 3:
	/*
	Overview as Text: 
	- Amount of Quests Total
	
	query_sql "SELECT DISTINCT count ( `quest_id` ) FROM `dqs_list`",.@q_total;

	- Amount of Quests each Dungeon:
	query_sql "SELECT `DISTINCT dg_id`, `name` , count ( `quest_id` ) FROM `dqs_list` GROUP BY `dq_id` ASC",.@dg_id,.@dg_name$,.@@q_ct;
	mes "Dungeon ID - Dungeon Name - Quest Quantity";
	for ( set .@q,0; .@q < getarraysize(.@dg_id); set .@q,.@q + 1)
		mes .@dg_id[.@q]+" - "+.@dg_name$[.@q]+" - "+.@q_ct[.@q];
	
	switch Menu:
	> Add
		- Selecting latest Quest ID
		- ...
	> Edit
	   - Selecting Quest
	   - Edit Options:
	> Remove
	   - Selecting Quest
	   - Removing
	   
	   
	Quest ID 1 = Dungeon Quest
	Quest Type = 3
	Quest Info = "Complete the dungeon by talking to the Exit NPC."
	Quest can't be aborted or deleted from the database via ingame menu.
	Quest Reward = Dungeon Points * Dungeon Difficulty
	*/
	break;
	
	// Dungeon Points Management
	case 4:
	/*
	switch Menu:
	> Reward Settings
		- Dungeon Points
			+ Base Points (=0:Off,1+:Value gained)
			+ Dungeon Variable
		- MvP Points
			+ Base Points (=0:Off,1+:Value gained)
			+ MvP Variable
	> Exchanger Settings
		- Add
			+ Choosing Item ID
			+ Costs per Exchange
			+ Amount gained per Exchange
		- Edit
			+ Selecting Array Index via menu
			+ Edit Options:
				* Item ID
				* Cost
				* Amount
		> Remove
			- Selecting Array Index via menu
			- Removing
	*/
	break;
	
	case 5:
	break;
}
close;

OnInit:
// Dungeon Quest System not loaded yet
set $@DQS_Sys,0;
// =============== NPC Name ===============
set .n$,"["+strnpcinfo(1)+"]";
// =============== Debug Mode ===============
// * (Debug Messages in Map Server)
// > 0: Off
// > 1: On 
set .debug,0;
set .gm,80; // GM Access Level 
// ============== Dungeon Settings ================== //
setarray .exp[1],50,100,150; // EXP Rate in % for Difficulty: Easy/Medium/Hard
// Server Array Limit
// > rAthena since commit 6295c77 (Script Engine Upgrade):
// = 2000000000000 (2 Billion)
// > Others/Default: 128
set .array,2000000000000;
// ==== Dungeon Delay Settings ======
// * Max Dungeon Limit:
// (How often an dungeon can be done till the delay below comes active)
// Note: Don't use 0, that's used in the dungeon managementn
set .dg_max_limit,1000;
// * Type:
// - 1: Hour
// - 2: Day
// - 3: Week
// - 4: Month
set .dg_del_type,2;
// * Calculation Values values in seconds
// Note: This values will be multiplied by Dungeon Difficulty later on.
switch(.q_del_type) {
	case 1: set .dg_delay,3600; break;
	case 2: set .dg_delay,86400; break;
	case 3: set .dg_delay,604800; break;
	case 4: set .dg_delay,2592000; break;
}
// ===== Quest Settings =====
// Minimum and Maximum Mob Amount
set .mob_min,1;
set .mob_max,10;
// Maximum Mobs you can hunt at the same time
set .mob_ct,3;
// Level Restriction
set .level,MAX_LEVEL; // 0 = Off / MAX_LEVEL - Server Max Level (src/map/map.h)
// Minimum and Maximum Item Amount
set .item_min,1;
set .item_max,200;
// Maximum Items you can collect at the same time
set .item_ct,5;
// ==== Reward Settings per Quest ====
// * Maximum Zeny Amount
set .rew_zeny,10000000; // 10m Zeny
// * Maximum Cash Points Amount
set .rew_cash,1000;
// * Maximum Item Amount
set .rew_item,10000;
// * Maximum Item Weight
// (= Item Weight* Reward Amount)
set .rew_weight,10000;
// ========================
// Dungeon Reward > 0 = Off, 1+ = Base Dungeon Quest Points, will be multiplied by Difficulty
set .dg_pts,10; 
if(.dg_pts > 0) {
	set .dg_var$,"DQG_Pts";
	// Dungeon Points Exchanger:
	// > Item IDs 
	setarray .dg_ex[0],512;
	// > How many items you get per exchange?
	setarray .dg_ex_am[0],10;
	// > How much does one exchange cost?
	setarray .dg_ex_cost[0],2;
	// Creating exchange menu
	for ( set .@m,0; .@m < getarraysize(.dg_ex); set .@m,.@m + 1)
		set .ex_m$,.ex_m$ + "- "+.dg_ex_am[.@m]+"x "+getitemname(.dg_ex[.@m])+" ("+.dg_ex_cost[.@m]+")"+ ( (.dg_ex[.@m+1] != 0)?":":"");
	
}
// MvP Reward for each MvP > 0 = Off, 1+ = Base MvP Points, will also be multiplied by Difficulty
set .mvp_pts,1; 
if(.mvp_pts > 0) {
	set .mvp_var$,"DMvP_Pts";
	// MvP Points Exchanger:
	// > Item IDs 
	setarray .mvp_ex[0],512;
	// > How many items you get per exchange?
	setarray .mvp_ex_am[0],10;
	// > How much does one exchange cost?
	setarray .mvp_ex_cost[0],2;
	for ( set .@m,0; .@m < getarraysize(.mvp_ex); set .@m,.@m + 1)
		set .ex_mvp_m$,.ex_mvp_m$ + "- "+.mvp_ex_am[.@m]+"x "+getitemname(.mvp_ex[.@m])+" ("+.mvp_ex_cost[.@m]+")"+ ( (.mvp_ex[.@m+1] != 0)?":":"");
}
/*
// =============== Dungeon Names ===============
setarray .dungn$[0],"Cursed Abbey","Aldebaran Dungeon","Abyss Lake","Amatsu Dungeon","Ayothaya Dungeon","Bylan","Clock Tower","Coal Mine","Culvert","Einbech Dungeon","Gefenia","Geffen Dungeon","Glast Heim","Gonyrun Dungeon","Ice Dungeon","Labyrinth","Juperos","Kiel Academy","Lightalzen Bio Lab","Louyang Dungeon","Magma Dungeon","Odin Temple","Orc Dungeon","Payon Dungeon","Pyramid Dungeon","Sphinx Dungeon","Sunken Ship Dungeon","Thanatos Tower","Toy Factory Dungeon","Turtle Dungeon","Thor Volcano Dungeon";
// =============== Dungeon Prefixes ===============
setarray .dungpre$[0],"abbey","alde","abyss","amat","ayot","bylan","c_tow","coal","culv","einb","gefia","gefd","glas","gonr","iced","maze","jupe","kiel","lhz","louy","magma","odin","orcsd","pay","pyram","sphinx","pirate","thana","toy","turtle","thor_v";
// =============== Dungeon Data ===============
// = Format: Difficulty ,Level Requirement, Map Name Level 1, Map X, Map Y,....
// = Difficulty: 1 = Easy, 2 = Medium, 3 = Hard
// = Level: 1 = None, 2+ = Requirement

// Auto Insert in the database > for myself
for ( set .@i,0; .@i < getarraysize(.dungn$); set .@i,.@i + 1)
	for ( set .@d,2; .@d < getarraysize(getd("."+.dungpre$[.@i]+"$")); set .@d,.@d + 3) 
		query_sql "INSERT INTO `dqs_dungeon` ( `dq_id` , `name` , `difficulty` , `req_level` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` ) VALUES ( '"+(.@i+1)+"' , '"+.dungn$[.@i]+"' , '"+getd("."+.dungpre$[.@i]+"$[0]")+"' , '"+getd("."+.dungpre$[.@i]+"$[1]")+"' , '"+((.@d+1)/3)+"' , '"+getd("."+.dungpre$[.@i]+"$["+.@d+"]")+"' , '"+getd("."+.dungpre$[.@i]+"$["+(.@d+1)+"]")+"' , '"+getd("."+.dungpre$[.@i]+"$["+(.@d+2)+"]")+"' , '3' , '1' )";

query_sql "INSERT INTO `dqs_dungeon` ( `dq_id` , `name` , `difficulty` , `req_level` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` ) VALUES ( '1' , 'Cursed Abbey' , '2' , '60' , '1' , 'abbey01' , '51' , '14' , '3' )";
query_sql "INSERT INTO `dqs_dungeon` ( `dq_id` , `name` , `difficulty` , `req_level` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` ) VALUES ( '1' , 'Cursed Abbey' , '2' , '60' , '2' , 'abbey02' , '150' , '11' , '3' )";
query_sql "INSERT INTO `dqs_dungeon` ( `dq_id` , `name` , `difficulty` , `req_level` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` ) VALUES ( '1' , 'Cursed Abbey' , '2' , '60' , '3' , 'abbey03' , '120' , '10' , '3' )";


setarray .abbey$[0],"1","1","abbey01","51","14","abbey02","150","11","abbey03","120","10";
setarray .alde$[0],"1","1","alde_dun01","197","25","alde_dun02","262","41","alde_dun03","276","53","alde_dun04","130","130";
setarray .abyss$[0],"1","1","abyss_01","264","271","abyss_02","275","270","abyss_03","116","27";
setarray .amat$[0],"1","1","ama_dun01","227","10","ama_dun02","32","43","ama_dun03","119","15";
setarray .ayot$[0],"1","1","ayo_dun01","9","149","ayo_dun02","230","235";
setarray .bylan$[0],"1","1","iz_dun00","168","168","iz_dun01","41","37","iz_dun02","236","204","iz_dun03","32","63","iz_dun04","26","27";
setarray .c_tow$[0],"1","1","c_tower1","200","163","c_tower2","268","26","c_tower3","64","148","c_tower4","32","63";
setarray .coal$[0],"1","1","mjo_dun01","52","17","mjo_dun02","381","343","mjo_dun03","302","261";
setarray .culv$[0],"1","1","prt_sewb1","132","248","prt_sewb2","19","19;","prt_sewb3","180","169","prt_sewb4","100","92","20";
setarray .einb$[0],"1","1","ein_dun01","22","18","ein_dun02","292","290";
setarray .gefia$[0],"1","1","gefenia01","59","167","gefenia02","201","35","gefenia03","264","236","gefenia04","33","270";
setarray .gefd$[0],"1","1","gef_dun00","104","100","gef_dun01","115","236","gef_dun02","106","132","gef_dun03","203","200";
setarray .glas$[0],"1","1","gl_church","156","8","gl_chyard","147","15","gl_in01","121","59","gl_cas01","199","29","gl_cas02","104","25","gl_knt01","150","10","gl_knt02","157","287","gl_step","117","124","gl_sew01","258","255","gl_sew01","258","255","gl_sew02","108","291","gl_sew03","171","273","gl_dun01","133","271","gl_dun02","224","274","gl_prison","14","70","gl_prison1","150","14";
setarray .gonr$[0],"1","1","gon_dun01","143","59","gon_dun02","17","114","gon_dun03","68","9";
setarray .iced$[0],"1","1","ice_dun01","157","14","ice_dun02","151","155","ice_dun03","149","22","ice_dun04","34","139";
setarray .maze$[0],"1","1","prt_maze01","176","7","prt_maze02","103","18","prt_maze03","23","8";
setarray .jupe$[0],"2","65","juperos_01","99","92","juperos_02","34","59","jupe_core","150","285";
setarray .kiel$[0],"2","1","kh_dun01","28","226","kh_dun02","41","198";
setarray .lhz$[0],"2","60","lhz_dun01","151","286","lhz_dun02","18","148","lhz_dun03","140","136";
setarray .louy$[0],"2","50","lou_dun01","218","196","lou_dun02","282","20","lou_dun03","165","37";
setarray .magma$[0],"2","60","mag_dun01","126","69","mag_dun02","47","32";
setarray .odin$[0],"3","70","odin_tem01","98","144","odin_tem02","22","181","odin_tem03","121","51";
setarray .orcsd$[0],"1","1","orcsdun01","32","169","orcsdun02","21","185";
setarray .pay$[0],"1","1","pay_dun00","22","180","pay_dun01","19","33","pay_dun02","19","63","pay_dun03","155","159","pay_dun04","201","204";
setarray .pyram$[0],"1","1","moc_pryd01","192","9","moc_pryd02","10","192","moc_pryd03","100","92","moc_pryd04","181","11","moc_pryd05","94","96","moc_pryd06","192","8";
setarray .sphinx$[0],"1","1","in_sphinx1","192","9","in_sphinx2","149","81","in_sphinx3","210","54","in_sphinx4","10","222","Level 5","in_sphinx5","100","99";
setarray .pirate$[0],"1","1","treasure01","69","24","treasure02","102","27";
setarray .thana$[0],"1","1","tha_t01","150","36","tha_t02","150","36","tha_t03","220","158","tha_t04","59","143","tha_t05","62","11","tha_t06","89","221","tha_t07","35","166","tha_t08","93","148","tha_t09","29","107","tha_t10","159","138","tha_t11","19","20","tha_t12","130","52","5";
setarray .toy$[0],"1","40","xmas_dun01","205","16","xmas_dun02","129","133";
setarray .turtle$[0],"2","50","tur_dun01","161","34","tur_dun02","148","256","tur_dun03","132","190","tur_dun04","100","192";
setarray .thor_v$[0],"3","90","thor_v01","21","228","thor_v02","75","205","thor_v03","34","272";
*/
// Use Mapflags?
// 0 = Disabled
// 1 = Enabled
set .dg_mf,1;
// Put the mapflags here
setarray .mapflags[0],mf_nowarp,mf_partylock;

if(.dg_mf) {
	query_sql "SELECT `map_name` FROM `dqs_dungeon`",.@map_name$;
	for ( set .@m,0; .@m < getarraysize(.@map_name$); set .@m,.@m + 1)
		for ( set .@mf,0; .@mf < getarraysize(.mapflags); set .@mf,.@mf + 1)
			setmapflag .@map_name$[.@m],.mapflags[.@mf];
}
query_sql "SHOW TABLES LIKE 'dqs_list'",$@dqs_tab$;
if($@dqs_tab$[0] != "") 
	set $@DQS_Sys,1;

// Custom atcommand: @checkdq
bindatcmd "checkdg",strnpcinfo(1)+"::OnPCLoginEvent";
if(.debug) debugmes "Starting Global Timer for Party Member Sync";
initnpctimer; // Timer for for Party Check
announce .n$+": Dungeon Quest Service: "+ ( ($@DQS_Sys == 1)?"Online":"Offline"),bc_all|bc_yellow;
end;

OnNPCKillEvent:
if(!$@DQS_Sys) end;
if(!@cp)
	query_sql "SELECT `dg_id` , `start` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",@dg_id,@cp;
if(@map$ == "")
	query_sql "SELECT `difficulty` , `map_name` FROM `dqs_dungeon` WHERE `dg_id` = '"+@dg_id+"' AND `floor` = '"+@cp+"'",.@diff,@map$;
if(strcharinfo(3) != @map$)
	if(query_sql("SELECT `floor` FROM `dqs_dungeon` WHERE `dg_id` = '"+@dg_id+"' AND `map_name` = '"+strcharinfo(3)+"'",.@cp) > 0) 
		query_sql "UPDATE `dqs_dungeon` SET `floor` = '"+.@cp+"' WHERE `dg_id` = '"+@dg_id+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
	else 
		end;

query_sql "SELECT SUM( `req_am` ) , SUM( `mob_am` ) , `dg_id` , `quest_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `mob_id` = '"+killedrid+"'",.@req_am,.@mob_am,.@dg_id,.@q_id;
if( (.@mob_am + 1) <= .@req_am)
	for ( set .@m,0; .@m < getarraysize(.@dg_id); set .@m,.@m + 1) {
		// Updating SQL Table for Monster Hunting Quests
		query_sql "UPDATE `dqs_party` SET `mob_am` = `mob_am` + 1 WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `mob_id` = '"+killedrid+"' AND `mob_am` < '"+.@req_am+"' LIMIT 1";
		query_sql "SELECT `name` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id[.@m]+"'",.@n_name$,.@n_map$;
		dispbottom .@name$+": Monster Hunting - "+strmobinfo(1,killedrid)+" : "+(.@mob_am + 1)+"/"+.@req_am,0x00FF00;
	}
	
// Player is in a party
if(getcharid(1) != 0)
	addrid(1,getcharid(1));
	
// Reading EXP values from Mob Database
set .@expr,.exp[.@diff];
set .@bexp,(getmonsterinfo(killedrid,3)*.@expr)/100;
set .@jexp,(getmonsterinfo(killedrid,4)*.@expr)/100;
	
// Member is alive
if(readparam(5) < 1) continue;

getexp .@bexp,.@jexp;
dispbottom .n$+": Recieved Bonus: "+.@expr+"% - Base EXP: "+.@bexp+"/Job EXP: "+.@jexp,0x00FF00;
// Killed MvP > rewarding with points if .mvp_pts > 0
if(getmonsterinfo(killedrid,22) != 0 && .mvp_pts > 0) {
	setd(""+.mvp_var$),getd(""+.mvp_var$) + (.mvp_pts*.@diff); break;
	dispbottom .n$+": Recieved MVP Points: "+.@m_res+"x MvP Points.",0x00FF00;
}
end;

// OnLogin List and AtCommand
OnPCLoginEvent:
if(!$@DQS_Sys) end;
query_sql "SELECT DISTINCT `quest_id` , `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",.@q_id,.@dg_id;
set .@n$,"[Dungeon Quests]";
if(getarraysize(.@q_id) < 1) {
	dispbottom .@n$+": You don't have any active quests.";
	end;
}
dispbottom .@n$+": You have "+getarraysize(.@q_id)+" active Quests.";
dispbottom .@n$+": I will now list them per Dungeon:";
	
// Displaying Quest Progress
for ( set .@l,0; .@l < getarraysize(.@q_id); set .@l,.@l + 1) {
	if(.@q_id[.@l] == 1)  continue;
	dispbottom "  [* ====== Quest #"+.@q_id[.@l]+" - Progress: ====== *]  ";
	query_sql "SELECT `quest_type` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id[.@l]+"' AND `quest_id` = '"+.@q_id[.@l]+"'",.@q_type;
	dispbottom "  >  Type: "+( (.@q_type == 1)?"Monster Hunting":"Item Collecting");
	if(.@q_type == 1)
		query_sql "SELECT `mob_id` , `mob_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id[.@l]+"' AND `quest_id` = '"+.@q_id[.@l]+"'",.@req1,.@req2;
	else
		query_sql "SELECT `item_id` , `item_am` FROM `dqs_list` WHERE `dg_id` = '"+.@n_id[.@l]+"' AND `quest_id` = '"+.@q_id[.@l]+"'",.@req1,.@req2;
	
	for ( set .@p,0; .@p < getarraysize(.@req1); set .@p,.@p + 1)
		if(.@q_type == 1) {
			query_sql "SELECT `mob_am` FROM `dqs_party` WHERE `dg_id` = '"+.@n_id[.@l]+"' AND `quest_id` = '"+.@q_id[.@l]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `mob_id` = '"+.@req1[.@p]+"'",.@m_got;
			dispbottom "  >  Mob#"+(.@p+1)+": "+strmobinfo(1,.@req1[.@p])+" - "+.@m_got+"/"+.@req2[.@p];
		} else 
			dispbottom "  >  Item#"+(.@p+1)+": "+getitemname(.@req1[.@p])+" - "+countitem(.@req1[.@p])+"/"+.@req2[.@p];
	
end;

// Every 15th Minute, check if there are non-existent party entries in the database
OnTimer900000:
stopnpctimer;
if(.debug) debugmes "OnTimer Executed at 15 Minute:";
query_sql "SELECT `pty_id` FROM `dqs_party`",.@pty_id;
for ( set .@p,0; .@p < getarraysize(.@pty_id); set .@p,.@p + 1)
	if(query_sql("SELECT `party_id` FROM `party` WHERE `party_id` = '"+.@pty_id[.@p]+"'",.@p_id) == -1) {
		query_sql "DELETE FROM `dqs_party` WHERE `pty_id` = '"+.@pty_id[.@p]+"'";
		query_sql "DELETE FROM `dqs_app` WHERE `pty_id` = '"+.@pty_id[.@p]+"'";
	}

if(.debug) debugmes "Restarting Timer....";
initnpctimer;
end;

OnPCLogoutEvent:
if(!$@DQS_Sys) end;
if(!getcharid(1)) end; // Not in a party
// Not registered
if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",@dg_id) == -1)
	end;
if(getpartyleader(getcharid(1),1) != getcharid(3)) end; // Attached player is not party leader
if(.debug) debugmes "Party Leader logged off, changing leader:";
set .@pty_id,getcharid(1);
set .@pty_lead,getpartyleader(getcharid(1),1);
getpartymember(.@pty_id,1);
getpartymember(.@pty_id,2);
if(.debug) debugmes "Party ID: "+.@pty_id+", Party Leader Acc ID:"+ .@pty_lead;
for ( set .@p,0; .@p < $@partymembercount; set .@p,.@p + 1) {
	// Member is logged in and is not the current Party Leader
	if(isloggedin($@partymemberaid[.@p],$@partymembercid[.@p]) == 1 && $@partymemberaid[.@p] != .@pty_lead) {
		if(.debug) debugmes "Changing Leader of party "+.@pty_id+" to "+$@partymembercid[.@p];
		party_changeleader(.@pty_id,$@partymembercid[.@p]);
		break;
	}
}
end;
}

// ======================= Party Join Feature - NPC =====================
-	script	Party_Join	-,{

OnInit:
set .n$,getvariableofnpc(.n$,"Dungeon Quest Service");
end;

OnWhisperGlobal:
if(!$@DQS_Sys) end;
if(!getcharid(1)) end; // Not in a party
if(getmapflag(strcharinfo(3),mf_pvp) == 1 || getmapflag(strcharinfo(3),mf_gvg) == 1) end; // On PvP or GvG Maps = No effect
if(strcharinfo(0) != getpartyleader(getcharid(1))) end;
// Not registered
if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",@dg_id) == -1)
	end;

// List of the requesters
if(@whispervar0$ == "List" || @whispervar0$ == "list") {
	if(query_sql("SELECT `app_id` , `name` , `level` , `class` FROM `dqs_app` WHERE `pty_id` = '"+getcharid(1)+"'",.@app_id,.@name$,.@lvl$,.@class) == -1) {
		dispbottom .n$+": I'm sorry, but there are no applicants to list!",0x00FFFF;
		end;
	}
	dispbottom .n$+": I will now list the requesters, which want to join your party.",0x00FFFF;
	dispbottom .n$+": Each requester gets an number, like 1.<Name>.",0x00FFFF;
	dispbottom .n$+": With this number, you have to re-pm me, but instead of \"List\", you have to use \"Join\" or \"Abort\".\"Accept\" or \"Decline\" does also work.",0x00FFFF;
	dispbottom .n$+": After \"Join\"/\"Accept\" or \"Abort\"/\"Decline\", you have to add \"#<Number of requester>\".",0x00FFFF;
	dispbottom "===================";
	dispbottom "- Number: Name, Level:, Class",0xFF2200;
	for ( set .@r,0; .@r < getarraysize(.@app_id); set .@r,.@r + 1)
		dispbottom "- "+(.@r+1)+": "+.@name$[.@r]+", "+.@lvl$[.@r]+", "+jobname(.@class[.@r]),0xFF2200;
	
	dispbottom "===================";
	dispbottom .n$+": I will now list here your party members, also with a number, to warp the chosen player to that party member.",0x00FFFF;
	dispbottom .n$+": To let the player warp to one of your party members add after the number of the player \"#<Number of Member>\".",0x00FFFF;
	dispbottom .n$+": So it would look something like this: \"Join#1#1\", this would let the 1st requester in the list to the 1st party member, most cases you.",0x00FFFF;
	dispbottom .n$+": Note: If you use \"Abort\"/\"Decline\" the number of the party member won't take effect, of course.",0x00FFFF;
	dispbottom "===================";
	getpartymember(getcharid(1));
	set @partyct,$@partymembercount;
	copyarray @partymemb$[0],$@partymembername$[0],@partyct;
	dispbottom "- Number: Member Name:",0xFF2200;
	for ( set .@p,0; .@p < @partyct; set .@p,.@p + 1)
		if(isloggedin(getcharid(3,@partymemb$[.@p]),getcharid(0,@partymemb$[.@p])) == 1) // Member logged in?
			dispbottom "- "+(.@p+1)+"."+@partymemb$[.@p] + ( (@partymemb$[.@p] == getpartyleader(getcharid(1)))?" (Leader)":""),0xFF2200;

	dispbottom "===================";

// Accepting requesters
} else if(compare(@whispervar0$,"Accept") == 1 || compare(@whispervar0$,"Join") == 1) {
	if(@whispervar1$ == "" || @whispervar2$ == "") {
		dispbottom .n$+": Either you didn't put the requesters number or the number of the party member he should be warped to!";
		end;
	}
	// In case the leader logged of, the "@" variables were deleted
	if(@partymemb$[atoi(@whispervar2$)-1] == "") {
		dispbottom .n$+": An bug has occured, in which I couldn't find the list for your party members.";
		dispbottom .n$+": Possible Bug: You logged off or disconnected. Please repeat the previous step.";
		end;
	}
	query_sql "SELECT `app_id` , `name` , `level` , `class` FROM `dqs_app` WHERE `pty_id` = '"+getcharid(1)+"'",.@app_id,.@name$,.@lvl$,.@class;
	set .@nr,atoi(@whispervar1$)-1;
	message .@name$[.@nr],.n$+": Your join request has been accepted, you will be warped to the party member chosen from the leader.";
	party_addmember(getcharid(1),.@app_id[.@nr]);
	sleep2 2000;
	charcommand "#warpto \""+.@name$[.@nr]+"\" "+@partymemb$[atoi(@whispervar2$)-1];
		
	// Deleting applicant from application list
	query_sql "DELETE FROM `dqs_app` WHERE `app_id` = '"+.@app_id[.@nr]+"' AND `pty_id` = '"+getcharid(1)+"'";
	
// Declining requesters
} else if(compare(@whispervar0$,"Decline") == 1 || compare(@whispervar0$,"Abort") == 1) {
	if(@whispervar1$ == "") {
		dispbottom .n$+": You didn't put the requesters number!";
		end;
	}
	query_sql "SELECT `app_id` , `name` , `level` , `class` FROM `dqs_app` WHERE `pty_id` = '"+getcharid(1)+"'",.@app_id,.@name$,.@lvl$,.@class;
	set .@nr,atoi(@whispervar1$)-1;
	if(isloggedin(getcharid(3,.@name$[.@nr]),.@app_id[.@nr]) != 0)
		message .@name$[.@nr],.n$+": I'm sorry, but your join request has been declined.";
	dispbottom .n$+": The applicant ["+.@name$[.@nr]+"] has been deleted from the list.";
	
	// Deleting applicant from application list
	query_sql "DELETE FROM `dqs_app` WHERE `app_id` = '"+.@app_id[.@nr]+"' AND `pty_id` = '"+getcharid(1)+"'";

} else 
	dispbottom .n$+": I'm not sure, what you wanted from me, but I can't do that.";
	
end;
}

// ======================= Inside Dungeon NPC =====================
-	script	Dungeon Guard#main::DG_Main	110,{

set .@n$,"["+strnpcinfo(1)+"]";

mes .@n$;
if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `dg_id` = '"+strnpcinfo(2)+" AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",.@dg_id) == -1) {
	mes "You didn't register for the Dungeon Quest Service.";
	close;
}
mes .@n$;
mes "Do you really want to leave the dungeon?";
if(select("- Yes:- No") - 1) close;
next;
mes .@n$;
mes "You"+ ( (getcharid(1) != 0)?"r party":"")+" will now be warped to Prontera.";
query_sql "UPDATE `dqs_party` SET `rew_id` = '1' WHERE `dg_id` = '"+strnpcinfo(2)+" AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
close2;
if(getcharid(1) != 0)
	warpparty "prontera",156,191,getcharid(1);
else
	warp "prontera",156,191,getcharid(1);
end;
}
// ======================= Start of Dungeon Exit - NPC Duplicates =====================
//dungeon_map,x,y,facing	duplicate(DG_Main)	Dungeon Exit#<Dungeon ID>	110
abbey03,234,216,4	duplicate(DG_Main)	Dungeon Exit#1	110
abyss_03,98,103,4	duplicate(DG_Main)	Dungeon Exit#2	110
ama_dun03,120,223,4	duplicate(DG_Main)	Dungeon Exit#3	110
ayo_dun02,149,246,4	duplicate(DG_Main)	Dungeon Exit#4	110
iz_dun04,130,222,4	duplicate(DG_Main)	Dungeon Exit#5	110	
c_tower4,82,138,4	duplicate(DG_Main)	Dungeon Exit#6	110
alde_dun04,165,268,4	duplicate(DG_Main)	Dungeon Exit#7	110
mjo_dun03,34,52,4	duplicate(DG_Main)	Dungeon Exit#8	110
prt_sewb4,34,52,4	duplicate(DG_Main)	Dungeon Exit#9	110
ein_dun02,25,88,4	duplicate(DG_Main)	Dungeon Exit#10	110
gefenia04,160,30,4	duplicate(DG_Main)	Dungeon Exit#11	110
gef_dun03,119,104,4	duplicate(DG_Main)	Dungeon Exit#12	110
glast_01,191,120,4	duplicate(DG_Main)	Dungeon Exit#13	110
gon_dun03,99,183,4	duplicate(DG_Main)	Dungeon Exit#14	110
ice_dun03,149,116,4	duplicate(DG_Main)	Dungeon Exit#15	110
prt_maze03,177,89,4	duplicate(DG_Main)	Dungeon Exit#16	110
jupe_core,150,129,4	duplicate(DG_Main)	Dungeon Exit#17	110
kh_dun02,129,98,4	duplicate(DG_Main)	Dungeon Exit#18	110
lhz_dun02,150,145,4	duplicate(DG_Main)	Dungeon Exit#19	110
lou_dun03,170,153,4	duplicate(DG_Main)	Dungeon Exit#20	110
mag_dun02,43,44,4	duplicate(DG_Main)	Dungeon Exit#21	110
odin_tem03,278,236,4	duplicate(DG_Main)	Dungeon Exit#22	110
orcsdun02,77,88,4	duplicate(DG_Main)	Dungeon Exit#23	110
pay_dun04,120,116,4	duplicate(DG_Main)	Dungeon Exit#24	110
moc_pryd06,97,59,4	duplicate(DG_Main)	Dungeon Exit#25	110
in_sphinx5,100,149,4	duplicate(DG_Main)	Dungeon Exit#26	110
treasure02,101,166,4	duplicate(DG_Main)	Dungeon Exit#27	110
tha_t12,136,65,4	duplicate(DG_Main)	Dungeon Exit#28	110
xmas_dun02,134,134,4	duplicate(DG_Main)	Dungeon Exit#29	110
tur_dun04,92,100,4	duplicate(DG_Main)	Dungeon Exit#30	110
thor_v03,151,162,4	duplicate(DG_Main)	Dungeon Exit#31	110
// ======================= End of Script =====================