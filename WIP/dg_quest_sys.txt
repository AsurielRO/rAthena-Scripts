//===== rAthena Script =======================================
//= Dungeon Quest System
//===== Author ===============================================
//= llchrisll
//===== Credits ==============================================
//= rAthena Dev Team for the Warper NPC, used the Map Cooardinates
//===== Current Version ======================================
//= 1.0
//===== Changelog ============================================
//= 1.0 - Initial Release
//===== Compatible With ======================================
//= rAthena SQL 09/26-2015 Revision and later
//===== Tested With ==========================================
//= rAthena SQL 09/26-2015 Revision
//===== Description ==========================================
//= Additional EXP Bonus (in Percent) based on Dungeon's Difficulty
//  - Difficulties: Easy, Medium, Hard
//  - EXP Rates: 50%, 100%, 150% (changeable)
//= Dungeon Warp Service
//  - Warp to the Entrance only
//= Party Settings dynamically changeable
//  - Quantity of Parties in each Dungeon
//= Party Join Feature
//  - Requesting to join an existing Party, on accept the Leader can decide
//    to which member the applicant will be warped to
//= Dungeon Rewards:
//  - Regular Dungeon Points (On/Off Function)
//    Base Points*Difficulty of Dungeon
//  - MvP Dungeon Points (On/Off Function)
//    Per slain MvP, you gain "x" Points (changeable)
//    Custom Character Permanent Variable for Exchanger 
//  - Dungeon Points Exchanger
//= Quests per Dungeons
//  - Each Dungeon can have an infinite amount of quests
//===== Comments =============================================
//= ...
//===== ToDO =============================================
//= Spliting Glastheim Dungeon into 6 seperate Entries:
//  Glastheim - Castle, Glastheim - Church, Glastheim - Culvert, Glastheim - Prison, Glastheim - Cave, Glastheim - Chivalry
//= Adding the possibility to use a different level requirement for each "floor"
//============================================================
/*
CREATE TABLE IF NOT EXISTS `dqs_list` (
 `dg_id` int(10) unsigned NOT NULL,
 `quest_id` int(10) unsigned default '2',
 `quest_type` tinyint(3) unsigned default '1',
 `mob_id` int(10) unsigned default '0',
 `mob_am` int(12) unsigned default '0',
 `item_id` int(10) unsigned default '0',
 `item_am` int(10) unsigned default '0',
 `reward_id` int(10) unsigned default '0',
 `reward_am` int(10) unsigned default '0',
 `status` tinyint(3) unsigned default '2',
 ) ENGINE=MyISAM;
 
 CREATE TABLE IF NOT EXISTS `dqs_party` (
 `dg_id` int(10) unsigned,
 `pty_id` int(10) unsigned default '0',
 `char_id` int(10) unsigned default '0',
 `start` int(10) unsigned default '1',
 `quest_id` int(10) unsigned NOT NULL,
 `mob_id` int(10) unsigned default '0',
 `mob_am` int(12) unsigned default '0',
 `req_am` int(12) unsigned default '0',
 `complete` tinyint(3) unsigned default '0'
 ) ENGINE=MyISAM;
 
CREATE TABLE IF NOT EXISTS `dqs_dungeon` (
 `dg_id` int(10) unsigned NOT NULL,
 `name` varchar(255) default 'Unknown Dungeon',
 `difficulty` int(10) unsigned NOT NULL default '1',
 `req_level` int(10) unsigned NOT NULL default '1',
 `pty_limit` int(5) unsigned default '0',
 `floor` tinyint(3) unsigned NOT NULL default '1',
 `map_name` varchar(255) default 'prontera',
 `map_x` int(10) unsigned default '0',
 `map_y` int(10) unsigned default '0',
 `repeat` int(5) unsigned default '0',
 `status` tinyint(3) unsigned default '2',
 `renewal` tinyint(3) unsigned default '0'
) ENGINE=MyISAM;

CREATE TABLE IF NOT EXISTS `dqs_app` (
 `pty_id` int(10) unsigned default '0',
 `app_id` int(10) unsigned default '0',
 `name` varchar(255) default 'Unknown Player',
 `level` varchar(255) default '1/1',
 `class` int(10) unsigned default '0'
) ENGINE=MyISAM;

CREATE TABLE IF NOT EXISTS `dqs_pending` (
 `char_id` int(10) unsigned NOT NULL,
 `item_id` int(10) unsigned default '501',
 `item_am` int(10) unsigned default '0'
) ENGINE=MyISAM;

 // === Dungeon Data ===
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '1' , 'Abyss Lakes' , '3' , '70' , '3' , '1' , 'abyss_01' , '261' , '272' , '3' , '2' , '1');
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '1' , 'Abyss Lakes' , '3' , '70' , '3' , '2' , 'abyss_02' , '275' , '270' , '3' , '2' , '1');
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '1' , 'Abyss Lakes' , '3' , '70' , '3' , '3' , 'abyss_03' , '116' , '27' , '3' , '2' , '1');
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '2' , 'Amatsu Dungeon' , '2' , '50' , '3' , '1' , 'ama_dun01' , '228' , '11' , '3' , '2' , '1');
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '2' , 'Amatsu Dungeon' , '2' , '50' , '3' , '2' , 'ama_dun02' , '34' , '41' , '3' , '2' , '1');
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '2' , 'Amatsu Dungeon' , '2' , '50' , '3' , '3' , 'ama_dun03' , '119' , '14' , '3' , '2' , '1');
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '3' , 'Anthell' , '1' , '70' , '3' , '1' , 'anthell01' , '35' , '262' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '3' , 'Anthell' , '1' , '70' , '3' , '2' , 'anthell02' , '168' , '170' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '4' , 'Ayothaya Dungeon' , '3' , '60' , '3' , '1' , 'ayo_dun01' , '275' , '19' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '4' , 'Ayothaya Dungeon' , '3' , '60' , '3' , '2' , 'ayo_dun02' , '24' , '26' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '5' , 'Beach Dungeon' , '2' , '65' , '3' , '1' , 'beach_dun' , '266' , '67' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '5' , 'Beach Dungeon' , '2' , '65' , '3' , '2' , 'beach_dun2' , '255' , '244' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '5' , 'Beach Dungeon' , '2' , '65' , '3' , '3' , 'beach_dun3' , '23' , '260' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '6' , 'Bio Labratory' , '3' , '70' , '3' , '1' , 'lhz_dun01' , '150' , '288' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '6' , 'Bio Labratory' , '3' , '70' , '3' , '2' , 'lhz_dun02' , '150' , '18' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '6' , 'Bio Labratory' , '3' , '70' , '3' , '3' , 'lhz_dun03' , '140' , '134' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '6' , 'Bio Labratory' , '3' , '70' , '3' , '4' , 'lhz_dun04' , '244' , '52' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '7' , 'Brasilis Dungeon' , '3' , '70' , '3' , '1' , 'bra_dun01' , '87' , '47' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '7' , 'Brasilis Dungeon' , '3' , '70' , '3' , '2' , 'bra_dun02' , '262' , '262' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '8' , 'Byalan Dungeon' , '2' , '45' , '3' , '1' , 'iz_dun00' , '168' , '168' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '8' , 'Byalan Dungeon' , '2' , '45' , '3' , '2' , 'iz_dun01' , '253' , '252' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '8' , 'Byalan Dungeon' , '2' , '45' , '3' , '3' , 'iz_dun02' , '236' , '204' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '8' , 'Byalan Dungeon' , '2' , '45' , '3' , '4' , 'iz_dun03' , '32' , '63' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '8' , 'Byalan Dungeon' , '2' , '45' , '3' , '5' , 'iz_dun04' , '26' , '27' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '8' , 'Byalan Dungeon' , '2' , '45' , '3' , '6' , 'iz_dun05' , '141' , '187' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '9' , 'Clock Tower' , '2' , '55' , '3' , '1' , 'c_tower1' , '199' , '159' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '9' , 'Clock Tower' , '2' , '55' , '3' , '2' , 'c_tower2' , '148' , '283' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '9' , 'Clock Tower' , '2' , '55' , '3' , '3' , 'c_tower3' , '65' , '147' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '9' , 'Clock Tower' , '2' , '55' , '3' , '4' , 'c_tower4' , '56' , '155' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '10' , 'Aldebaran Dungeon' , '2' , '65' , '3' , '1' , 'alde_dun01' , '297' , '25' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '10' , 'Aldebaran Dungeon' , '2' , '65' , '3' , '2' , 'alde_dun02' , '127' , '169' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '10' , 'Aldebaran Dungeon' , '2' , '65' , '3' , '3' , 'alde_dun03' , '277' , '178' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '10' , 'Aldebaran Dungeon' , '2' , '65' , '3' , '4' , 'alde_dun04' , '268' , '74' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '11' , 'Coal Mines' , '2' , '50' , '3' , '1' , 'mjo_dun01' , '52' , '17' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '11' , 'Coal Mines' , '2' , '50' , '3' , '2' , 'mjo_dun02' , '381' , '343' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '11' , 'Coal Mines' , '2' , '50' , '3' , '3' , 'mjo_dun03' , '302' , '262' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '12' , 'Prontera Culvert' , '1' , '15' , '3' , '1' , 'prt_sewb1' , '131' , '247' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '12' , 'Prontera Culvert' , '1' , '15' , '3' , '2' , 'prt_sewb2' , '19' , '19' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '12' , 'Prontera Culvert' , '1' , '15' , '3' , '3' , 'prt_sewb3' , '180' , '169' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '12' , 'Prontera Culvert' , '1' , '15' , '3' , '4' , 'prt_sewb4' , '100' , '92' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '13' , 'Cursed Abbey' , '3' , '70' , '3' , '1' , 'abbey01' , '51' , '14' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '13' , 'Cursed Abbey' , '3' , '70' , '3' , '2' , 'abbey02' , '150' , '11' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '13' , 'Cursed Abbey' , '3' , '70' , '3' , '3' , 'abbey03' , '120' , '10' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '14' , 'Dewata Dungeon' , '3' , '90' , '3' , '1' , 'dew_dun01' , '285' , '160' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '14' , 'Dewata Dungeon' , '3' , '90' , '3' , '2' , 'dew_dun02' , '299' , '29' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '15' , 'Einbroch Dungeon' , '2' , '55' , '3' , '1' , 'ein_dun01' , '22' , '14' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '15' , 'Einbroch Dungeon' , '2' , '55' , '3' , '2' , 'ein_dun02' , '292' , '290' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '16' , 'Gefenia' , '3' , '70' , '3' , '1' , 'gefenia01' , '40' , '103' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '16' , 'Gefenia' , '3' , '70' , '3' , '2' , 'gefenia02' , '203' , '34' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '16' , 'Gefenia' , '3' , '70' , '3' , '3' , 'gefenia03' , '266' , '168' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '16' , 'Gefenia' , '3' , '70' , '3' , '4' , 'gefenia04' , '130' , '272' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '17' , 'Geffen Dungeon' , '2' , '55' , '3' , '1' , 'gef_dun00' , '104' , '99' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '17' , 'Geffen Dungeon' , '2' , '55' , '3' , '2' , 'gef_dun01' , '115' , '236' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '17' , 'Geffen Dungeon' , '2' , '55' , '3' , '3' , 'gef_dun02' , '106' , '132' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '17' , 'Geffen Dungeon' , '2' , '55' , '3' , '4' , 'gef_dun03' , '203' , '200' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '1' , 'gl_cas01' , '199' , '29' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '2' , 'gl_cas02' , '104' , '25' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '3' , 'gl_knt01' , '150' , '15' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '4' , 'gl_knt02' , '157' , '287' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '5' , 'gl_chyard' , '147' , '15' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '6' , 'gl_sew01' , '258' , '255' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '7' , 'gl_sew02' , '108' , '291' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '8' , 'gl_sew03' , '171' , '283' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '9' , 'gl_sew04' , '68' , '277' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '10' , 'gl_church' , '156' , '7' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '11' , 'gl_step' , '12' , '7' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '12' , 'gl_dun01' , '133' , '271' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '13' , 'gl_dun02' , '224' , '274' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '14' , 'gl_prison' , '14' , '70' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '18' , 'Glastheim Dungeon' , '2' , '60' , '3' , '15' , 'gl_prison1' , '150' , '14' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '19' , 'Gonryun Dungeon' , '2' , '75' , '3' , '1' , 'gon_dun01' , '153' , '53' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '19' , 'Gonryun Dungeon' , '2' , '75' , '3' , '2' , 'gon_dun02' , '28' , '113' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '19' , 'Gonryun Dungeon' , '2' , '75' , '3' , '3' , 'gon_dun03' , '68' , '16' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '20' , 'Hidden Dungeon' , '2' , '55' , '3' , '1' , 'prt_maze01' , '176' , '7' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '20' , 'Hidden Dungeon' , '2' , '55' , '3' , '2' , 'prt_maze02' , '93' , '20' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '20' , 'Hidden Dungeon' , '2' , '55' , '3' , '3' , 'prt_maze03' , '23' , '8' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '21' , 'Ice Dungeon' , '2' , '65' , '3' , '1' , 'ice_dun01' , '157' , '14' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '21' , 'Ice Dungeon' , '2' , '65' , '3' , '2' , 'ice_dun02' , '151' , '155' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '21' , 'Ice Dungeon' , '2' , '65' , '3' , '3' , 'ice_dun03' , '149' , '22' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '21' , 'Ice Dungeon' , '2' , '65' , '3' , '4' , 'ice_dun04' , '33' , '158' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '22' , 'Juperos' , '3' , '75' , '3' , '1' , 'jupe_cave' , '140' , '51' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '22' , 'Juperos' , '3' , '75' , '3' , '2' , 'juperos_01' , '53' , '247' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '22' , 'Juperos' , '3' , '75' , '3' , '3' , 'juperos_02' , '37' , '63' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '22' , 'Juperos' , '3' , '75' , '3' , '4' , 'jupe_core' , '150' , '285' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '23' , 'Kiel Dungeon' , '3' , '75' , '3' , '1' , 'kh_dun01' , '28' , '226' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '23' , 'Kiel Dungeon' , '3' , '75' , '3' , '2' , 'kh_dun02' , '41' , '198' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '24' , 'Louyang Dungeon' , '2' , '60' , '3' , '1' , 'lou_dun01' , '218' , '196' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '24' , 'Louyang Dungeon' , '2' , '60' , '3' , '2' , 'lou_dun02' , '282' , '20' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '24' , 'Louyang Dungeon' , '2' , '60' , '3' , '3' , 'lou_dun03' , '165' , '38' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '25' , 'Magma Dungeon' , '2' , '60' , '3' , '1' , 'mag_dun01' , '126' , '68' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '25' , 'Magma Dungeon' , '2' , '60' , '3' , '2' , 'mag_dun02' , '47' , '30' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '26' , 'Malangdo Dungeon' , '2' , '75' , '3' , '1' , 'mal_dun01' , '33' , '230' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '27' , 'Moscovia Dungeon' , '3' , '80' , '3' , '1' , 'mosk_dun01' , '189' , '48' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '27' , 'Moscovia Dungeon' , '3' , '80' , '3' , '2' , 'mosk_dun02' , '165' , '30' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '27' , 'Moscovia Dungeon' , '3' , '80' , '3' , '3' , 'mosk_dun03' , '32' , '135' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '28' , 'Nidhoggs Dungeon' , '3' , '90' , '3' , '1' , 'nyd_dun01' , '61' , '239' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '28' , 'Nidhoggs Dungeon' , '3' , '90' , '3' , '2' , 'nyd_dun02' , '60' , '271' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '29' , 'Odin Temple' , '3' , '90' , '3' , '1' , 'odin_tem01' , '298' , '167' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '29' , 'Odin Temple' , '3' , '90' , '3' , '2' , 'odin_tem02' , '224' , '149' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '29' , 'Odin Temple' , '3' , '90' , '3' , '3' , 'odin_tem03' , '266' , '280' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '30' , 'Orc Dungeon' , '1' , '45' , '3' , '1' , 'orcsdun01' , '32' , '170' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '30' , 'Orc Dungeon' , '1' , '45' , '3' , '2' , 'orcsdun02' , '21' , '185' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '31' , 'Payon Dungeon' , '2' , '15' , '3' , '1' , 'pay_dun00' , '21' , '183' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '31' , 'Payon Dungeon' , '2' , '15' , '3' , '2' , 'pay_dun01' , '19' , '33' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '31' , 'Payon Dungeon' , '2' , '15' , '3' , '3' , 'pay_dun02' , '19' , '63' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '31' , 'Payon Dungeon' , '2' , '15' , '3' , '4' , 'pay_dun03' , '155' , '159' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '31' , 'Payon Dungeon' , '2' , '15' , '3' , '5' , 'pay_dun04' , '201' , '204' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '32' , 'Pyramid' , '2' , '55' , '3' , '1' , 'moc_pryd01' , '192' , '9' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '32' , 'Pyramid' , '2' , '55' , '3' , '2' , 'moc_pryd02' , '10' , '192' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '32' , 'Pyramid' , '2' , '55' , '3' , '3' , 'moc_pryd03' , '100' , '92' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '32' , 'Pyramid' , '2' , '55' , '3' , '4' , 'moc_pryd04' , '181' , '11' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '32' , 'Pyramid' , '2' , '55' , '3' , '5' , 'moc_pryd05' , '94' , '96' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '32' , 'Pyramid' , '2' , '55' , '3' , '6' , 'moc_pryd06' , '192' , '8' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '32' , 'Pyramid' , '2' , '55' , '3' , '7' , 'moc_prydn1' , '94' , '96' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '32' , 'Pyramid' , '2' , '55' , '3' , '8' , 'moc_prydn2' , '192' , '8' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '33' , 'Rachel Sanctuary' , '3' , '65' , '3' , '1' , 'ra_san01' , '140' , '11' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '33' , 'Rachel Sanctuary' , '3' , '65' , '3' , '2' , 'ra_san02' , '32' , '21' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '33' , 'Rachel Sanctuary' , '3' , '65' , '3' , '3' , 'ra_san03' , '8' , '149' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '33' , 'Rachel Sanctuary' , '3' , '65' , '3' , '4' , 'ra_san04' , '204' , '218' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '33' , 'Rachel Sanctuary' , '3' , '65' , '3' , '5' , 'ra_san05' , '150' , '9' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '34' , 'Scaraba Hole' , '3' , '90' , '3' , '1' , 'dic_dun01' , '364' , '44' , '3' , '2' , '3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '34' , 'Scaraba Hole' , '3' , '90' , '3' , '2' , 'dic_dun02' , '101' , '141' , '3' , '2' ,'3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '35' , 'Sphinx' , '2' , '60' , '3' , '1' , 'in_sphinx1' , '288' , '9' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '35' , 'Sphinx' , '2' , '60' , '3' , '2' , 'in_sphinx2' , '149' , '81' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '35' , 'Sphinx' , '2' , '60' , '3' , '3' , 'in_sphinx3' , '210' , '54' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '35' , 'Sphinx' , '2' , '60' , '3' , '4' , 'in_sphinx4' , '10' , '222' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '35' , 'Sphinx' , '2' , '60' , '3' , '5' , 'in_sphinx5' , '100' , '99' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '36' , 'Sunken Ship' , '1' , '40' , '3' , '1' , 'treasure01' , '69' , '24' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '36' , 'Sunken Ship' , '1' , '40' , '3' , '2' , 'treasure02' , '102' , '27' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '1' , 'tha_t01' , '150' , '39' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '2' , 'tha_t02' , '150' , '136' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '3' , 'tha_t03' , '220' , '158' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '4' , 'tha_t04' , '59' , '143' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '5' , 'tha_t05' , '62' , '11' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '6' , 'tha_t06' , '89' , '221' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '7' , 'tha_t07' , '35' , '166' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '8' , 'tha_t08' , '93' , '148' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '9' , 'tha_t09' , '29' , '107' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '10' , 'tha_t10' , '159' , '138' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '11' , 'tha_t11' , '19' , '20' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '37' , 'Thanatos Tower' , '3' , '70' , '3' , '12' , 'tha_t12' , '130' , '52' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '38' , 'Thor Volcano' , '3' , '75' , '3' , '1' , 'thor_v01' , '21' , '228' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '38' , 'Thor Volcano' , '3' , '75' , '3' , '2' , 'thor_v02' , '75' , '205' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '38' , 'Thor Volcano' , '3' , '75' , '3' , '3' , 'thor_v03' , '34' , '272' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '39' , 'Toy Factory' , '2' , '45' , '3' , '1' , 'xmas_dun01' , '205' , '15' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '39' , 'Toy Factory' , '2' , '45' , '3' , '2' , 'xmas_dun02' , '129' , '133' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '40' , 'Turtle Dungeon' , '2' , '55' , '3' , '1' , 'tur_dun01' , '154' , '49' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '40' , 'Turtle Dungeon' , '2' , '55' , '3' , '2' , 'tur_dun02' , '148' , '261' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '40' , 'Turtle Dungeon' , '2' , '55' , '3' , '3' , 'tur_dun03' , '132' , '189' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '40' , 'Turtle Dungeon' , '2' , '55' , '3' , '4' , 'tur_dun04' , '100' , '192' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '41' , 'Umbala Dungeon' , '2' , '50' , '3' , '1' , 'um_dun01' , '42' , '31' , '3' , '2' , '2' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '41' , 'Umbala Dungeon' , '2' , '50' , '3' , '2' , 'um_dun02' , '48' , '30' , '3' , '2' , '2' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '41' , 'Umbala Dungeon' , '2' , '50' , '3' , '3' , 'yggdrasil01' , '204' , '78' , '3' , '2' , '1' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '42' , 'Bifrost Tower' , '3' , '90' , '3' , '1' , 'ecl_tdun01' , '57' , '13' , '3' , '2' ,'3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '42' , 'Bifrost Tower' , '3' , '90' , '3' , '1' , 'ecl_tdun01' , '64' , '88' , '3' , '2' ,'3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '42' , 'Bifrost Tower' , '3' , '90' , '3' , '1' , 'ecl_tdun01' , '45' , '14' , '3' , '2' ,'3' );
INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '42' , 'Bifrost Tower' , '3' , '90' , '3' , '1' , 'ecl_tdun01' , '26' , '23' , '3' , '2' ,'3' );
*/
prontera,151,185,4	script	Dungeon Quest Service	110,{

mes .n$;
mes "Hello, "+strcharinfo(0)+"!";
mes "How can I help you?";
if(getgroupid() >= .gm) 
	menu "- Player Menu",-,"- Control Center",OnGMAccess;
next;
switch(select("- Dungeon Menu:- Information:- Points Exchanger:- Nothing")) {

	case 1:
	mes .n$;
	if(!$@DQS_Sys) {
		mes "I'm sorry, but my Dungeon Quest Service is currently offline.";
		close;
	}
	mes "Please choose what you want to do below:";
	mes "Note: \"Get Pending Reward\" is available only when you didn't have enough space/weight for the item reward when completing an quest.";
	next;
	switch(select("- Register:- Quest Board:- Warp Service:- Get Pending Reward:- Complete Dungeon")) {
	
		// ============ Register for Dungeon ============ //
		case 1:
		mes .n$;
		if(getcharid(1) != 0) {
			mes "You are currently not in a Party, do you want to enter an dungeon by yourself? Or do you rather want to join a party?";
			if(select("- Join a Party:- Solo") == 1) {
				// Joining a party
				next;
				mes .n$;
				if(query_sql("SELECT `pty_id` FROM `dqs_party`") == -1) { // No Party registered yet
					mes "I'm sorry, but there is no party registered yet. Please come back later or make one yourself.";
					mes "But you require 2 or more members in your party.";
					close;
				}
				set .@join,1;
				next;
				mes .n$;
				mes "Please choose the dungeon first, then the party you want to join.";
			}
		} else {
			if(strcharinfo(0) != getpartyleader(getcharid(1))) {
				mes .n$;
				mes "Only the party leader can register your party for an Dungeon";
				close;
			}
			getpartymember(getcharid(1),2);
			for ( set .@p,0; .@p < $@partymembercount; set .@p,.@p + 1) 
				if(isloggedin($@partymemberaid[.@p]) == 1)  // Member logged in?
					set .@ct,.@ct + 1;
					
			if(.@ct < 2) {
				mes .n$;
				mes "A party requires minimum 2 members online to use the Dungeon Quest Service.";
				close;
			}
		}
		next;
		mes .n$;
		// =============== Creating Dungeon Menu ===============
		query_sql "SELECT DISTINCT `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `repeat` , `status` , `renewal` FROM `dqs_dungeon`",.@dg_id,.@name$,.@diff,.@pty_limit,.@req_lvl,.@rep,.@stat,.@renewal;
		if(getarraysize(.@dg_id) < 1) {
			mes "I'm sorry, but there are no Dungeon yet, please come later.";
			close;
		}
		for ( set .@du,0; .@du < getarraysize(.@dg_id); set .@du,.@du + 1) {
			query_sql "SELECT count( `pty_id` ) FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id[.@du]+"'",.@pty_ct;
			set .@men_dun$,.@men_dun$ + "- "+.@name$[.@du] + " ("+( (.@status[.@du] == 2)?.@pty_ct+"/"+.@pty_limit[.@du]:"Entry forbidden")+" (Min.Level - "+.@req_lvl[.@du]+")" + ( (.@name$[@du+1] != "")?":":"");
			setarray .@pt_count[.@du],.@pty_ct;
		}	
		mes "Now please choose the dungeon your party wants to go:";
		set @d,select( .@men_dun$ ) - 1;
		next;
		mes .n$;
		mes "Dungeon: "+.@name$[@d];
		mes "Difficulty: "+ ( (.@diff[@d] == 1)?"Easy": ( (@diff[.@d] == 2)?"Medium":"Hard") );
		mes "Minimum Level: "+.@req_lvl[@d];
		if(.@status[@d] == 1) {
			mes "Status: Entry forbidden";
			mes "Please choose a different dungeon.";
			close;
		}
		mes "Existing Parties: "+.@pt_count[@d];
		mes "Repeat Limit: "+.@rep[@d];
		mes "Server Type: "+( (.@renewal[@d] == 1)?"All":( (.@renewal[@d] == 2)?"Pre-Renewal":"Renewal") );
		if(.@renewal[@d] == 2 && checkre(0)) {
			next;
			mes .n$;
			mes "I'm sorry, but I can't grant you access to this dungeon, because it is not accessable on an Renewal Server.";
			close;
		} else if(.@renewal[@d] == 3 && !checkre(0)) {
			next;
			mes .n$;
			mes "I'm sorry, but I can't grant you access to this dungeon, because it is not accessable on an Pre-Renewal Server.";
			close;
		}
		if(@join) {
			next;
			mes .n$;
			if(BaseLevel < .@req_lvl[@d]) {
				mes "I'm sorry, but you don't meet the level requirement, which is "+.@req_lvl[@d]+"!";
				mes "Please try an other dungeon or level up until you reach that level.";
				close;
			}
			mes "I will now list the available parties:";
			mes " ";
			query_sql "SELECT `pty_id` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id[@d]+"' AND `pty_id` != '0'",.@pty_id;
			for ( set .@l,0; .@l < getarraysize(.@pty_id); set .@l,.@l + 1) {
				getpartymember(.@pty_id[.@l]);
				if($@partymembercount < MAX_PARTY) {
					mes "===================";
					mes "Party Name: "+getpartyname(.@pty_id[.@l]);
					mes "Leader: "+getpartyleader(.@pty_id[.@l]);
					mes "Current Members: "+$@partymembercount;
					setarray .@pty_list[getarraysize(.@pty_list)],.@pty_id[.@l];
					set .@pty_menu$,.@pty_menu$ + "- "+getpartyname(.@pty_id[.@l]) + ( (.@pty_id[.@l+1] != 0)?":":"");
					mes ( (.pty_id[.@l+1] != 0)?"":"===================");
				}
			}
			if(getarraysize(.@pty_list) < 1) {
				next;
				mes .n$;
				mes "I'm sorry, but there is no party on this map.";
				close;
			}
			mes " ";
			mes "Please choose, which party you want to send an application at:";
			set .@p,select(.@pty_menu$) - 1;
			if(isloggedin(getpartyleader(.@pty_list[.@p],1),getpartyleader(.@pty_list[.@p],2)) == 1) {
				mes "I will send now an request to the party leader with your Level and Class.";
				mes "Please wait until the leader will accept or decline your request.";
				mes "If the leader doesn't respond in any way, please try to PM him/her by yourself.";
				mes "The leader's name is ["+getpartyleader(.@pty_list[.@p])+"].";
				close2;
				set .@req_id,getcharid(0);
				set .@lvl$,BaseLevel+"/"+JobLevel;
				set .@cls,Class;
				set .@name$,strcharinfo(0);
				// Creating Applicant array for the party
				if(query_sql("SELECT `app_id` FROM `dqs_app` WHERE `pty_id` = '"+.@pty_list[.@p]+"'",.@app_id) == -1) {
					query_sql "INSERT INTO `dqs_app` ( `pty_id` , `app_id` , `name` , `level` , `class` ) VALUES ( '"+.@pty_list+"' , '"+.@req_id+"' , '"+escape_sql(strcharinfo(0))+"' , '"+BaseLevel+"/"+JobLevel+"' , '"+Class+"' )";
					detachrid;
					attachrid(getpartyleader(.@pty_list[.@p],1));
					announce .n$+": The player ["+.@name$+"] with Level "+.@lvl$+", Class: "+jobname(Class)+" requests to join your party. You can accept/decline by sending an whisper to me via \"NPC:Party_Join\" and as text \"List\". There you gain additional information.",bc_self;
				}
				end;

			} else {
				mes "It seems like that the party leader of "+getpartyname(.@pty_list[@p])+" isn't online.";
				mes "Please try another party.";
				close;
			}
		}
		next;
		mes .n$;
		if(.@pt_count[@d] >= .@pty_limit[@d]) {
			mes "I'm sorry, but this dungeon already reached the maximum of parties it can hold.";
			mes "Please choose a different one.";
			close;
		}
		// Solo Entry
		if( (getcharid(1) == 0 && BaseLevel < .@req_lvl[@d]) || (getd("DG_"+.@dg_id[@d]+"_RepeatCT") >= .@rep[@d])) {
			mes "I'm sorry, but you either didn't reach the required level or reached the repeat limit for this dungeon.";
			mes "Please choose either a different dungeon or try to level up first.";
			mes "The minimum level for this dungeon is "+.@req_lvl[@d]+"!";
			close;
		
		// Party Entry
		} else if(getcharid(1) != 0) {
			mes "I will now check the levels of your party members. Please wait....";
			getpartymember(getcharid(1),1);
			getpartymember(getcharid(1),2);
			for ( set .@l,0; .@l < $@partymembercount; set .@l,.@l + 1) {
				// Checking Level of each party member
				debugmes "Member (AID: "+$@partymemberaid[.@l]+", CID: "+$@partymembercid[.@l]+"):";
				debugmes "Logged in?: "+isloggedin($@partymemberaid[.@l],$@partymembercid[.@l]);
				debugmes "BaseLevel: "+readparam(11,""+strcharinfo(0,$@partymembercid[.@l]));
				debugmes "Repeat Counter: "+getvar(getd("DG_"+.@dg_id[@d]+"_RepeatCT"),$@partymembercid[.@l]);
				debugmes "Repeat Timer: "+getvar(getd("DG_"+.@dg_id[@d]+"_RepeatTimer"),$@partymembercid[.@l]);
				if( isloggedin($@partymemberaid[.@l],$@partymembercid[.@l]) == 1 && ( (readparam(11,""+strcharinfo(0,$@partymembercid[.@l])) < .@req_lvl[@d]) || (getvar(getd("DG_"+.@dg_id[@d]+"_RepeatCT"),$@partymembercid[.@l]) >= .@rep[@d]) ) ) 
					set .@l_ct,.@l_ct + 1;
				
				// Reseting Repeat Limit in case the Timer has been reached
				if(getvar(getd("DG_"+.@dg_id[@d]+"_RepeatTimer"),$@partymembercid[.@l]) <= gettimetick(2)) {
					setd("DG_"+.@dg_id[@d]+"_RepeatTimer"),0,$@partymembercid[.@l];
					setd("DG_"+.@dg_id[@d]+"_RepeatCT"),0,$@partymembercid[.@l];
				}
			}
			next;
			mes .n$;
			if(.@l_ct > 0) {
				mes "It seems like "+.@l_ct+" of your members either haven't reached the required level or reached the repeat limit for this dungeon.";
				mes "Please choose either a different dungeon or try to level up your members.";
				mes "The minimum level for this dungeon is "+.@req_lvl[@d]+"!";
				close;
			}
		}
		mes "Well done, you have passed all checks.";
		mes "You"+ ( (getcharid(1) != 0)?"r party":"")+" will recieve an bonus of "+.exp[.@diff[@d]]+"%."; 
		mes "But before you can enter an dungeon, you can accept more quests first, therefore talk to me again and choose \"Quest Board\"";
		close2;
		// Inserting Data in the Database `dqs_party`
		query_sql "INSERT INTO `dqs_party` ( `dg_id` , `"+ ( (getcharid(1) == 0)?"char_id":"pty_id")+"` , `quest_id` , `start` ) VALUES ( '"+.@dg_id+"' , '"+ ( (getcharid(1) == 0)?getcharid(0):getcharid(1))+"' , '1' , '1' )";
		break;
		
		// ============ Quest Board ============ //
		case 2:
		mes .n$;
		if(getcharid(1) != 0 && strcharinfo(0) != getpartyleader(getcharid(1))) {
			mes "Only the party leader can accept additional quests for the party from the Dungeon!!!";
			close;
		}
		// Check if player/party is registered for dungeon
		if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` = '1'",.@dg_id) == -1) {
			mes "I'm sorry, but you didn't register"+ ( (getcharid(1) != 0)?" your party":"")+" for an dungeon yet.";
			mes "Come back, when you have done that first.";
			close;
		}
		mes " --- Dungeon Quest - Information: ---";
		mes "Type: Default Quest";
		// Quest Details
		mes "Condition: Complete the dungeon by talking to the Exit NPC.";
		query_sql "SELECT `difficulty` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id+"'",.@diff;
		mes "Reward: "+.dg_pts*.@diff+"x Dungeon Points";
		next;
		mes .n$;
		query_sql "SELECT DISTINCT `quest_id` , `quest_type` , FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"'",.@q_id,.@q_type;
		if(getarraysize(.@q_id) < 1) {
			mes "I'm sorry, but I currently don't have any additional quests for you.";
			mes "But if you are allowed to enter the dungeon until additional quests are available.";
			close;
		}
		for ( set .@q,0; .@q < getarraysize(.@q_id); set .@q,.@q + 1) {
			set .@que_id,0; // Resetting variable
			if(query_sql("SELECT `quest_id` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' LIMIT 1",.@que_id) == -1)
				setarray .@que$[.@q],"New";
			else 
				setarray .@que$[.@q],"Running";
			debugmes "Recieving Status of Quest: "+.@que$[.@q];
			set .@q_list$,.@q_list$ + "- #"+.@q_id[.@q]+" ("+ ( (.@q_type[.@q] == 1)?"Monster Hunting":"Item Collecting")+") ["+( (compare(.@que$[.@q],"New") == 1)?"^00FFFF":"^FF0000")+.@que$[.@q]+"^000000]" + ( (.@q_id[.@q+1] != 0)?":":"");
		}
		mes "Please choose the quest from below you want to accept/abort or look at your progress.";
		mes "Format:";
		mes "Quest_ID (Quest Type) [Quest Status]";
		next;
		set .@q_c,select(.@q_list$) - 1;
		mes .n$;
		mes " --- Quest #"+.@q_id[.@q_c]+" - "+ ( (.@que$[.@q_c] != "New")?"Progress":"Information")+": ---";
		mes "Type: "+( (.@q_type[.@q_c] == 1)?"Monster Hunting":"Item Collecting");
		// Quest Details
		if(.@q_type[.@q_c] == 1)
			query_sql "SELECT `mob_id` , `mob_am` , `reward_id` , `reward_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req1,.@req2,.@rew_id,.@rew_am;
		else
			query_sql "SELECT `item_id` , `item_am` , `reward_id` , `reward_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req1,.@req2,.@rew_id,.@rew_am;
		for ( set .@l,0; .@l < getarraysize(.@req1); set .@l,.@l + 1) 
			mes "- "+.@req2[.@l]+"x "+ ( (.@q_type[.@q_c] == 1)?strmobinfo(1,.@req1[.@l]):getitemname(.@req1[.@l]) );
		mes "Reward:";
		mes .@rew_am+"x "+( (.@rew_id == 1)?"Zeny": ( (.@rew_id == 2)?"Cash Points":getitemname(.@rew_id)));
		mes " ";
		mes "What do you like to do now?";
		next;
		if(.@que$[.@q_c] == "New") {
			select("- Accept:- Nevermind");
			if(@menu == 2) set .@s,4; else set .@s,@menu;
		} else
			set .@s,select("- Abort:- Progress:- Nevermind") + 1;

		switch(.@s) {
			
			// Accept Quest 
			case 1:
			mes .n$;
			mes "You have accepted the quest.";
			query_sql "INSERT INTO `dqs_party` ( `dg_id` , `"+ ( (getcharid(1) == 0)?"char_id":"pty_id")+"` , `quest_id` ) VALUES ( '"+.@dg_id+"' , '"+ ( (getcharid(1) == 0)?getcharid(0):getcharid(1))+"' , '"+.@q_id[.@q_c]+"' )";
			if(.@q_type[.@q_c] == 1) // Monster Hunting
				for ( set .@a,0; .@a < getarraysize(.@req1); set .@a,.@a + 1)
					query_sql "UPDATE `dqs_party` SET `mob_id` = '"+.@req1[.@a]+"' , `req_am` = '"+.@req2[.@a]+"' WHERE `dg_id` = '"+.@dg_id+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'";
			
			// Displaying Quest Details to the Party
			if(getcharid(1) != 0) {
				query_sql "SELECT `name` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id+"'",.@dg_name$;
				addrid(1,0,getcharid(1));
				dispbottom "Accepted Quest@"+.@dg_name$+": "+( (.@q_type[.@q_c] == 1)?"Monster Hunting":"Item Collecting")+":";
				for ( set .@l,0; .@l < getarraysize(.@req1); set .@l,.@l + 1) 
					dispbottom "- "+.@req2[.@l]+"x "+ ( (.@q_type[.@q_c] == 1)?strmobinfo(1,.@req1[.@l]):getitemname(.@req1[.@l]) );
				dispbottom "Reward: "+.@rew_am+"x "+( (.@rew_id == 1)?"Zeny": ( (.@rew_id == 2)?"Cash Points":getitemname(.@rew_id)));
			}
			break;
			
			// Abort Quest
			case 2:
			mes .n$;
			mes "Do you really want to abort the quest?";
			if(select("- Yes:- No") - 1) close;
			next;
			mes .n$;
			mes "Quest has been aborted.";
			if(.@q_type[.@q_c] == 1) // Monster Hunting
			for ( set .@a,0; .@a < getarraysize(.@req1); set .@a,.@a + 1)
				query_sql "SELECT `mob_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req2;
			
			query_sql "DELETE FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
			break;
			
			// Check Progress
			case 3:
			mes .n$;
			mes "Let's see, if you have completed the target....";
			if(.@q_type[.@q_c] == 1)
				query_sql "SELECT `mob_id` , `mob_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req1,.@req2;
			else
				query_sql "SELECT `item_id` , `item_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@req1,.@req2;
			
			for ( set .@p,0; .@p < getarraysize(.@req1); set .@p,.@p + 1) {
				if(.@q_type[.@q_c] == 1)
					// Selecting the latest value in the database
					query_sql "SELECT `mob_am` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `mob_id` = '"+.@req1[.@p]+"'",.@am;
				else 
					if(getcharid(1) != 0) {
						addrid(1,0,getcharid(1));
						set .@am,.@am + countitem(.@req1[.@p]);
					} else 
						set .@am,countitem(.@req1[.@p]);
				
				if(.@am < .@req2[.@p]) set .@f,.@f + 1;
			}
			for ( set .@l,0; .@l < getarraysize(.@req1); set .@l,.@l + 1) 
				mes "- "+ ( (.@q_type[.@q_c] == 1)?strmobinfo(1,.@req1[.@l]):getitemname(.@req1[.@l]) )+": "+.@am+"/"+.@req2[.@l];
			mes " ";
			if(.@f) {
				mes "You didn't finish "+.@f+" target"+( (.@f == 1)?"":"s")+". Please come back, when you have finished those.";
				close;
			}
			
			next;
			// Removing quest items from inventory
			if(.@q_type[.@q_c] == 2)
				for ( set .@r,0; .@r < getarraysize(.@req1); set .@r,.@r + 1) 
					delitem .@req1[.@l],.@req2[.@l];
		
			mes .n$;
			break;
			
			// Nevermind
			case 4:
			close;			
		}
		mes "You have completed the quest, here is your reward!!";
		query_sql "SELECT `reward_id` , `reward_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"'",.@rew_id,.@rew_am;
		query_sql "DELETE FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '"+.@q_id[.@q_c]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
			
		if(getcharid(1) != 0)  
			addrid(1,0,getcharid(1));
				
		switch(.@rew_id) {
			case 1: set Zeny,Zeny + .@rew_am; break;
			case 2: set #CASHPOINTS,#CASHPOINTS + .@rew_am; break;
			default: 
			if(checkweight(.@rew_id,.@rew_am) == 1) 
				getitem .@rew_id,.@rew_am; 
			else {
				mes "It seems like you can't carry more items, than you already do. You have to remove some weight before you can recieve your reward.";
				mes "Please come back to me, when you have done that and choose \"Get Pending Reward\".";
				query_sql "INSERT INTO `dqs_pending` ( `char_id` , `item_id` , `item_am` ) VALUES ( '"+getcharid(0)+"' , '"+.@rew_id+"' , '"+.@rew_am+"' )";
			}
			break;
		}
		if(query_sql("SELECT `item_id` FROM `dqs_pending` WHERE `char_id` = '"+getcharid(0)+"'",.@i_id) == -1)
			dispbottom "You have recieved "+.@rew_am+"x "+( (.@rew_id == 1)?"Zeny": ( (.@rew_id == 2)?"Cash Points":getitemname(.@rew_id)));			
		break;

		// ============ Warp Service ============ //
		case 3:
		mes .n$;
		if(getcharid(1) != 0 && strcharinfo(0) != getpartyleader(getcharid(1))) {
			mes "Only the party leader can warp your party in the Dungeon!!!";
			close;
		}
		// Check if player/party is registered for dungeon
		if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` = '1'",.@dg_id) == -1) {
			mes "I'm sorry, but you didn't register"+ ( (getcharid(1) != 0)?" your party":"")+" for an dungeon yet.";
			mes "Come back, when you have done that first.";
			close;
		}
		mes "I will warp you "+ ( (getcharid(1) != 0)?"and your party ":"")+"now to the "+.@name$[@d]+ ( (compare(.@name$[@d],"Dungeon") == 1)?" ":" Dungeon ");
		close2;
		query_sql "SELECT `map_name` , `map_x` , `map_y` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id+"' AND `floor` = '1'",.@map$,.@map_x,.@map_y;
		// Warping Party ...
		if(getcharid(1) != 0) 
			warpparty .@map$+".gat",.@map_x,.@map_y,getcharid(1);
		else
			warp .@map$+".gat",.@map_x,.@map_y;
	
		break;
		
		// ============ Get Pending Reward ============ //
		case 4:
		mes .n$;
		if(query_sql("SELECT `item_id` , `item_am` FROM `dqs_pending` WHERE `char_id` = '"+getcharid(0)+"'",.@i_id,.@i_am) == -1) {
			mes "You don't have any pending rewards.";
			close;
		}
		for ( set .@i,0; .@i < getarraysize(.@i_id); set .@i,.@i + 1)
			if(checkweight(.@i_id[.@i],.@i_am[.@i]) == 1) {
				getitem .@i_id,.@i_am; 			
				dispbottom "You have recieved "+.@i_am[.@i]+"x "+getitemname(.@i_id[.@i]);			
			}
		query_sql "DELETE FROM `dqs_pending` WHERE `char_id` = '"+getcharid(0)+"'";
		close;
		
		// Complete Dungeon
		case 5:
		mes .n$;
		if(getcharid(1) != 0 && strcharinfo(0) != getpartyleader(getcharid(1))) {
			mes "Only the party leader can finalize the completion of the Dungeon!!!";
			close;
		}
		// Check if player/party is registered for dungeon
		if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` = '1'",.@dg_id) == -1) {
			mes "I'm sorry, but you didn't register"+ ( (getcharid(1) != 0)?" your party":"")+" for an dungeon yet.";
			mes "Come back, when you have done that and actually completed it first.";
			close;
		}
		// Checking if there are still uncompleted quests
		if(query_sql("SELECT `quest_id` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `quest_id` != '1'",.@q_id) != -1) {
			mes "You"+ ( (getcharid(1) != 0)?"r party":"")+" still have quests to complete.";
			close;
		}
		// Checking if dungeon was completed
		query_sql "SELECT `complete` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id+"' AND `quest_id` = '1' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",.@done;
		if(.@done != 1) {
			mes "You"+ ( (getcharid(1) != 0)?"r party":"")+" didn't complete the dungeon yet.";
			mes "Please come back, when it's done.";
			close;
		}
		query_sql "SELECT `name` , `difficulty` , `repeat` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id+"'",.@dg_name$,.@diff,.@repeat;
		query_sql "DELETE FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
		if(getcharid(1) != 0) {
			query_sql "DELETE FROM `dqs_app` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
			addrid(1,0,getcharid(1));
		}
		if(.dg_pts > 0)
			mes "For completing the "+( (compare(.@dg_name$,"Dungeon") == 1)?" ":" Dungeon ")+", you will recieve "+(.dg_pts*.@diff)+"x Dungeon Points.";
		
		setd("DG_"+.@dg_id+"_RepeatCT"),getd("DG_"+.@dg_id+"_RepeatCT") + 1;
		// Increasing Repeat Counter, and in case the Limit has been reached > Apply Timer
		if(getd("DG_"+.@dg_id+"_RepeatCT") >= .@repeat) {
			setd("DG_"+.@dg_id+"_RepeatTimer"),.dg_delay*.@diff;
			setd("DG_"+.@dg_id+"_RepeatCT"),0;
		}	
		break;
	}
	break;
	
	// Information
	case 2:
	mes .n$;
	mes "So you want some information about the Dungeon Quest Service, huh?!";
	mes "Good, then I will start with the main steps first:";
	next;
	mes "[ === Register === ]";
	mes "To use the Dungeon Quest Service, you can have enter either alone or as a party with a minimum of 2 online members.";
	mes "After you have chosen the dungeon you want to enter, you can accept, if available, additional quests to earn extra rewards.";
	mes "To do so, just choose \"Quest Board\" in the \"Dungeon Menu\".";
	next;
	mes "[==== Quests ====]";
	mes "There are 2 types of quests you can accept:";
	mes "- Monster Hunting";
	mes "- Item Collecting";
	mes " ";
	mes "[ === Quest Rewards ===]";
	mes "- Zeny";
	mes "- Cash Points";
	mes "- Items";
	mes " ";
	mes "[== Custom @Command ==]";
	mes "To help you, to check your quest progress anytime and anywhere, there is an custom @command: \"@checkdg\".";
	next;
	mes "[== Warp Service ==]";
	mes "I also offer you an Warp Service to the Dungeon Entrances by choosing \"Warp Service\".";
	mes "But that's not all, I also can warp you to Party Members, which are inside of the Dungeon or to the \"Check Point\", which is usually the beginning of the Dungeon Floor.";
	mes " ";
	mes "In the case you don't want to enter alone, but don't have players you can party up with, you can join an existing party, just choose \"Join\" when you want to \"Register\".";
	mes "I will send therefore to the party leader of the chosen party an info containing of your name, level and class.";
	mes "He/She can decide then if want to accept your application or not.";
	next;
	mes "[ === Dungeons === ]";
	mes "Each Dungeon has it's own Difficulty, Level Requirement and Repeat Limit.";
	mes "After every completion the Repeat Limit for that Dungeon will increase and when it has been reached and Repeat Delay becomes active.";
	mes "This Repeat Delay is only affecting you, not the dungeon.";
	next;
	mes "[ === Difficulty & EXP Bonus ===]";
	mes "I will now list the EXP Bonus of the various Difficulties:";
	mes "Easy: "+.exp[1]+"%";
	mes "Medium: "+.exp[2]+"%";
	mes "Hard: "+.exp[3]+"%";
	next;
	if(.dg_pts > 0) {
		mes "[ === Dungeon Rewards === ]";
		mes "Completing an Dungeon also rewards you with special \"Dungeon Points\", which can be exchanged against items.";
		mes "Choose \"Points Exchanger\" in the first menu for that.";
		mes "The base points you can gain for each Dungeon is "+.dg_pts+" and will be multiplied by the Dungeons Difficulty:";
		mes "\"1\" for Easy, by \"2\" for Medium, by \"3\" for Hard.";
		next;
	}
	if(.mvp_pts > 0) {
		mes "[ === MvP Rewards === ]";
		mes "Killing MvP's rewards you with special \"MvP Points\", which can be exchanged against items.";
		mes "Choose \"Points Exchanger\" in the first menu for that.";
		mes "The base points you can gain for each slain MvP is "+.mvp_pts+" and will be multiplied by the Dungeons Difficulty:";
		mes "\"1\" for Easy, by \"2\" for Medium, by \"3\" for Hard.";
		next;
	}
	mes .n$;
	mes "So that's all I can tell you about my service.";
	mes "See you again.";
	break;
	
	// Point Exchanger 
	case 3:
	mes .n$;
	mes "Which points do you want to exchange?";
	mes "Your Dungeon Points: "+getd(""+.dg_var$);
	mes "Your MvP Points: "+getd(""+.mvp_var$);
	next;
	switch(select("- Dungeon Points:- MvP Points")) {

		case 1:
		mes .n$;
		if(!.dg_pts) {
			mes "I'm sorry, but this exchange service is currently not available duo the fact Dungeon Points not being gainable.";
			mes "Please come back another time.";
			close;
		}
		mes "Please choose the item you want your points to exchange to:";
		mes "Format: Amount x Item (Price per Exchange)";
		next;
		// Creating exchange menu
		for ( set .@m,0; .@m < getarraysize(.dg_ex); set .@m,.@m + 1)
			set .@ex_m$,.@ex_m$ + "- "+.dg_ex_am[.@m]+"x "+getitemname(.dg_ex[.@m])+" ("+.dg_ex_cost[.@m]+")"+ ( (.dg_ex[.@m+1] != 0)?":":"");
		
		set .@b,select(.@ex_m$) - 1;
		mes .n$;
		mes "You have selected "+.dg_ex_am[.@b]+"x "+getitemname(.dg_ex[.@b])+".";
		mes "Is that correct?";
		if(select("- Yes:- No") - 1) close;
		next;
		mes .n$;
		mes "Now type the how often you want to exchange:";
		mes "Price per exchange: "+.dg_ex_cost[.@b];
		mes "Your Dungeon Points: "+getd(""+.dg_var$);
		// Setting exchange limit based on the current points you have
		set .@l,(getd(""+.dg_var$)/.dg_ex_cost[.@b]);
		mes "Maximum possible: "+.@l+", based on your current points.";
		next;
		if(input(.@buy,1,.@l) != 0) {
			mes .n$;
			mes "It seems like you put either a 0 or more than "+.@l+", which is the maximum you could exchange based on your points.";
			close;
		}
		mes .n$;
		getitem .dg_ex[.@b],.dg_ex_am[.@b];
		setd(""+.dg_var$),getd(""+.dg_var$) - (.@buy*.dg_ex_cost[.@b]);
		mes "Your exchange has been completed.";
		mes "See you again for the next exchange.";
		break;
		
		case 2:
		mes .n$;
		if(!.mvp_rew) {
			mes "I'm sorry, but this exchange service is currently not available duo the fact MvP Points not being gainable.";
			mes "Please come back another time.";
			close;
		}
		mes "Please choose the item you want your points to exchange to:";
		mes "Format: Amount x Item (Price per Exchange)";
		next;
		for ( set .@m,0; .@m < getarraysize(.mvp_ex); set .@m,.@m + 1)
			set .@ex_mvp_m$,.@ex_mvp_m$ + "- "+.mvp_ex_am[.@m]+"x "+getitemname(.mvp_ex[.@m])+" ("+.mvp_ex_cost[.@m]+")"+ ( (.mvp_ex[.@m+1] != 0)?":":"");
		set .@b,select(.@ex_mvp_m$) - 1;
		mes .n$;
		mes "You have selected "+.mvp_ex_am[.@b]+"x "+getitemname(.mvp_ex[.@b])+".";
		mes "Is that correct?";
		if(select("- Yes:- No") - 1) close;
		next;
		mes .n$;
		mes "Now type the how often you want to exchange:";
		mes "Price per exchange: "+.mvp_ex_cost[.@b];
		mes "Your MvP Points: "+getd(""+.mvp_var$);
		// Setting exchange limit base on the current points you have
		set .@l,(getd(""+.mvp_var$)/.mvp_ex_cost[.@b]);
		mes "Maximum possible: "+.@l+", based on your current points.";
		next;
		if(input(.@buy,1,.@l) != 0) {
			mes .n$;
			mes "It seems like you put either a 0 or more than "+.@l+", which is the maximum you could exchange based on your points.";
			close;
		}
		mes .n$;
		getitem .mvp_ex[.@b],.mvp_ex_am[.@b];
		setd(""+.mvp_var$),getd(""+.mvp_var$) - (.@buy*.mvp_ex_cost[.@b]);
		mes "Your exchange has been completed.";
		mes "See you again for the next exchange.";
		break;
	}
	break;
	
	// Nevermind
	case 4:
	break;
}
close;


// GM Control Center
OnGMAccess:
mes "Note: Changes in the \"System Settings\" and \"Dungeon Points Management\" will only stay changed until the Server Restarts or \"@reloadscript\" is used.";
mes "To make the changes stay, you have to change them in the script file itself.";
next;
switch(select("- System Settings:- Dungeon Management:- Quest Management:- Dungeon Points Management:- Nevermid")) {

	// System Settings = OnInit
	case 1:
	mes .n$;
	mes "What would you like to change?";
	mes "Note: If available the content of an \"()\" means the current setting!!!";
	next;
	switch(select("- Debug Mode ("+( (.debug)?"Online":"Offline")+"):- Dungeon Settings:- Quest Settings:- Nevermind")) {
	
		case 1:
		mes .n$;
		mes "The Debug Mode is currently "+( (.debug)?"Online":"Offline")+".";
		mes "Do you want to change it?";
		if(select("- Yes:- No") - 1) close;
		next;
		mes "The Debug Mode has been changed to: "+( (.debug)?"Offline":"Online");
		set .debug,!.debug;
		break;
		
		// Dungeon Settings
		case 2:
		mes .n$;
		mes "[ == Dungeon Settings == ]";
		mes "Please choose which setting about the Dungeons you want to change:";
		while(@menu != 255) {
			next;
			switch(prompt("- EXP Settings:- Repeat Settings")) {
				
				// EXP Settings
				case 1:
				mes .n$;
				mes "[ == EXP Settings == ]";
				mes "Please select the Difficulty to change the EXP Rate for it:";
				mes "Note: You only can change the EXP Rates for each Difficulty.";
				next;
				set .@e,select("- Easy ("+.exp[1]+"%):- Medium ("+.exp[2]+"%):- Hard ("+.exp[3]+"%)");
				mes .n$;
				mes "[ === Difficulty: "+ ( (.@e == 1)?"Easy":( (.@e == 2)?"Medium":"Hard") )+" === ]";
				mes "Current Rate: "+.exp[.@e]+"%";
				mes " ";
				mes "Please type the new rate:";
				mes "Note: Lowest: 1%, Maximum: "+.max_exp+"%";
				next;
				if(input(.@e_new,1,500) != 0) {
					mes .n$;
					mes "Invalid Value, please try again.";
					continue;
				}
				mes .n$;
				mes "Chosen Value:";
				mes "> "+.@e_new+"%";
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes "The EXP Rate for "+ ( (.@e == 1)?"Easy":( (.@e == 2)?"Medium":"Hard") )+" has been changed successfully.";
				setarray .exp[.@e],.@e_new;
				continue;
				break;
				
				// Repeat Settings
				case 2:
				mes .n$;
				mes "[ == Repeat Settings == ]";
				mes "Please select an option from below:";
				next;
				while(1) {
					next;
					switch(prompt("- Max Repeat Limit ("+.dg_max_limit+"):- Delay Type")) {
					
						// Max Repeat Limit
						case 1:
						mes .n$;
						mes "[ == Repeat Limit Setting == ]";
						mes "Current Maximum Repeat Limit: "+.dg_max_limit;
						mes " ";
						mes "Please type the new limit:";
						mes "Note: Lowest: 1, Maximum: 5000";
						next;
						if(input(.@rep_new,1,5000) != 0) {
							mes .n$;
							mes "Invalid Value, please try again.";
							continue;
						}
						mes .n$;
						mes "Chosen Value:";
						mes "> "+.@rep_new;
						mes " ";
						mes "Is that correct?";
						if(select("- Yes:- No") - 1) continue;
						next;
						mes "The Maximum Repeat Limit has been changed successfully.";
						set .dg_max_limit,.@rep_new;
						continue;
						break;
						
						// Delay Type
						case 2:
						mes .n$;
						mes "[ == Delay Type Setting ==]";
						mes "Current Delay Type: "+ ( (.dg_del_type == 1)?"Hour": ( (.dg_del_type == 2)?"Day": ( (.dg_del_type == 3)?"Week":"Month") ) );
						mes "Note: This delay becomes only active when the Repeat Limit of an Dungeon has been reached and will be multiplied by the Difficulty of the Dungeon.";
						mes " ";
						mes "Please choose one of the Delay Types from below by typing the number in front of it:";
						mes " > 1: Hour";
						mes " > 2: Day";
						mes " > 3: Week";
						mes " > 4: Month";
						next;
						if(input(.@del_new,1,4) != 0) {
							mes .n$;
							mes "Invalid Type, please try again.";
							continue;
						}
						mes .n$;
						mes "Chosen Delay type:";
						mes "> "+( (.@del_new == 1)?"Hour": ( (.@del_new == 2)?"Day": ( (.@del_new == 3)?"Week":"Month") ) );
						mes " ";
						mes "Is that correct?";
						if(select("- Yes:- No") - 1) continue;
						next;
						mes "The Delay Type has been changed successfully.";
						set .dg_del_type,.@del_new;
						continue;
						break;
						
						// Repeat Settings - Default
						default:
						break;
					} // End of Repeat Settings - switch(prompt())
					break;
					
				} // End of Repeat Settings - while(1)
				continue;
				break;
				
				// Dungeon Settings - Default
				default:
				break;
			} // End of Dungeon Settings - switch(prompt())
			break;
		} // End of Dungeon Settings Settings - while(1)
		break;
		
		// Quest Settings
		case 3:
		mes .n$;
		mes "[ == Quest Settings ==]";
		mes "Please choose which setting about the quests you want to change:";
		while(1) {
			next;
			switch(prompt("- Max Level Requirement ("+.level+"):- Monster Hunting:- Item Collecting:- Max Reward Settings")) {
			
				// Max Level Requirement
				case 1:
				mes .n$;
				mes "[ == Level Requirement == ]";
				mes "Current Max Level Requirement: "+.level;
				mes " ";
				mes "Please type the new requirement:";
				mes "Note: Lowest: 1, Maximum: "+MAX_LEVEL;
				next;
				if(input(.@lvl_new,1,MAX_LEVEL) != 0) {
					mes .n$;
					mes "Invalid Level, please try again.";
					continue;
				}
				mes .n$;
				mes "Chosen Level:";
				mes "> "+.@lvl_new;
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes "The Max Level Requirement has been changed successfully.";
				set .level,.@lvl_new;
				continue;
				break;
				
				// Monster Hunting
				case 2:
				mes .n$;
				mes "[ == Monster Hunting == ]";
				mes "Current Settings:";
				mes " > Minimum Mob Amount: "+.mob_min;
				mes " > Maximum Mob Amount: "+.mob_max;
				mes " > Maximum Mob Count: "+.mob_ct;
				mes " ";
				mes "Now I ask of you to type the new values in the exact same order:";
				mes "Note: Min Mob Amount can't be higher than Max Mob Amount and Max Mob Count can't be less than 1.";
				next;
				mes .n$;
				mes "[ == Min Mob Amount == ]";
				input .@mob_min;
				mes " > Input: "+.@mob_min;
				mes "[ == Max Mob Amount == ]";
				input .@mob_max;
				mes " > Input: "+.@mob_max;
				mes "[ == Max Mob Count == ]";
				input .@mob_ct;
				mes " > Input: "+.@mob_ct;
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes .n$;
				if(.@mob_min > .@mob_max || .@mob_ct < 1) {
					mes "It seems like you have put an invalid value.";
					mes "Please try again.";
					continue;
				}
				mes "The Minimum Mob Amount, Maximum Mob Amount and Maximum Mob Count has been changed successfull.";
				set .mob_min,.@mob_min;
				set .mob_max,.@mob_max;
				set .mob_ct,.@mob_ct;
				continue;
				break;
				
				// Item Collecting
				case 3:
				mes .n$;
				mes "[ == Item Collecting == ]";
				mes "Current Settings:";
				mes " > Minimum Item Amount: "+.item_min;
				mes " > Maximum Item Amount: "+.item_max;
				mes " > Maximum Item Count: "+.item_ct;
				mes " ";
				mes "Now I ask of you to type the new values in the exact same order:";
				mes "Note: Min Item Amount can't be higher than Max Item Amount and Max Item Count can't be less than 1.";
				next;
				mes .n$;
				mes "[ == Min Item Amount == ]";
				input .@item_min;
				mes " > Input: "+.@item_min;
				mes "[ == Max Item Amount == ]";
				input .@item_max;
				mes " > Input: "+.@item_max;
				mes "[ == Max Item Count == ]";
				input .@item_ct;
				mes " > Input: "+.@item_ct;
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes .n$;
				if(.@item_min > .@item_max || .@item_ct < 1) {
					mes "It seems like you have put an invalid value.";
					mes "Please try again.";
					continue;
				}
				mes "The Minimum Item Amount, Maximum Item Amount and Maximum Item Count has been changed successfull.";
				set .item_min,.@item_min;
				set .item_max,.@item_max;
				set .item_ct,.@item_ct;
				continue;
				break;
				
				// Max Reward Settings
				case 4:
				mes .n$;
				mes "[ == Max Reward Settings == ]";
				mes "Current Settings:";
				mes " > Maximum Zeny Amount: "+.rew_zeny;
				mes " > Maximum Cash Points Amount: "+.rew_cash;
				mes " > Maximum Item Amount: "+.rew_item;
				mes " > Maximum Item Weight: "+.rew_weight;
				mes "   (= Item Weight*Reward Amount)";
				mes " ";
				mes "Now I ask of you to type the new values in the exact same order:";
				next;
				mes .n$;
				mes "[ == Max Zeny Amount == ]";
				input .@rew_zeny;
				mes " > Input: "+.@rew_zeny;
				mes "[ == Max Cash Points Amount == ]";
				input .@rew_cash;
				mes " > Input: "+.@rew_cash;
				mes "[ == Max Item Amount == ]";
				input .@rew_item;
				mes " > Input: "+.@rew_item;
				mes "[ == Max Item Weight == ]";
				input .@rew_weight;
				mes " > Input: "+.@rew_weight;
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes .n$;
				mes "The Maximum Zeny Amount, Maximum Cash Points Amount, Maximum Item Amount and Maximum Item Weight has been changed successfull.";
				set .rew_zeny,.@rew_zeny;
				set .rew_cash,.@rew_cash;
				set .rew_item,.@rew_item;
				set .rew_weight,.@rew_weight;
				continue;
				break;
				
				// Quest Settings - Default
				default:
				break;
			} // End of Quest Settings - switch(prompt())
			break;
			
		} // End of Quest Settings - while(1)
		break;
		
		// Nevermind
		case 4:
		break;
	}
	break;
	
	// Dungeon Management
	case 2:
	mes .n$;
	mes "[ == Dungeon Management == ]";
	mes "Here is a list of all the dungeons with the total floor quantity:";
	mes " ";
	query_sql "SELECT DISTINCT `dg_id` , `name` , count( `floor` ) FROM `dqs_dungeon` GROUP BY `dg_id` ASC",.@dg_id,.@dg_name$,.@floor;
	mes "Dungeon ID - Dungeon Name - Floor Quantity";
	for ( set .@d,0; .@d < getarraysize(.@dg_id); set .@d,.@d + 1)
		mes .@dg_id[.@d]+" - "+.@dg_name$[.@d]+" - "+.@floor[.@d];
		
	while(1) {
		next;
		switch(prompt("- Add Dungeon:- Edit Dungeon:- Delete Dungeon")) {
			
			// Add Dungeon
			case 1:
			mes .n$;
			mes "[ == Add Dungeon == ]";
			mes "I will now select the latest or the next free Dungeon ID:";
			mes "Afterwards you can start adding an dungeon.";
			next;
			query_sql "SELECT `dg_id` FROM `dqs_dungeon`",.@dg_id;
			for ( set .@d,0; .@d <= getarraysize(.@dg_id); set .@d,.@d + 1)
				if(.@dg_id[.@d] != (.@d+1)) break;
			
			set .@id,.@d + 1;
			
			mes .n$;
			mes "New Dungeon ID: "+.@id;
			mes " ";
			mes "1st Step  - Dungeon Name:";
			mes "Note: Minimum: 5 letters, Maximum: 20 letters.";
			next;
			if(input(.@d_name$,5,20) != 0) {
				mes .n$;
				mes "Invalid Name, either too short or too long.";
				mes "Please try again.";
				continue;
			}
			mes .n$;
			mes "2nd Step - Difficulty:";
			mes " > 1 = Easy";
			mes " > 2 = Medium";
			mes " > 3 = Hard";
			mes "Note: Please insert the number, not the word.";
			next;
			if(input(.@d_diff,1,3) != 0) {
				mes .n$;
				mes "Invalid Difficulty, either less than 1 or higher than 3.";
				mes "Please try again.";
				continue;
			}			
			mes .n$;
			mes "3rd Step - Level Requirement:";
			mes "Note: Minimum: 1, Maximum: "+MAX_LEVEL;
			next;
			if(input(.@d_level,1,MAX_LEVEL) != 0) {
				mes .n$;
				mes "Invalid Level, either too less or too high.";
				mes "Please try again.";
				continue;
			}
			mes .n$;
			mes "4th Step  - Party Limit:";
			mes "Note: Minimum: 1 party, Maximum: 100 parties.";
			next;
			if(input(.@d_plimit,1,100) != 0) {
				mes .n$;
				mes "Invalid Party Limit, either too less or too high.";
				mes "Please try again.";
				continue;
			}
			mes .n$;
			mes "5th Step - Floor Amount:";
			mes "Note: Minimum: 1, Maximum: 100";
			next;
			if(input(.@d_fam,1,100) != 0) {
				mes .n$;
				mes "Invalid Floor Amount, either too less or too high.";
				mes "Please try again.";
				continue;
			}
			mes .n$;
			mes "7th Step - Repeat Limit";
			mes "Note: Minimum 1, Maximum "+.dg_max_limit;
			next;
			if(input(.@d_repeat,1,.dg_max_limit) != 0) {
				mes .n$;
				mes "Invalid Repeat Limit, either too less or too high.";
				mes "Please try again.";
				continue;
			}
			mes .n$;
			mes "8th Step - Status";
			mes "Note: 2 = Entry allowed, 1 = Entry forbidden";
			next;
			if(input(.@d_stat,1,2) != 0)
				set .@d_stat,2; // Defaulting to "Online"
			
			mes .n$;
			mes "9th Step - Renewal Restriction";
			mes "Note: 1 = None, 2 = Pre-Renewal only, 3 = Renewal only";
			next;
			if(input(.@d_renewal,1,3) != 0) 
				set .@d_renewal,1; // Defaulting to "None"
				
			mes .n$;
			mes "10th Step - Adding Floors";
			mes "Note: You better should know the map names and the coordinates for each floor!!!";
			mes " > I will only check if the coordinates are passable or not.";
			mes " > One mistake means to repeat the floor!!!";
			set .@f,1;
			deletearray .@floor_map$[0],getarraysize(.@floor_map$);
			deletearray .@floor_x[0],getarraysize(.@floor_x);
			deletearray .@floor_y[0],getarraysize(.@floor_y);
			while ( .@f != .@d_fam) {
				// Reseting Variables
				set .@f_map$,"";
				set .@f_x,0;
				set .@f_y,0;
				next;
				mes .n$;
				mes "Floor #"+.@f+":";
				mes " - Map Name:";
				input(.@f_map$);
				mes " > Input: "+.@f_map$;
				mes " - X Coordinate:";
				input(.@f_x);
				mes " > Input: "+.@f_x;
				mes " - Y Coordinate:";
				input(.@f_y);
				mes " > Input: "+.@f_y;
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes .n$;
				if(checkcell(.@f_map$,.@f_x,.@f_y,cell_chkpass) == 0) {
					mes "This Coordinates are not passable, please try again.";
					continue;
				}
				mes "Map Data for the Floor #"+.@f+" has been added.";
				setarray .@floor_map$[getarraysize(.@floor_map$)],.@f_map$;
				setarray .@floor_y[getarraysize(.@floor_x)],.@f_x;
				setarray .@floor_x[getarraysize(.@floor_y)],.@f_y;
				set .@f,.@f + 1;
			}
			next;
			mes .n$;
			mes "Congratulation!";
			mes "You have successfully added the \""+.@d_name$+"\" "+( (compare(.@d_name$,"Dungeon") == 1)?" ":"Dungeon ")+"with the ID "+.@id+" to the database.";
			for ( set .@a,0; .@a < getarraysize(.@floor_map$); set .@a,.@a + 1)
				query_sql "INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '"+.@id+"' , '"+escape_sql(.@d_name$)+"' , '"+.@d_diff+"' , '"+.@d_level+"' , '"+.@d_plimit+"' , '"+(.@a + 1)+"' , '"+.@floor_map$[.@a]+"' , '"+.@floor_x[.@a]+"' , '"+.@floor_y[.@a]+"' , '"+.@d_repeat+"' , '"+.@d_stat+"' , '"+.@d_renewal+"' )";
			break;
		
			// Edit Dungeon
			case 2:
			query_sql "SELECT DISTINCT `dg_id`, `name` FROM `dqs_dungeon` ORDER BY `dg_id` ASC",.@dg_id,.@dg_name$;
			for ( set .@m,0; .@m < getarraysize(.@dg_id); set .@m,.@m + 1)
				set .@edit_m$,.@edit_m+"- "+.@dg_name$[.@m]+ ( (.@dg_name$[.@m+1] != "")?":":"");
			mes .n$;
			mes "Please select an dungeon from below to edit:";
			next;
			set .@ed,select(.@edit_m$) - 1;
			mes .n$;
			mes "Chosen Dungeon: "+.@dg_name$[.@ed];
			mes " ";
			mes "Is this correct?";
			if(select("- Yes:- No") - 1) continue;
			next;
			mes .n$;
			mes "Now choose what you want to edit:";
			while(1) {
				query_sql "SELECT `name` , `difficulty` , `req_level` , `pty_limit` , `repeat` , `status` , `renewal` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id[.@ed]+"'",.@ed_name$,.@ed_diff,.@ed_lvl,.@ed_plimit,.@ed_rep,.@ed_stat,.@ed_renewal;
				next;
				switch(prompt("- Dungeon Name:- Difficulty:- Required Level:- Party Limit:- Floor Settings:- Repeat Limit:- Status:- Renewal")) {
				
					// Dungeon Name
					case 1:
					mes .n$;
					mes "Current Name: "+.@ed_name$;
					mes " ";
					mes "Please type the new name:";
					next;
					input(.@d_name$);
					mes .n$;
					mes "Chosen Name: "+.@d_name$;
					mes "Is this correct?";
					if(select("- Yes:- No") - 1) continue;
					next;
					mes .n$;
					mes "The Dungeon Name \""+.@ed_name$+"\" has been successfully changed to \""+.@d_name$+"\".";
					query_sql "UPDATE `dqs_dungeon` SET `name` = '"+escape_sql(.@d_name$)+"' WHERE `dg_id` = '"+.@dg_id[.@ed]+"'";
					continue;
					break;
					
					// Difficulty
					case 2:
					mes .n$;
					mes "Current Difficulty: "+.@ed_diff;
					mes " ";
					mes " > 1 = Easy";
					mes " > 2 = Medium";
					mes " > 3 = Hard";
					mes "Note: Please insert the number, not the word.";
					mes "Please type the new difficulty:";
					next;
					if(input(.@d_diff,1,3) != 0) {
						mes .n$;
						mes "Invalid Difficulty, either less than 1 or higher than 3.";
						mes "Please try again.";
						continue;
					}	
					mes .n$;
					mes "Chosen Difficulty: "+.@d_diff;
					mes "Is this correct?";
					if(select("- Yes:- No") - 1) continue;
					next;
					mes .n$;
					mes "The Difficulty has been successfully changed to \""+.@d_diff+"\".";
					query_sql "UPDATE `dqs_dungeon` SET `difficulty` = '"+.@d_diff+"' WHERE `dg_id` = '"+.@dg_id[.@ed]+"'";
					continue;
					break;
					
					// Required Level
					case 3:
					mes .n$;
					mes "Current Level Requirement: "+.@ed_lvl;
					mes " ";
					mes "Please type the new level requirement:";
					next;
					input(.@d_lvl);
					mes .n$;
					mes "Chosen Level: "+.@d_lvl;
					mes "Is this correct?";
					if(select("- Yes:- No") - 1) continue;
					next;
					mes .n$;
					mes "The Level Requirement has been successfully changed to \""+.@d_lvl+"\".";
					query_sql "UPDATE `dqs_dungeon` SET `req_level` = '"+.@d_lvl+"' WHERE `dg_id` = '"+.@dg_id[.@ed]+"'";
					continue;
					break;
					
					// Party Limit
					case 4:
					mes .n$;
					mes "Current Party Limit: "+.@ed_plimit;
					mes " ";
					mes "Please type the new Party Limit:";
					next;
					input(.@d_plimit);
					mes .n$;
					mes "Chosen Party Limit: "+.@d_plimit;
					mes "Is this correct?";
					if(select("- Yes:- No") - 1) continue;
					next;
					mes .n$;
					mes "The Party Limit has been successfully changed to \""+.@d_plimit+"\".";
					query_sql "UPDATE `dqs_dungeon` SET `pty_limit` = '"+.@d_plimit+"' WHERE `dg_id` = '"+.@dg_id[.@ed]+"'";
					continue;
					break;
					
					// Floor Settings
					case 5:
					mes .n$;
					mes "Please choose below what you want to do next:";
					while(1) {
						next;
						deletearray .@fl_id,getarraysize(.@fl_id);
						deletearray .@fl_map$[0],getarraysize(.@fl_map$);
						deletearray .@fl_x[0],getarraysize(.@fl_x);
						deletearray .@fl_y[0],getarraysize(.@fl_y);
						query_sql "SELECT `floor` , `map_name` , `map_x` , `map_y` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id[.@ed]+"'",.@fl_id,.@fl_map$,.@fl_x,.@fl_y;
						switch(prompt("- Add Floor:- Edit Floor:- Delete Floor")) {
						
							// Add Floor
							case 1:
							mes .n$;
							mes "[ == Add Floor == ]";
							mes "I will now select the latest or the next free Floor ID:";
							mes "Afterwards you can start adding the floor data.";
							next;
							for ( set .@f,0; .@f <= getarraysize(.@fl_id); set .@f,.@f + 1)
								if(.@fl_id[.@f] != (.@f+1)) break;
							
							set .@id,.@f + 1;
							
							mes .n$;
							mes "New Floor ID: "+.@f_id;
							mes "Now type the map data, one by one.";
							mes " - Map Name:";
							input(.@f_map$);
							mes " > Input: "+.@f_map$;
							mes " - X Coordinate:";
							input(.@f_x);
							mes " > Input: "+.@f_x;
							mes " - Y Coordinate:";
							input(.@f_y);
							mes " > Input: "+.@f_y;
							mes " ";
							mes "Is that correct?";
							if(select("- Yes:- No") - 1) continue;
							next;
							mes .n$;
							if(checkcell(.@f_map$,.@f_x,.@f_y,cell_chkpass) == 0) {
								mes "This Coordinates are not passable, please try again.";
								continue;
							}
							mes "Map Data for the Floor #"+.@f_id+" has been added.";
							query_sql "INSERT INTO `dqs_dungeon` ( `dg_id` , `name` , `difficulty` , `req_level` , `pty_limit` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` , `status` , `renewal` ) VALUES ( '"+.@dg_id[.@ed]+"' , '"+escape_sql(.@ed_name$)+"' , '"+.@ed_diff+"' , '"+.@ed_lvl+"' , '"+.@ed_plimit+"' , '"+.@f_id+"' , '"+.@f_map$+"' , '"+.@f_x+"' , '"+.@f_y+"' , '"+.@ed_rep+"' , '"+.@ed_stat+"' )";
							continue;
							break;
							
							// Edit Floor
							case 2:
							mes "[ == Edit Floor == ]";
							mes "Please choose the Floor you want to edit:";
							mes "Afterwards you can start editing the floor data itself:";
							mes "But all at once.";
							mes "Format: - Map Name (ID - <Floor ID>)";
							next;
							for ( set .@f,0; .@f < getarraysize(.@fl_id); set .@f,.@f + 1)
								set .@f_editm$,.@f_editm$ + "- "+.@fl_map$[.@f]+" (ID - "+.@fl_id[.@f]+")"+ ( ( .@fl_id[(.@f+1)] != 0)?":":"");
							
							set .@f_ed,select(.@f_editm$) - 1;
							
							mes .n$;
							mes "Chosen Floor: "+.@fl_id[.@f_ed];
							mes " > Map Name: "+.@fl_map$[.@f_ed];
							mes " > Map X: "+.@fl_x[.@f_ed];
							mes " > Map Y: "+.@fl_y[.@f_ed];
							mes " ";
							mes "Now type the new map data, one by one.";
							mes " - Map Name:";
							input(.@f_map$);
							mes " > Input: "+.@f_map$;
							mes " - X Coordinate:";
							input(.@f_x);
							mes " > Input: "+.@f_x;
							mes " - Y Coordinate:";
							input(.@f_y);
							mes " > Input: "+.@f_y;
							mes " ";
							mes "Is that correct?";
							if(select("- Yes:- No") - 1) continue;
							next;
							mes .n$;
							if(checkcell(.@f_map$,.@f_x,.@f_y,cell_chkpass) == 0) {
								mes "This Coordinates are not passable, please try again.";
								continue;
							}
							mes "Map Data for the Floor #"+.@fl_id[.@f_ed]+" has been added."; 
							query_sql "UPDATE `dqs_dungeon` SET `map_name` = '"+.@f_map$+"' , `map_x` = '"+.@f_x+"', `map_y` = '"+.@f_y+"' WHERE `dg_id` = '"+.@dg_id[.@ed]+"' AND `floor` = '"+.@fl_id[.@f_ed]+"'";
							continue;
							break;
							
							// Delete Floor
							case 3:
							mes .n$;
							mes "[ == Delete Floor == ]";
							mes "Please choose the Floor you want to delete:";
							mes "Format: - Map Name (ID - <Floor ID>)";
							next;
							for ( set .@f,0; .@f < getarraysize(.@fl_id); set .@f,.@f + 1)
								set .@f_delm$,.@f_delm$ + "- "+.@fl_map$[.@f]+" (ID - "+.@fl_id[.@f]+")"+ ( ( .@fl_id[(.@f+1)] != 0)?":":"");
							
							set .@f_del,select(.@f_delm$) - 1;
							
							mes .n$;
							mes "Chosen Floor: "+.@fl_id[.@f_del];
							mes " ";
							if(select("- Yes:- No") - 1) continue;
							next;
							mes .n$;
							mes "The floor with the ID#"+.@fl_id[.@f_del]+" has been deleted.";
							query_sql "DELETE FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id[.@ed]+"' AND `floor` = '"+.@fl_id[.@f_del]+"'";
							continue;
							break;
							
							// Floor Settings - Default
							default:
							break;
						} // End of Floor Settings - switch(prompt())
						break;
					} // End of Floor Settings while(1)
					continue;
					break;
					
					// Repeat Limit
					case 6:
					mes .n$;
					mes "Current Repeat Limit: "+.@ed_rep;
					mes " ";
					mes "Please type the new repeat limit:";
					mes "Note: Minimum 1, Maximum "+.dg_max_limit;
					next;
					if(input(.@d_rep,1,.dg_max_limit) != 0) {
						mes .n$;
						mes "Invalid Repeat Limit, either too less or too high.";
						mes "Please try again.";
						continue;
					}
					mes .n$;
					mes "Chosen Repeat Limit: "+.@d_rep;
					mes "Is this correct?";
					if(select("- Yes:- No") - 1) continue;
					next;
					mes .n$;
					mes "The Repeat Limit has been successfully changed to \""+.@d_rep+"\".";
					query_sql "UPDATE `dqs_dungeon` SET `repeat` = '"+.@d_rep+"' WHERE `dg_id` = '"+.@dg_id[.@ed]+"'";
					continue;
					break;
					
					// Status
					case 7:
					mes .n$;
					mes "Current Status: "+.@ed_stat;
					mes " ";
					mes " > 1 = Entry forbidden";
					mes " > 2 = Entry allowed";
					mes "Please type the new status:";
					next;
					if(input(.@d_stat,1,2) != 0) {
						mes .n$;
						mes "Invalid Status, please try again.";
						continue;
					}
					mes .n$;
					mes "Chosen Status: "+.@d_stat;
					mes "Is this correct?";
					if(select("- Yes:- No") - 1) continue;
					next;
					mes .n$;
					mes "The Status has been successfully changed to \""+.@d_stat+"\".";
					query_sql "UPDATE `dqs_dungeon` SET `status` = '"+.@d_stat+"' WHERE `dg_id` = '"+.@dg_id[.@ed]+"'";
					continue;
					break;
					
					// Renewal 
					case 8:
					mes .n$;
					mes "Current Renewal Restriction: "+.@ed_renewal;
					mes " ";
					mes " > 1 = None";
					mes " > 2 = Pre-Renewal only";
					mes " > 3 = Renewal only";
					mes "Please type the new restriction:";
					next;
					if(input(.@d_renewal,1,3) != 0) {
						mes .n$;
						mes "Invalid Type, please try again.";
						continue;
					}
					mes .n$;
					mes "Chosen Restriction: "+.@d_renewal;
					mes "Is this correct?";
					if(select("- Yes:- No") - 1) continue;
					next;
					mes .n$;
					mes "The Renewal Restriction has been successfully changed to \""+.@d_renewal+"\".";
					query_sql "UPDATE `dqs_dungeon` SET `renewal` = '"+.@d_renewal+"' WHERE `dg_id` = '"+.@dg_id[.@ed]+"'";
					continue;
					break;
	
					// Dungeon Edit Options - Default
					default:
					break;
				} // End of Dungeon Edit Options - switch(prompt())
				break;
	
			
			} // End of Dungeon Edit Options - while(1)
			break;
			
			// Delete Dungeon
			case 3:
			query_sql "SELECT DISTINCT `dg_id`, `name` FROM `dqs_dungeon` ORDER BY `dg_id` ASC",.@dg_id,.@dg_name$;
			for ( set .@m,0; .@m < getarraysize(.@dg_id); set .@m,.@m + 1)
				set .@del_m$,.@del_m+"- "+.@dg_name$[.@m]+ ( (.@dg_name$[.@m+1] != "")?":":"");
			mes .n$;
			mes "Please select an dungeon from below to delete:";
			next;
			set .@dg_del,select(.@del_m$) - 1;
			mes .n$;
			mes "Chosen Dungeon: "+.@dg_name$[.@dg_del];
			mes " ";
			mes "Is this correct?";
			if(select("- Yes:- No") - 1) continue;
			next;
			mes .n$;
			mes "The Dungeon "+.@dg_name$[.@dg_del]+" and it's quests has been successfully deleted.";
			query_sql "DELETE FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id[.@dg_del]+"'";
			query_sql "DELETE FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id[.@dg_del]+"'";
			query_sql "DELETE FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id[.@dg_del]+"'";
			// Deleting Delay Variables from the database
			query_sql "DELETE FROM `global_reg_value` WHERE `str` = 'DG_"+.@dg_id[.@q]+"_RepeatCT'";
			query_sql "DELETE FROM `global_reg_value` WHERE `str` = 'DG_"+.@dg_id[.@q]+"_RepeatTimer'";
			break;
			
			// Dungeon Management Options - Cancel Button
			case 255:
			break;
			
		} // End of Dungeon Management - switch(prompt())
		break;
	} // End of Dungeon Management - while(1)
	break;
	
	// Quest Management 
	case 3:
	mes .n$;
	mes "Here is a list of all the available quests ordered by Dungeon:";
	mes " ";
	query_sql "SELECT DISTINCT `dg_id` , `name` , count( `quest_id` ) FROM `dqs_list` GROUP BY `dg_id` ASC",.@dg_id,.@dg_name$,.@q_ct;
	mes "Dungeon ID - Dungeon Name - Quest Quantity";
	for ( set .@q,0; .@q < getarraysize(.@dg_id); set .@q,.@q + 1) {
		mes .@dg_id[.@q]+" - "+.@dg_name$[.@q]+" - "+.@q_ct[.@q];
		set .@dg_menu$,.@dg_menu$ + "- "+.@dg_name$[.@q]+ ( (.@dg_name$[.@q+1] != "")?":":"");
	}
	next;
	mes .n$;
	mes "Please select the Dungeon you want to manage the quests:";
	next;
	set .@q,select(.@dg_menu$) - 1;
	mes .n$;
	mes "Chosen Dungeon: "+.@dg_name$[.@q];
	mes "Is this correct?";
	if(select("- Yes:- No") - 1) close;
	next;
	mes .n$;
	mes "What do you like to do now?";
	while(1) {
		next;
		deletearray .@q_req1[0],getarraysize(.@q_req1);
		deletearray .@q_req2[0],getarraysize(.@q_req2);
		switch(prompt("- Add Quests:- Delete Quests")) {
		
			// Add Quests
			case 1:
			mes .n$;
			if(query_sql("SELECT DISTINCT`quest_id` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id[.@q]+"'",.@q_list) >= .array) {
				mes "I'm sorry, but you can't add anymore quests to this Dungeon, please try another one.";
				close;
			}
			for ( set .@q,0; .@q <= getarraysize(.@q_id); set .@q,.@q + 1)
				if(.@q_id[.@d] != (.@q+1)) break;
			
			set .@id,.@q + 1;
			if(.@id == 1) // Preventing of using Quest ID 1, which is reserved for the Dungeon Quest, which is not in the database.
				set .@id,2;

			mes "Please choose what type of quest it will be:";
			next;
			set .@type,select("- Monster Hunting:- Item Collecting");
			set .@count,0;
			mes .n$;

			// Monster Hunting
			if(.@type == 1) {
				mes "How many mobs should be hunted?";
				mes "^FF0000Note: Maximum "+.mob_ct+"^000000";
				if(input(.@ct,1,.mob_ct) != 0) {
					next;
					mes .n$;
					mes "Invalid Amount, please try again.";
					close;
				}
				next;
				mes .n$;
				mes .@ct+" Mobs should be hunted.";
				mes " ";
				while(.@count < .@ct) {
					next;
					mes .n$;
					mes "Please type the Mob ID for #"+(.@count+1)+", which should be hunted:";
					next;
					input .@mobid;
					mes .n$;
					if(strmobinfo(1,.@mobid) == "null" || strmobinfo(1,.@mobid) == "") {
						mes "Mob not found, please be sure that you have typed the ID correctly and try again.";
						continue;
					}
					mes "Mob Name: "+strmobinfo(1,.@mobid);
					mes " ";
					mes "Now type the amount to hunt:";
					mes "Minimum: "+.mob_min+", Maximum: "+.mob_max;
					next;
					if(input(.@mobam,.mob_min,.mob_max) != 0) {
						mes .n$;
						mes "Invalid Amount, please try again.";
						continue;
					}
					mes .n$;
					mes "Mob Name: "+strmobinfo(1,.@mobid)+" ("+.@mobid+")";
					mes "Mob Quantity: "+.@mobam;
					mes " ";
					mes "Is this correct?";
					if(select("- Yes:- No") - 1) continue;
					setarray .@q_req1[getarraysize(.@q_req1)],.@mobid;
					setarray .@q_req2[getarraysize(.@q_req2)],.@mobam;
					set .@count,.@count + 1;
				}
			
			// Item Collecting
			} else if(.@type == 2) {
				mes "How many items do you want to add?";
				mes "^FF0000Note: Maximum "+.item_ct+"^000000";
				if(input(.@ct,1,.item_ct) != 0) {
					next;
					mes .n$;
					mes "Invalid Amount, please try again.";
					close;
				}
				next;
				mes .n$;
				mes .@ct+" Items should be collected.";
				mes " ";
				while(.@count < .@ct) {
					next;
					mes .n$;
					mes "Type the Item ID for #"+(.@count+1)+":";
					next;
					input .@itemid;
					mes .n$;
					if(getitemname(.@itemid) == "null" || getitemname(.@itemid) == "") {
						mes "The ID "+.@itemid+" doesn't exist. Please try again.";
						continue;
					}
					mes "Item: "+getitemname(.@itemid);
					mes " ";
					mes "Type the amount to collect next:";
					mes "^FF0000Note: Minimum: "+.item_min+", Maximum: "+.item_max+"^000000";
					next;
					if(input(.@itemam,.item_min,.item_max) != 0) {
						mes .n$;
						mes "Invalid Amount, please try again.";
						continue;
					}
					mes .n$;
					mes "Item: "+getitemname(.@itemid)+" ("+.@itemid+")";
					mes "Amount: "+.@itemam;
					mes " ";
					mes "Correct?";
					if(select("- Yes:- No") - 1) continue;
					setarray .@q_req1[getarraysize(.@q_req1)],.@itemid;
					setarray .@q_req2[getarraysize(.@q_req2)],.@itemam;
					set .@count,.@count + 1;
				}
			}
			next;
			mes .n$;
			mes "Now put the reward:";
			mes " > Zeny = 1";
			mes " > Cash Points = 2";
			mes " > Item = Item ID";
			input .@rew_1;
			next;
			mes .n$;
			if(.@rew_1 == 0 || (.@rew_1 > 2 && .@rew_1 < 512)) {
				mes "You have put an invalid Reward.";
				mes "Try again please.";
				continue;
			}	
			if(.@rew_1 >= 512 && (getitemname(.@rew_1) == "null" || getitemname(.@rew_1) == "") ) {
				mes "You have put an invalid Item ID.";
				mes "Try again please.";
				continue;
			}
			mes "Chosen Reward: "+( (.@rew_1 == 1)?"Zeny": ( (.@rew_1 == 2)?"Cash Points":"Item: "+getitemname(.@rew_1)));
			mes "Now the amount:";
			mes " - Maximum Zeny: "+.rew_zeny;
			mes " - Maximum Cash Points: "+.rew_cash;
			mes " - Maximum Item Amount: "+.rew_item;
			input .@rew_2;
			next;
			mes .n$;
			switch(.@rew_1) {
				
				// Zeny Reward
				case 1:	if(.@rew_2 > .rew_zeny) set .@f,1; break;
				// Cash Points Reward
				case 2:	if(.@rew_2 > .rew_cash) set .@f,1; break;
				// Item Reward
				default: 
				if(.@rew_2 > .rew_item) 
					set .@f,1;
				else if( (.@rew_2*getiteminfo(.@rew_1,6)) >= .rew_weight)
					set .@f,2;
				break;
			}
			if(.@f) {
				mes "I'm sorry, but the reward amount you have put is higher than the limit.";
				if(.@f == 2) mes "To precise - Weight limit of "+.rew_weight+" has been reached. "+.@rew_2+"x "+getitemname(.@rew_1)+" would weight "+(.@rew_2*getiteminfo(.@rew_1,6))+".";
				continue;
			}
			for ( set .@r,0; .@r < getarraysize(.@q_req1); set .@r,.@r + 1)
				if(.@type == 1)
					query_sql "INSERT INTO `dqs_list` ( `dg_id` , `quest_id` , `quest_type` , `mob_id` , `mob_am` , `reward_id` , `reward_am` ) VALUES ( '"+.@dg_id[.@q]+"', '"+.@id+"' , '"+.@type+"' , '"+.@q_req1[.@r]+"' , '"+.@q_req2[.@r]+"' , '"+.@rew_1+"' , '"+.@rew_2+"' )";
				else if(.@type == 2)
					query_sql "INSERT INTO `dqs_list` ( `dg_id` , `quest_id` , `quest_type` , `item_id` , `item_am` , `reward_id` , `reward_am` ) VALUES ( '"+.@dg_id[.@q]+"', '"+.@id+"' , '"+.@type+"' , '"+.@q_req1[.@r]+"' , '"+.@q_req2[.@r]+"' , '"+.@rew_1+"' , '"+.@rew_2+"')";
			mes "The Quest ID#"+.@id+" has been added successfully.";
			continue;
			break;
			
			// Deleting Quests
			case 2:
			mes .n$;
			query_sql "SELECT DISTINCT `quest_id` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id[.@q]+"'",.@q_list;
			if(getarraysize(.@q_list) < 1) {
				mes "I'm sorry, but you can't remove quests from this Dungeon, because there are none yet. Please try another one.";
				close;
			}
			mes "Please choose, which Quest you want to remove:";
			for ( set .@q,0; .@q < getarraysize(.@q_list); set .@q,.@q + 1) 
				set .@r_menu$,.@r_menu$ + "- ID#"+.@q_list[.@q]+ ( (.@q_list[.@q+1] != 0)?":":"");
			next;
			set .@rem,select(.@r_menu$) - 1;
			mes .n$;
			mes "Do you really want to remove the Quest with the ID '"+.@q_list[.@rem]+"'?";
			if(select("- Yes:- No") - 1) close;
			next;
			mes .n$;
			mes "The Quest with the ID '"+.@q_list[.@rem]+"' has been removed successfully.";
			query_sql "DELETE FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id[.@q]+"' AND `quest_id` = '"+.@q_list[.@rem]+"'";
			query_sql "DELETE FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id[.@q]+"' AND `quest_id` = '"+.@q_list[.@rem]+"'";
			continue;
			break;
			
			// Quest Management Options - Default
			default:
			break;
		
		} // End of Quest Management - switch(prompt())
	} // End of Quest Management - while(1)
	break;
	
	// Reward Management
	case 4:
	mes .n$;
	mes "Please choose below what you want to manage:";
	while(1) {
		next;
		switch(prompt("- Dungeon Points:- MvP Points")) {
			
			// Dungeon Points
			case 1:
			mes .n$;
			mes "[ == Dungeon Points == ]";
			mes "Please choose below which setting you want to change:";
			next;
			switch(select("- Base Points:- Dungeon Points Variable:- Exchanger Settings:- Previous Menu")) {
				
				// Base Points
				case 1:
				mes .n$;
				mes "Current Base Points: "+.dg_pts;
				mes " > 0 = Offline";
				mes " > 1+ = Value Gained";
				mes " ";
				mes "Please type the new value:";
				next;
				input(.@rew_pts);
				mes .n$;
				mes "New Value: "+.@rew_pts;
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes .n$;
				mes " The Base Points has been successfully changed to "+.@rew_pts;
				set .dg_pts,.@rew_pts;
				break;
					
				// Dungeon Points Variable
				case 2:
				mes .n$;
				mes "Current Variable Name: "+.dg_var$;
				mes " > DQ_Pts = Default";
				mes " ";
				mes "Please type the new name:";
				next;
				input(.@rew_var$);
				mes .n$;
				mes "New Variable Name: "+.@rew_var$;
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes .n$;
				mes " The Variable Name has been successfully changed to "+.@rew_var$;
				set .dg_var$,.@rew_var$;
				break;
					
				// Exchanger Settings
				case 3:
				mes .n$;
				mes "[ == Exchanger Settings]";
				mes "Please choose what do do:";
				while(1) {
					next;
					set .@dgx_m$,"";
					switch(prompt("- Add Item:- Edit Item:- Remove Item")) {
						
						// Add Item
						case 1:
						mes .n$;
						if(getarraysize(.dg_ex) == .array) {
							mes "I'm sorry, but you can't add anymore Items to the Exchanger.";
							mes "Please delete an item or edit an existing one.";
							continue;
						}
						mes "Please insert now the following in the same order:";
						mes " > Item ID";
						mes " > Costs each Exchange";
						mes " > Gained Amount each Exchange";
						mes " ";
						mes "[ == Item ID == ]";
						input(.@i_id);
						if(getitemname(.@i_id) == "") {
							next;
							mes .n$;
							mes "Unknown Item, please try another one.";
							continue;
						}
						mes " > Input: "+.@i_id+" ("+getitemname(.@i_id)+")";
						mes "[ == Costs == ]";
						input(.@i_cost);
						mes " > Input: "+.@i_cost;
						mes "[ == Gained Amount == ]";
						input(.@i_gain);
						mes " > Input: "+.@i_gain;
						mes " ";
						mes "Is this correct?";
						if(select("- Yes:- No") - 1) continue;
						next;
						mes .n$;
						mes .@i_gain+"x "+getitemname(.@i_id)+" (ID: "+.@i_id+") with a Cost each Exchange of "+.@i_cost+" has been added successfully to the Dungeon Points Exchanger.";
						setarray .dg_ex[getarraysize(.dg_ex)],.@i_id;
						setarray .dg_ex_cost[getarraysize(.dg_ex_cost)],.@i_cost;
						setarray .dg_ex_am[getarraysize(.dg_ex_am)],.@i_gain;
						continue;
						break;
						
						// Edit Item
						case 2:
						mes .n$;
						if(getarraysize(.dg_ex) < 1) {
							mes "I'm sorry, but there are no Items you could edit in the Exchanger.";
							mes "Please add an item first.";
							continue;
						}
						mes "Please select an Item to edit from below:";
						next;
						for ( set .@r,0; .@r < getarraysize(.dg_ex); set .@r,.@r + 1) 
							set .@dgx_m$,.@dgx_m$ + "- "+getitemname(.dg_ex[.@r])+" (ID - "+.dg_ex[.@r]+")"+ ( (.dg_ex[.@r+1] != 0)?":":"");
							
						set .@i_ed,select(.@dgx_m$) - 1;
						
						mes .n$;
						mes "Item: "+getitemname(.dg_ex[.@i_ed])+" (ID: "+.dg_ex[.@i_ed]+")";
						mes "Cost each Exchange: "+.dg_ex_cost[.@i_ed];
						mes "Gained Amount: "+.dg_ex_am[.@i_ed];
						mes " ";
						mes "Is this correct?";
						if(select("- Yes:- No") - 1) continue;
						next;
						mes .n$;
						mes "Please choose which value you want to edit:";
						next;
						switch(select("- Item ID:- Cost each Exchange:- Gained Amount")) {
						
							// Edit Item ID
							case 1:
							mes .n$;
							mes "Current Item ID: "+.dg_ex[.@i_ed];
							mes " ";
							mes "Please type the new value:";
							next;
							input(.@id_new);
							mes .n$;
							if(getitemname(.@id_new) == "" || getitemname(.@id_new) == "null") {
								mes "Invalid Item ID, please try again.";
								break;
							}
							mes "Chosen ID: "+.@id_new+" > "+getitemname(.@id_new);
							mes " ";
							mes "Is this correct?";
							if(select("- Yes:- No") - 1) break;
							next;
							mes .n$;
							mes "The Item ID has been changed successfully to "+.@id_new;
							setarray .dg_ex[.@i_ed],.@id_new;
							break;
							
							// Edit Cost each Exchange
							case 2:
							mes .n$;
							mes "Current Cost: "+.dg_ex_cost[.@i_ed];
							mes " ";
							mes "Please type the new value:";
							next;
							input(.@cost_new);
							mes .n$;
							if(.@cost_new < 1) {
								mes "Invalid Cost, can't be below 1, please try again.";
								break;
							}
							mes "New Value: "+.@cost_new;
							mes " ";
							mes "Is this correct?";
							if(select("- Yes:- No") - 1) break;
							next;
							mes .n$;
							mes "The Cost each Exchange has been changed successfully to "+.@cost_new;
							setarray .dg_ex_cost[.@i_ed],.@cost_new;
							break;
							
							// Edit Gained Amount each Exchange
							case 3:
							mes .n$;
							mes "Current Amount: "+.dg_ex_am[.@i_ed];
							mes " ";
							mes "Please type the new value:";
							next;
							input(.@gain_new);
							mes .n$;
							if(.@gain_new < 1) {
								mes "Invalid Amount, can't be below 1, please try again.";
								break;
							}
							mes "New Value: "+.@gain_new;
							mes " ";
							mes "Is this correct?";
							if(select("- Yes:- No") - 1) break;
							next;
							mes .n$;
							mes "The Cost each Exchange has been changed successfully to "+.@gain_new;
							setarray .dg_ex_am[.@i_ed],.@gain_new;
							break;
						}
						continue;
						break;
						
						// Remove item
						case 3:
						mes .n$;
						if(getarraysize(.dg_ex) < 1) {
							mes "I'm sorry, but there are no Items you could remove in the Exchanger.";
							mes "Please add an item first.";
							continue;
						}
						mes "Please select an Item to remove from below:";
						next;
						for ( set .@r,0; .@r < getarraysize(.dg_ex); set .@r,.@r + 1) 
							set .@dgx_m$,.@dgx_m$ + "- "+getitemname(.dg_ex[.@r])+" (ID - "+.dg_ex[.@r]+")"+ ( (.dg_ex[.@r+1] != 0)?":":"");
							
						set .@i_rem,select(.@dgx_m$) - 1;
						
						mes .n$;
						mes "Chosen Item: "+getitemname(.dg_ex[.@i_rem])+" (ID: "+.dg_ex[.@i_rem]+")";
						mes " ";
						mes "Is this correct?";
						if(select("- Yes:- No") - 1) continue;
						next;
						mes .n$;
						mes "The Item "+getitemname(.dg_ex[.@i_rem])+" (ID: "+.dg_ex[.@i_rem]+") has been removed successfully from the Dungeon Points Exchanger.";
						deletearray .dg_ex[.@i_rem],1;
						deletearray .dg_ex_cost[.@i_rem],1;
						deletearray .dg_ex_am[.@i_rem],1;
						continue;
						break;
					
						// Exchanger Settings Options - Default
						default:
						break;
						
					} // End of Exchanger Settings - switch(prompt())
					break;
					
				} // End of Exchanger Settings - while(1)
				break;
				
				// Previous Menu
				case 4:
				break;
			}
			continue;
				
			// MvP Points
			case 2:
			mes .n$;
			mes "[ == MvP Points == ]";
			mes "Please choose below which setting you want to change:";
			next;
			switch(select("- Base Points:- MvP Points Variable:- Exchanger Settings:- Previous Menu")) {
			
				// Base Points
				case 1:
				mes .n$;
				mes "Current Base Points: "+.mvp_pts;
				mes " > 0 = Offline";
				mes " > 1+ = Value Gained";
				mes " ";
				mes "Please type the new value:";
				next;
				input(.@rew_pts);
				mes .n$;
				mes "New Value: "+.@rew_pts;
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes .n$;
				mes " The Base Points has been successfully changed to "+.@rew_pts;
				set .mvp_pts,.@rew_pts;
				break;
				
				// Dungeon Points Variable
				case 2:
				mes .n$;
				mes "Current Variable Name: "+.mvp_var$;
				mes " > DMvP_Pts = Default";
				mes " ";
				mes "Please type the new name:";
				next;
				input(.@rew_var$);
				mes .n$;
				mes "New Variable Name: "+.@rew_var$;
				mes " ";
				mes "Is that correct?";
				if(select("- Yes:- No") - 1) continue;
				next;
				mes .n$;
				mes " The Variable Name has been successfully changed to "+.@rew_var$;
				set .mvp_var$,.@rew_var$;
				break;
				
				// Exchanger Settings
				case 3:
				mes .n$;
				mes "[ == Exchanger Settings]";
				mes "Please choose what do do:";
				while(1) {
					next;
					set .@dgx_m$,"";
					switch(prompt("- Add Item:- Edit Item:- Remove Item")) {

						// Add Item
						case 1:
						mes .n$;
						if(getarraysize(.mvp_ex) == .array) {
							mes "I'm sorry, but you can't add anymore Items to the Exchanger.";
							mes "Please delete an item or edit an existing one.";
							continue;
						}
						mes "Please insert now the following in the same order:";
						mes " > Item ID";
						mes " > Costs each Exchange";
						mes " > Gained Amount each Exchange";
						mes " ";
						mes "[ == Item ID == ]";
						input(.@i_id);
						if(getitemname(.@i_id) == "") {
							next;
							mes .n$;
							mes "Unknown Item, please try another one.";
							continue;
						}
						mes " > Input: "+.@i_id+" ("+getitemname(.@i_id)+")";
						mes "[ == Costs == ]";
						input(.@i_cost);
						mes " > Input: "+.@i_cost;
						mes "[ == Gained Amount == ]";
						input(.@i_gain);
						mes " > Input: "+.@i_gain;
						mes " ";
						mes "Is this correct?";
						if(select("- Yes:- No") - 1) continue;
						next;
						mes .n$;
						mes .@i_gain+"x "+getitemname(.@i_id)+" (ID: "+.@i_id+") with a Cost each Exchange of "+.@i_cost+" has been added successfully to the MvP Points Exchanger.";
						setarray .mvp_ex[getarraysize(.mvp_ex)],.@i_id;
						setarray .mvp_ex_cost[getarraysize(.mvp_ex_cost)],.@i_cost;
						setarray .mvp_ex_am[getarraysize(.mvp_ex_am)],.@i_gain;
						continue;
						break;
						
						// Edit Item
						case 2:
						mes .n$;
						if(getarraysize(.mvp_ex) < 1) {
							mes "I'm sorry, but there are no Items you could edit in the Exchanger.";
							mes "Please add an item first.";
							continue;
						}
						mes "Please select an Item to edit from below:";
						next;
						set .@dgx_m$,"";
						for ( set .@r,0; .@r < getarraysize(.mvp_ex); set .@r,.@r + 1) 
							set .@dgx_m$,.@dgx_m$ + "- "+getitemname(.mvp_ex[.@r])+" (ID - "+.mvp_ex[.@r]+")"+ ( (.mvp_ex[.@r+1] != 0)?":":"");
							
						set .@i_ed,select(.@dgx_m$) - 1;
						
						mes .n$;
						mes "Item: "+getitemname(.mvp_ex[.@i_ed])+" (ID: "+.mvp_ex[.@i_ed]+")";
						mes "Cost each Exchange: "+.mvp_ex_cost[.@i_ed];
						mes "Gained Amount: "+.mvp_ex_am[.@i_ed];
						mes " ";
						mes "Is this correct?";
						if(select("- Yes:- No") - 1) continue;
						next;
						mes .n$;
						mes "Please choose which value you want to edit:";
						next;
						switch(select("- Item ID:- Cost each Exchange:- Gained Amount")) {
						
							// Edit Item ID
							case 1:
							mes .n$;
							mes "Current Item ID: "+.mvp_ex[.@i_ed];
							mes " ";
							mes "Please type the new value:";
							next;
							input(.@id_new);
							mes .n$;
							if(getitemname(.@id_new) == "" || getitemname(.@id_new) == "null") {
								mes "Invalid Item ID, please try again.";
								break;
							}
							mes "Chosen ID: "+.@id_new+" > "+getitemname(.@id_new);
							mes " ";
							mes "Is this correct?";
							if(select("- Yes:- No") - 1) break;
							next;
							mes .n$;
							mes "The Item ID has been changed successfully to "+.@id_new;
							setarray .mvp_ex[.@i_ed],.@id_new;
							break;
							
							// Edit Cost each Exchange
							case 2:
							mes .n$;
							mes "Current Cost: "+.mvp_ex_cost[.@i_ed];
							mes " ";
							mes "Please type the new value:";
							next;
							input(.@cost_new);
							mes .n$;
							if(.@cost_new < 1) {
								mes "Invalid Cost, can't be below 1, please try again.";
								break;
							}
							mes "New Value: "+.@cost_new;
							mes " ";
							mes "Is this correct?";
							if(select("- Yes:- No") - 1) break;
							next;
							mes .n$;
							mes "The Cost each Exchange has been changed successfully to "+.@cost_new;
							setarray .mvp_ex_cost[.@i_ed],.@cost_new;
							break;
							
							// Edit Gained Amount each Exchange
							case 3:
							mes .n$;
							mes "Current Amount: "+.mvp_ex_am[.@i_ed];
							mes " ";
							mes "Please type the new value:";
							next;
							input(.@gain_new);
							mes .n$;
							if(.@gain_new < 1) {
								mes "Invalid Amount, can't be below 1, please try again.";
								break;
							}
							mes "New Value: "+.@gain_new;
							mes " ";
							mes "Is this correct?";
							if(select("- Yes:- No") - 1) break;
							next;
							mes .n$;
							mes "The Cost each Exchange has been changed successfully to "+.@gain_new;
							setarray .mvp_ex_am[.@i_ed],.@gain_new;
							break;
						}
						continue;
						break;
						
						// Remove item
						case 3:
						mes .n$;
						if(getarraysize(.mvp_ex) < 1) {
							mes "I'm sorry, but there are no Items you could remove in the Exchanger.";
							mes "Please add an item first.";
							continue;
						}
						mes "Please select an Item to remove from below:";
						next;
						for ( set .@r,0; .@r < getarraysize(.mvp_ex); set .@r,.@r + 1) 
							set .@dgx_m$,.@dgx_m$ + "- "+getitemname(.mvp_ex[.@r])+" (ID - "+.mvp_ex[.@r]+")"+ ( (.mvp_ex[.@r+1] != 0)?":":"");
							
						set .@i_rem,select(.@dgx_m$) - 1;
						
						mes .n$;
						mes "Chosen Item: "+getitemname(.mvp_ex[.@i_rem])+" (ID: "+.mvp_ex[.@i_rem]+")";
						mes "Is this correct?";
						if(select("- Yes:- No") - 1) continue;
						next;
						mes .n$;
						mes "The Item "+getitemname(.mvp_ex[.@i_rem])+" (ID: "+.mvp_ex[.@i_rem]+") has been removed successfully from the MvP Points Exchanger.";
						deletearray .mvp_ex[.@i_rem],1;
						deletearray .mvp_ex_cost[.@i_rem],1;
						deletearray .mvp_ex_am[.@i_rem],1;						
						continue;
						break;
					
						// MvP Exchanger Settings Options - Default
						default:
						break;
						
					} // End of MvP Exchanger Settings - switch(prompt())
					break;
					
				} // End of MvP Exchanger Settings - while(1)
				break;
				
				// Previous Menu
				case 4:
				break;
			}
			continue;
				
			// Reward Settings Options - Default
			default:
			break;
				
		} // End of Reward Management - switch(prompt)
		break;
	} // End of Reward Management - while(1)
	break;		
	
	// Nevermind
	case 5:
	break;
}
close;

OnInit:
// Dungeon Quest System not loaded yet
set $@DQS_Sys,0;
// =============== NPC Name ===============
set .n$,"["+strnpcinfo(1)+"]";
// =============== Debug Mode ===============
// * (Debug Messages in Map Server)
// > 0: Off
// > 1: On 
set .debug,0;
set .gm,80; // GM Access Level 
// ============== Dungeon Settings ================== //
setarray .exp[1],50,100,150; // EXP Rate in % for Difficulty: Easy/Medium/Hard
set .max_exp,500; // Max EXP Rate Settings for GM Panel
// Server Array Limit
// > rAthena since commit 6295c77 (Script Engine Upgrade):
// = 2000000000 (2 Billion)
// > Others/Default: 128
set .array,2000000000;
// ==== Dungeon Delay Settings ======
// * Max Dungeon Limit:
// (How often an dungeon can be done till the delay below comes active)
// Note: Don't use 0, that's used in the dungeon managementn
set .dg_max_limit,1000;
// * Type:
// - 1: Hour
// - 2: Day
// - 3: Week
// - 4: Month
set .dg_del_type,2;
// * Calculation Values values in seconds
// Note: This values will be multiplied by Dungeon Difficulty later on.
switch(.q_del_type) {
	case 1: set .dg_delay,3600; break;
	case 2: set .dg_delay,86400; break;
	case 3: set .dg_delay,604800; break;
	case 4: set .dg_delay,2592000; break;
}
// ===== Quest Settings =====
// Minimum and Maximum Mob Amount
set .mob_min,1;
set .mob_max,10;
// Maximum Mobs you can hunt at the same time
set .mob_ct,3;
// Level Restriction
set .level,MAX_LEVEL; // 0 = Off / MAX_LEVEL - Server Max Level (src/map/map.h)
// Minimum and Maximum Item Amount
set .item_min,1;
set .item_max,200;
// Maximum Items you can collect at the same time
set .item_ct,5;
// ==== Reward Settings per Quest ====
// * Maximum Zeny Amount
set .rew_zeny,10000000; // 10m Zeny
// * Maximum Cash Points Amount
set .rew_cash,1000;
// * Maximum Item Amount
set .rew_item,10000;
// * Maximum Item Weight
// (= Item Weight* Reward Amount)
set .rew_weight,10000;
// ========================
// Dungeon Reward > 0 = Off, 1+ = Base Dungeon Quest Points, will be multiplied by Difficulty
set .dg_pts,10; 
if(.dg_pts > 0) {
	set .dg_var$,"DQ_Pts";
	// Dungeon Points Exchanger:
	// > Item IDs 
	setarray .dg_ex[0],512;
	// > How many items you get per exchange?
	setarray .dg_ex_am[0],10;
	// > How much does one exchange cost?
	setarray .dg_ex_cost[0],2;
	
}
// MvP Reward for each MvP > 0 = Off, 1+ = Base MvP Points, will also be multiplied by Difficulty
set .mvp_pts,1; 
if(.mvp_pts > 0) {
	set .mvp_var$,"DMvP_Pts";
	// MvP Points Exchanger:
	// > Item IDs 
	setarray .mvp_ex[0],512;
	// > How many items you get per exchange?
	setarray .mvp_ex_am[0],10;
	// > How much does one exchange cost?
	setarray .mvp_ex_cost[0],2;
}
// Use Mapflags?
// 0 = Disabled
// 1 = Enabled
set .dg_mf,1;
// Put the mapflags here
setarray .mapflags[0],mf_nowarp,mf_partylock;

if(.dg_mf) {
	query_sql "SELECT `map_name` FROM `dqs_dungeon`",.@map_name$;
	for ( set .@m,0; .@m < getarraysize(.@map_name$); set .@m,.@m + 1)
		for ( set .@mf,0; .@mf < getarraysize(.mapflags); set .@mf,.@mf + 1)
			setmapflag .@map_name$[.@m],.mapflags[.@mf];
}
query_sql "SHOW TABLES LIKE 'dqs_list'",$@dqs_tab$;
if($@dqs_tab$[0] != "") 
	set $@DQS_Sys,1;

// Custom atcommand: @checkdq
bindatcmd "checkdg",strnpcinfo(1)+"::OnPCLoginEvent";
// Custom atcommand: @dqs_gm
bindatcmd "dqs_gm",strnpcinfo(1)+"::OnGMAccess";

if(.debug) debugmes "Starting Global Timer for Party Member Sync";
initnpctimer; // Timer for for Party Check
announce "[Server]: Dungeon Quest Service: "+ ( ($@DQS_Sys == 1)?"Online":"Offline"),bc_all|bc_yellow;
end;

OnNPCKillEvent:
if(!$@DQS_Sys) end;
if(!@cp)
	query_sql "SELECT `dg_id` , `start` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",@dg_id,@cp;
if(@map$ == "")
	query_sql "SELECT `difficulty` , `map_name` FROM `dqs_dungeon` WHERE `dg_id` = '"+@dg_id+"' AND `floor` = '"+@cp+"'",.@diff,@map$;
if(strcharinfo(3) != @map$)
	if(query_sql("SELECT `floor` FROM `dqs_dungeon` WHERE `dg_id` = '"+@dg_id+"' AND `map_name` = '"+strcharinfo(3)+"'",.@cp) > 0) 
		query_sql "UPDATE `dqs_dungeon` SET `floor` = '"+.@cp+"' WHERE `dg_id` = '"+@dg_id+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
	else 
		end;

query_sql "SELECT SUM( `req_am` ) , SUM( `mob_am` ) , `dg_id` , `quest_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `mob_id` = '"+killedrid+"'",.@req_am,.@mob_am,.@dg_id,.@q_id;
if( (.@mob_am + 1) <= .@req_am)
	for ( set .@m,0; .@m < getarraysize(.@dg_id); set .@m,.@m + 1) {
		// Updating SQL Table for Monster Hunting Quests
		query_sql "UPDATE `dqs_party` SET `mob_am` = `mob_am` + 1 WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `mob_id` = '"+killedrid+"' AND `mob_am` < '"+.@req_am+"' LIMIT 1";
		query_sql "SELECT `name` FROM `dqs_dungeon` WHERE `dg_id` = '"+.@dg_id[.@m]+"'",.@n_name$,.@n_map$;
		dispbottom .@name$+": Monster Hunting - "+strmobinfo(1,killedrid)+" : "+(.@mob_am + 1)+"/"+.@req_am,0x00FF00;
	}
	
// Player is in a party
if(getcharid(1) != 0)
	addrid(1,0,getcharid(1));
	
// Reading EXP values from Mob Database
set .@expr,.exp[.@diff];
set .@bexp,(getmonsterinfo(killedrid,3)*.@expr)/100;
set .@jexp,(getmonsterinfo(killedrid,4)*.@expr)/100;
	
// Member is alive
if(readparam(5) < 1) end;

getexp .@bexp,.@jexp;
dispbottom .n$+": Recieved Bonus: "+.@expr+"% - Base EXP: "+.@bexp+"/Job EXP: "+.@jexp,0x00FF00;
// Killed MvP > rewarding with points if .mvp_pts > 0
if(getmonsterinfo(killedrid,22) != 0 && .mvp_pts > 0) {
	setd(""+.mvp_var$),getd(""+.mvp_var$) + (.mvp_pts*.@diff);
	dispbottom .n$+": Recieved MVP Points: "+.@m_res+"x MvP Points.",0x00FF00;
}
end;

// OnLogin List and AtCommand
OnPCLoginEvent:
if(!$@DQS_Sys) end;
query_sql "SELECT DISTINCT `quest_id` , `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",.@q_id,.@dg_id;
set .@n$,"[Dungeon Quests]";
if(getarraysize(.@q_id) < 1) {
	dispbottom .@n$+": You don't have any active quests.";
	end;
}
dispbottom .@n$+": You have "+getarraysize(.@q_id)+" active Quests.";
dispbottom .@n$+": I will now list them per Dungeon:";
	
// Displaying Quest Progress
for ( set .@l,0; .@l < getarraysize(.@q_id); set .@l,.@l + 1) {
	if(.@q_id[.@l] == 1)  continue;
	dispbottom "  [* ====== Quest #"+.@q_id[.@l]+" - Progress: ====== *]  ";
	query_sql "SELECT `quest_type` FROM `dqs_party` WHERE `dg_id` = '"+.@dg_id[.@l]+"' AND `quest_id` = '"+.@q_id[.@l]+"'",.@q_type;
	dispbottom "  >  Type: "+( (.@q_type == 1)?"Monster Hunting":"Item Collecting");
	if(.@q_type == 1)
		query_sql "SELECT `mob_id` , `mob_am` FROM `dqs_list` WHERE `dg_id` = '"+.@dg_id[.@l]+"' AND `quest_id` = '"+.@q_id[.@l]+"'",.@req1,.@req2;
	else
		query_sql "SELECT `item_id` , `item_am` FROM `dqs_list` WHERE `dg_id` = '"+.@n_id[.@l]+"' AND `quest_id` = '"+.@q_id[.@l]+"'",.@req1,.@req2;
	
	for ( set .@p,0; .@p < getarraysize(.@req1); set .@p,.@p + 1)
		if(.@q_type == 1) {
			query_sql "SELECT `mob_am` FROM `dqs_party` WHERE `dg_id` = '"+.@n_id[.@l]+"' AND `quest_id` = '"+.@q_id[.@l]+"' AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"' AND `mob_id` = '"+.@req1[.@p]+"'",.@m_got;
			dispbottom "  >  Mob#"+(.@p+1)+": "+strmobinfo(1,.@req1[.@p])+" - "+.@m_got+"/"+.@req2[.@p];
		} else 
			dispbottom "  >  Item#"+(.@p+1)+": "+getitemname(.@req1[.@p])+" - "+countitem(.@req1[.@p])+"/"+.@req2[.@p];
}
end;

// Every 15th Minute, check if there are non-existent party entries in the database
OnTimer900000:
stopnpctimer;
if(.debug) debugmes "OnTimer Executed at 15 Minute:";
query_sql "SELECT `pty_id` FROM `dqs_party`",.@pty_id;
for ( set .@p,0; .@p < getarraysize(.@pty_id); set .@p,.@p + 1)
	if(query_sql("SELECT `party_id` FROM `party` WHERE `party_id` = '"+.@pty_id[.@p]+"'",.@p_id) == -1) {
		query_sql "DELETE FROM `dqs_party` WHERE `pty_id` = '"+.@pty_id[.@p]+"'";
		query_sql "DELETE FROM `dqs_app` WHERE `pty_id` = '"+.@pty_id[.@p]+"'";
	}

if(.debug) debugmes "Restarting Timer....";
initnpctimer;
end;

OnPCLogoutEvent:
if(!$@DQS_Sys) end;
if(!getcharid(1)) end; // Not in a party
// Not registered
if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",@dg_id) == -1)
	end;
if(getpartyleader(getcharid(1),1) != getcharid(3)) end; // Attached player is not party leader
if(.debug) debugmes "Party Leader logged off, changing leader:";
set .@pty_id,getcharid(1);
set .@pty_lead,getpartyleader(getcharid(1),1);
getpartymember(.@pty_id,1);
getpartymember(.@pty_id,2);
if(.debug) debugmes "Party ID: "+.@pty_id+", Party Leader Acc ID:"+ .@pty_lead;
for ( set .@p,0; .@p < $@partymembercount; set .@p,.@p + 1) {
	// Member is logged in and is not the current Party Leader
	if(isloggedin($@partymemberaid[.@p],$@partymembercid[.@p]) == 1 && $@partymemberaid[.@p] != .@pty_lead) {
		if(.debug) debugmes "Changing Leader of party "+.@pty_id+" to "+$@partymembercid[.@p];
		party_changeleader(.@pty_id,$@partymembercid[.@p]);
		break;
	}
}
end;
}
// ======================= Party Join Feature - NPC =====================
-	script	Party_Join	-,{

OnInit:
set .n$,getvariableofnpc(.n$,"Dungeon Quest Service");
end;

OnWhisperGlobal:
if(!$@DQS_Sys) end;
if(!getcharid(1)) end; // Not in a party
if(getmapflag(strcharinfo(3),mf_pvp) == 1 || getmapflag(strcharinfo(3),mf_gvg) == 1) end; // On PvP or GvG Maps = No effect
if(strcharinfo(0) != getpartyleader(getcharid(1))) end;
// Not registered
if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",@dg_id) == -1)
	end;

// List of the requesters
if(@whispervar0$ == "List" || @whispervar0$ == "list") {
	if(query_sql("SELECT `app_id` , `name` , `level` , `class` FROM `dqs_app` WHERE `pty_id` = '"+getcharid(1)+"'",.@app_id,.@name$,.@lvl$,.@class) == -1) {
		dispbottom .n$+": I'm sorry, but there are no applicants to list!",0x00FFFF;
		end;
	}
	dispbottom .n$+": I will now list the requesters, which want to join your party.",0x00FFFF;
	dispbottom .n$+": Each requester gets an number, like 1.<Name>.",0x00FFFF;
	dispbottom .n$+": With this number, you have to re-pm me, but instead of \"List\", you have to use \"Join\" or \"Abort\".\"Accept\" or \"Decline\" does also work.",0x00FFFF;
	dispbottom .n$+": After \"Join\"/\"Accept\" or \"Abort\"/\"Decline\", you have to add \"#<Number of requester>\".",0x00FFFF;
	dispbottom "===================";
	dispbottom "- Number: Name, Level:, Class",0xFF2200;
	for ( set .@r,0; .@r < getarraysize(.@app_id); set .@r,.@r + 1)
		dispbottom "- "+(.@r+1)+": "+.@name$[.@r]+", "+.@lvl$[.@r]+", "+jobname(.@class[.@r]),0xFF2200;
	
	dispbottom "===================";
	dispbottom .n$+": I will now list here your party members, also with a number, to warp the chosen player to that party member.",0x00FFFF;
	dispbottom .n$+": To let the player warp to one of your party members add after the number of the player \"#<Number of Member>\".",0x00FFFF;
	dispbottom .n$+": So it would look something like this: \"Join#1#1\", this would let the 1st requester in the list to the 1st party member, most cases you.",0x00FFFF;
	dispbottom .n$+": Note: If you use \"Abort\"/\"Decline\" the number of the party member won't take effect, of course.",0x00FFFF;
	dispbottom "===================";
	getpartymember(getcharid(1));
	set @partyct,$@partymembercount;
	copyarray @partymemb$[0],$@partymembername$[0],@partyct;
	dispbottom "- Number: Member Name:",0xFF2200;
	for ( set .@p,0; .@p < @partyct; set .@p,.@p + 1)
		if(isloggedin(getcharid(3,@partymemb$[.@p]),getcharid(0,@partymemb$[.@p])) == 1) // Member logged in?
			dispbottom "- "+(.@p+1)+"."+@partymemb$[.@p] + ( (@partymemb$[.@p] == getpartyleader(getcharid(1)))?" (Leader)":""),0xFF2200;

	dispbottom "===================";

// Accepting requesters
} else if(compare(@whispervar0$,"Accept") == 1 || compare(@whispervar0$,"Join") == 1) {
	if(@whispervar1$ == "" || @whispervar2$ == "") {
		dispbottom .n$+": Either you didn't put the requesters number or the number of the party member he should be warped to!";
		end;
	}
	// In case the leader logged of, the "@" variables were deleted
	if(@partymemb$[atoi(@whispervar2$)-1] == "") {
		dispbottom .n$+": An bug has occured, in which I couldn't find the list for your party members.";
		dispbottom .n$+": Possible Bug: You logged off or disconnected. Please repeat the previous step.";
		end;
	}
	query_sql "SELECT `app_id` , `name` , `level` , `class` FROM `dqs_app` WHERE `pty_id` = '"+getcharid(1)+"'",.@app_id,.@name$,.@lvl$,.@class;
	set .@nr,atoi(@whispervar1$)-1;
	message .@name$[.@nr],.n$+": Your join request has been accepted, you will be warped to the party member chosen from the leader.";
	party_addmember(getcharid(1),.@app_id[.@nr]);
	sleep2 2000;
	charcommand "#warpto \""+.@name$[.@nr]+"\" "+@partymemb$[atoi(@whispervar2$)-1];
		
	// Deleting applicant from application list
	query_sql "DELETE FROM `dqs_app` WHERE `app_id` = '"+.@app_id[.@nr]+"' AND `pty_id` = '"+getcharid(1)+"'";
	
// Declining requesters
} else if(compare(@whispervar0$,"Decline") == 1 || compare(@whispervar0$,"Abort") == 1) {
	if(@whispervar1$ == "") {
		dispbottom .n$+": You didn't put the requesters number!";
		end;
	}
	query_sql "SELECT `app_id` , `name` , `level` , `class` FROM `dqs_app` WHERE `pty_id` = '"+getcharid(1)+"'",.@app_id,.@name$,.@lvl$,.@class;
	set .@nr,atoi(@whispervar1$)-1;
	if(isloggedin(getcharid(3,.@name$[.@nr]),.@app_id[.@nr]) != 0)
		message .@name$[.@nr],.n$+": I'm sorry, but your join request has been declined.";
	dispbottom .n$+": The applicant ["+.@name$[.@nr]+"] has been deleted from the list.";
	
	// Deleting applicant from application list
	query_sql "DELETE FROM `dqs_app` WHERE `app_id` = '"+.@app_id[.@nr]+"' AND `pty_id` = '"+getcharid(1)+"'";

} else 
	dispbottom .n$+": I'm not sure, what you wanted from me, but I can't do that.";
	
end;
}
// ======================= Inside Dungeon NPC =====================
-	script	Dungeon Guard#main::DG_Main	110,{

set .@n$,"["+strnpcinfo(1)+"]";

mes .@n$;
if(query_sql("SELECT `dg_id` FROM `dqs_party` WHERE `dg_id` = '"+strnpcinfo(2)+" AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'",.@dg_id) == -1) {
	mes "You didn't register for the Dungeon Quest Service.";
	close;
}
mes .@n$;
mes "Do you really want to leave the dungeon?";
if(select("- Yes:- No") - 1) close;
next;
mes .@n$;
mes "You"+ ( (getcharid(1) != 0)?"r party":"")+" will now be warped to Prontera.";
query_sql "UPDATE `dqs_party` SET `complete` = '1' WHERE `dg_id` = '"+strnpcinfo(2)+" AND `"+ ( (getcharid(1) == 0)?"char_id` = '"+getcharid(0):"pty_id` = '"+getcharid(1) )+"'";
close2;
if(getcharid(1) != 0)
	warpparty "prontera",156,191,getcharid(1);
else
	warp "prontera",156,191;
end;
} 
// ======================= Start of Dungeon Exit - NPC Duplicates =====================
//dungeon_map,x,y,facing	duplicate(DG_Main)	Dungeon Exit#<Dungeon ID>	110
abbey03,234,216,4	duplicate(DG_Main)	Dungeon Exit#1	110
abyss_03,98,103,4	duplicate(DG_Main)	Dungeon Exit#2	110
ama_dun03,120,223,4	duplicate(DG_Main)	Dungeon Exit#3	110
ayo_dun02,149,246,4	duplicate(DG_Main)	Dungeon Exit#4	110
iz_dun04,130,222,4	duplicate(DG_Main)	Dungeon Exit#5	110	
c_tower4,82,138,4	duplicate(DG_Main)	Dungeon Exit#6	110
alde_dun04,165,268,4	duplicate(DG_Main)	Dungeon Exit#7	110
mjo_dun03,34,52,4	duplicate(DG_Main)	Dungeon Exit#8	110
prt_sewb4,34,52,4	duplicate(DG_Main)	Dungeon Exit#9	110
ein_dun02,25,88,4	duplicate(DG_Main)	Dungeon Exit#10	110
gefenia04,160,30,4	duplicate(DG_Main)	Dungeon Exit#11	110
gef_dun03,119,104,4	duplicate(DG_Main)	Dungeon Exit#12	110
glast_01,191,120,4	duplicate(DG_Main)	Dungeon Exit#13	110
gon_dun03,99,183,4	duplicate(DG_Main)	Dungeon Exit#14	110
ice_dun03,149,116,4	duplicate(DG_Main)	Dungeon Exit#15	110
prt_maze03,177,89,4	duplicate(DG_Main)	Dungeon Exit#16	110
jupe_core,150,129,4	duplicate(DG_Main)	Dungeon Exit#17	110
kh_dun02,129,98,4	duplicate(DG_Main)	Dungeon Exit#18	110
lhz_dun02,150,145,4	duplicate(DG_Main)	Dungeon Exit#19	110
lou_dun03,170,153,4	duplicate(DG_Main)	Dungeon Exit#20	110
mag_dun02,43,44,4	duplicate(DG_Main)	Dungeon Exit#21	110
odin_tem03,278,236,4	duplicate(DG_Main)	Dungeon Exit#22	110
orcsdun02,77,88,4	duplicate(DG_Main)	Dungeon Exit#23	110
pay_dun04,120,116,4	duplicate(DG_Main)	Dungeon Exit#24	110
moc_pryd06,97,59,4	duplicate(DG_Main)	Dungeon Exit#25	110
in_sphinx5,100,149,4	duplicate(DG_Main)	Dungeon Exit#26	110
treasure02,101,166,4	duplicate(DG_Main)	Dungeon Exit#27	110
tha_t12,136,65,4	duplicate(DG_Main)	Dungeon Exit#28	110
xmas_dun02,134,134,4	duplicate(DG_Main)	Dungeon Exit#29	110
tur_dun04,92,100,4	duplicate(DG_Main)	Dungeon Exit#30	110
thor_v03,151,162,4	duplicate(DG_Main)	Dungeon Exit#31	110
// ======================= End of Script =====================