//===== rAthena Script =======================================
//= Dungeon Quest System
//===== By ===================================================
//= lllchrislll
//===== Version ==============================================
//= 1.0 - Initial Release
//===== Compatible With ======================================
//= rAthena SQL 11.06.2015 Rev+
//===== Tested With ==========================================
//= rAthena SQL 11.06.2015 Rev
//===== Description ==========================================
//= Additional EXP Bonus (in Percent) based on Dungeon's Difficulty
//  - Difficulties: Easy, Medium, Hard
//  - EXP Rates: 50%, 100%, 150% (changeable)
//= Dungeon Warp Service
//  - Warp to the Entrance only
//= Party Settings dynamically changeable
//  - Quantity of Parties in 1 Dungeon
//= Party Join Feature
//  - Requesting to join an existing Party, on accept the Leader can decide
//    to which member the applicant will be warped to
//= Dungeon Rewards:
//  - Regular Dungeon Points (On/Off Function)
//    Base Points*Difficulty of Dungeon
//  - MvP Dungeon Points (On/Off Function)
//    Per slain MvP, you gain "x" Points (changeable)
//    Different kind of Points are: Custom Character Permanent Variable for Exchanger or #CASHPOINTS
//  - Dungeon Points Exchanger
//= Quests per Dungeons
//  - Each Dungeon can have an infinite amount of quests
//===== Credits	==============================================
//= To the author of the "Ultimate Warper" from the eAthena Board.
//	Since no header was included and I forgot the name of him/her,
//	I couldn't ask the permission to use an part of the script.
//	I used the map coordinates.
//===== ToDo List ============================================
//= None
//============================================================
/*
CREATE TABLE IF NOT EXISTS `dqs_list` (
 `dg_id` int(10) unsigned NOT NULL,
 `quest_id` int(10) unsigned default '1',
 `quest_type` tinyint(3) unsigned default '1',
 `mob_id` int(10) unsigned default '0',
 `mob_am` int(12) unsigned default '0',
 `item_id` int(10) unsigned default '0',
 `item_am` int(10) unsigned default '0',
 `reward_id` int(10) unsigned default '0',
 `reward_am` int(10) unsigned default '0',
 `limit` tinyint(3) unsigned default '0'
 ) ENGINE=MyISAM;
 
 CREATE TABLE IF NOT EXISTS `dqs_party` (
 `dg_id` int(10) unsigned,
 `pty_id` int(10) unsigned default '0',
 `start` int(10) unsigned default '1'
 `quest_id` int(10) unsigned NOT NULL,
 `mob_id` int(10) unsigned default '0',
 `mob_am` int(12) unsigned default '0',
 `check` tinyint(3) unsigned default '0'
 ) ENGINE=MyISAM;
 
CREATE TABLE IF NOT EXISTS `dqs_dungeon` (
 `dg_id` int(10) unsigned NOT NULL,
 `name` varchar(255) default 'Unknown Dungeon',
 `difficulty` int(10) unsigned NOT NULL default '1',
 `req_level` int(10) unsigned NOT NULL default '1',
 `floor` tinyint(3) unsigned NOT NULL default '1',
 `map_name` varchar(255) default 'prontera',
 `map_x` varchar(255) unsigned default '0',
 `map_y` varchar(255) unsigned default '0',
 `repeat` int(5) unsigned default '0',
) ENGINE=MyISAM;
*/
prontera,151,185,4	script	Dungeon Party Service	110,{


/*
Delay & Repeat Limit for Dungeons:
Variable saved on each Player
Variable saved on each Player
*/

switch(select("- Dungeon Menu:- Point Exchanger:- Information:- Nevermind")) {

	case 1:
	mes "Please choose what you want to do below:";
	switch(select("- Register:- Quest Board:- Warp Service")) {
	
		// Register for Dungeon
		case 1:
		
		break;
		
		// Quest Board 
		case 2:
		// check if player is registered for dungeon
		
		break;
		// Warp Service 
		case 3:
		// check if player is registered for dungeon and has chosen at least one quest
		
		break;
	}
	break;
	
	// Point Exchanger 
	case 2:
	
	break;
	
	// Information
	case 3:
	
	break;
	
	// Nevermind
	case 4:
	break;
}
close;

OnInit:
// =============== NPC Name ===============
set .n$,"["+strnpcinfo(1)+"]";
// =============== Debug Mode ===============
// * (Debug Messages in Map Server)
// > 0: Off
// > 1: On 
set .debug,0; 
// ============== Party Settings ================== //
set .pt_limit,2; // x Parties per Dungeon
// ============== Quest Settings ================== //
set .quest_m,1; // Multiple Quests allowed? - 1 = Yes/0 = No
// ============== Dungeon Settings ================== //
setarray .exp[1],50,100,150; // EXP Rate in % for Difficulty: Easy/Medium/Hard
// Base Dungeon Delay * Difficulty 
set .dg_delay_b,43200; // 12 Hours
// Dungeon Reward > 0 = Off, 1 = On
set .dg_rew,1; 
if(.dg_rew == 1) {
	set .dg_var$,"DG_Pts";
	set .dg_pts,10; // Base Dungeon Points, will be multiplied by Difficulty
	// Dungeon Points Exchanger:
	// > Item IDs 
	setarray .dg_ex[0],512;
	// > How many items you get per exchange?
	setarray .dg_ex_am[0],10;
	// > How much does one exchange cost?
	setarray .dg_ex_cost[0],2;
	// Creating exchange menu
	for ( set .@m,0; .@m < getarraysize(.dg_ex); set .@m,.@m + 1)
		set .ex_m$,.ex_m$ + "- "+.dg_ex_am[.@m]+"x "+getitemname(.dg_ex[.@m])+" ("+.dg_ex_cost[.@m]+")"+ ( (.dg_ex[.@m+1] != 0)?":":"");
	// MvP Reward for each MvP > 0 = Off, 1 = Permanent Character Variable, 2 = #CASHPOINTS
	set .mvp_rew,1;
	if(.mvp_rew == 1) {
		set .mvp_var$,"MvP_Pts";
		set .mvp_pts,1; // Base MvP Points, will also be multiplied by Difficulty
		// MvP Points Exchanger:
		// > Item IDs 
		setarray .mvp_ex[0],512;
		// > How many items you get per exchange?
		setarray .mvp_ex_am[0],10;
		// > How much does one exchange cost?
		setarray .mvp_ex_cost[0],2;
		for ( set .@m,0; .@m < getarraysize(.mvp_ex); set .@m,.@m + 1)
			set .ex_mvp_m$,.ex_mvp_m$ + "- "+.mvp_ex_am[.@m]+"x "+getitemname(.mvp_ex[.@m])+" ("+.mvp_ex_cost[.@m]+")"+ ( (.mvp_ex[.@m+1] != 0)?":":"");
	}
}
// =============== Dungeon Names ===============
setarray .dungn$[0],"Cursed Abbey","Aldebaran Dungeon","Abyss Lake","Amatsu Dungeon","Ayothaya Dungeon","Bylan","Clock Tower","Coal Mine","Culvert","Einbech Dungeon","Gefenia","Geffen Dungeon","Glast Heim","Gonyrun Dungeon","Ice Dungeon","Labyrinth","Juperos","Kiel Academy","Lightalzen Bio Lab","Louyang Dungeon","Magma Dungeon","Odin Temple","Orc Dungeon","Payon Dungeon","Pyramid Dungeon","Sphinx Dungeon","Sunken Ship Dungeon","Thanatos Tower","Toy Factory Dungeon","Turtle Dungeon","Thor Volcano Dungeon";
// =============== Dungeon Prefixes ===============
setarray .dungpre$[0],"abbey","alde","abyss","amat","ayot","bylan","c_tow","coal","culv","einb","gefia","gefd","glas","gonr","iced","maze","jupe","kiel","lhz","louy","magma","odin","orcsd","pay","pyram","sphinx","pirate","thana","toy","turtle","thor_v";
// =============== Dungeon Data ===============
// = Format: Difficulty ,Level Requirement, Map Name Level 1, Map X, Map Y,....
// = Difficulty: 1 = Easy, 2 = Medium, 3 = Hard
// = Level: 1 = None, 2+ = Requirement
/*
query_sql "INSERT INTO `dqs_dungeon` ( `dq_id` , `name` , `difficulty` , `req_level` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` ) VALUES ( '1' , 'Cursed Abbey' , '2' , '60' , '1' , 'abbey01' , '51' , '14' , '3' )";
query_sql "INSERT INTO `dqs_dungeon` ( `dq_id` , `name` , `difficulty` , `req_level` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` ) VALUES ( '1' , 'Cursed Abbey' , '2' , '60' , '2' , 'abbey02' , '150' , '11' , '3' )";
query_sql "INSERT INTO `dqs_dungeon` ( `dq_id` , `name` , `difficulty` , `req_level` , `floor` , `map_name` , `map_x` , `map_y` , `repeat` ) VALUES ( '1' , 'Cursed Abbey' , '2' , '60' , '3' , 'abbey03' , '120' , '10' , '3' )";
*/
setarray .abbey$[0],"1","1","abbey01","51","14","abbey02","150","11","abbey03","120","10";
setarray .alde$[0],"1","1","alde_dun01","197","25","alde_dun02","262","41","alde_dun03","276","53","alde_dun04","130","130";
setarray .abyss$[0],"1","1","abyss_01","264","271","abyss_02","275","270","abyss_03","116","27";
setarray .amat$[0],"1","1","ama_dun01","227","10","ama_dun02","32","43","ama_dun03","119","15";
setarray .ayot$[0],"1","1","ayo_dun01","9","149","ayo_dun02","230","235";
setarray .bylan$[0],"1","1","iz_dun00","168","168","iz_dun01","41","37","iz_dun02","236","204","iz_dun03","32","63","iz_dun04","26","27";
setarray .c_tow$[0],"1","1","c_tower1","200","163","c_tower2","268","26","c_tower3","64","148","c_tower4","32","63";
setarray .coal$[0],"1","1","mjo_dun01","52","17","mjo_dun02","381","343","mjo_dun03","302","261";
setarray .culv$[0],"1","1","prt_sewb1","132","248","prt_sewb2","19","19;","prt_sewb3","180","169","prt_sewb4","100","92","20";
setarray .einb$[0],"1","1","ein_dun01","22","18","ein_dun02","292","290";
setarray .gefia$[0],"1","1","gefenia01","59","167","gefenia02","201","35","gefenia03","264","236","gefenia04","33","270";
setarray .gefd$[0],"1","1","gef_dun00","104","100","gef_dun01","115","236","gef_dun02","106","132","gef_dun03","203","200";
setarray .glas$[0],"1","1","gl_church","156","8","gl_chyard","147","15","gl_in01","121","59","gl_cas01","199","29","gl_cas02","104","25","gl_knt01","150","10","gl_knt02","157","287","gl_step","117","124","gl_sew01","258","255","gl_sew01","258","255","gl_sew02","108","291","gl_sew03","171","273","gl_dun01","133","271","gl_dun02","224","274","gl_prison","14","70","gl_prison1","150","14";
setarray .gonr$[0],"1","1","gon_dun01","143","59","gon_dun02","17","114","gon_dun03","68","9";
setarray .iced$[0],"1","1","ice_dun01","157","14","ice_dun02","151","155","ice_dun03","149","22","ice_dun04","34","139";
setarray .maze$[0],"1","1","prt_maze01","176","7","prt_maze02","103","18","prt_maze03","23","8";
setarray .jupe$[0],"2","65","juperos_01","99","92","juperos_02","34","59","jupe_core","150","285";
setarray .kiel$[0],"2","1","kh_dun01","28","226","kh_dun02","41","198";
setarray .lhz$[0],"2","60","lhz_dun01","151","286","lhz_dun02","18","148","lhz_dun03","140","136";
setarray .louy$[0],"2","50","lou_dun01","218","196","lou_dun02","282","20","lou_dun03","165","37";
setarray .magma$[0],"2","60","mag_dun01","126","69","mag_dun02","47","32";
setarray .odin$[0],"3","70","odin_tem01","98","144","odin_tem02","22","181","odin_tem03","121","51";
setarray .orcsd$[0],"1","1","orcsdun01","32","169","orcsdun02","21","185";
setarray .pay$[0],"1","1","pay_dun00","22","180","pay_dun01","19","33","pay_dun02","19","63","pay_dun03","155","159","pay_dun04","201","204";
setarray .pyram$[0],"1","1","moc_pryd01","192","9","moc_pryd02","10","192","moc_pryd03","100","92","moc_pryd04","181","11","moc_pryd05","94","96","moc_pryd06","192","8";
setarray .sphinx$[0],"1","1","in_sphinx1","192","9","in_sphinx2","149","81","in_sphinx3","210","54","in_sphinx4","10","222","Level 5","in_sphinx5","100","99";
setarray .pirate$[0],"1","1","treasure01","69","24","treasure02","102","27";
setarray .thana$[0],"1","1","tha_t01","150","36","tha_t02","150","36","tha_t03","220","158","tha_t04","59","143","tha_t05","62","11","tha_t06","89","221","tha_t07","35","166","tha_t08","93","148","tha_t09","29","107","tha_t10","159","138","tha_t11","19","20","tha_t12","130","52","5";
setarray .toy$[0],"1","40","xmas_dun01","205","16","xmas_dun02","129","133";
setarray .turtle$[0],"2","50","tur_dun01","161","34","tur_dun02","148","256","tur_dun03","132","190","tur_dun04","100","192";
setarray .thor_v$[0],"3","90","thor_v01","21","228","thor_v02","75","205","thor_v03","34","272";
// Mapflags
for ( set .@d,0; .@d < getarraysize(.dungn$); set .@d,.@d + 1)
	for ( set .@p,3; .@p < getarraysize(getd("."+.dungpre$[.@d]+"$")); set .@p,.@p + 4) {
		setmapflag getd("."+.dungpre$[.@d]+"$["+.@p+"]"),mf_nowarp;
		setmapflag getd("."+.dungpre$[.@d]+"$["+.@p+"]"),mf_partylock;
	}
if(.debug) debugmes "Starting Global Timer for Party Member Sync";
initnpctimer; // Timer for re-copying Party Member Data
end;
}
// ======================= End of Script =====================