//===== rAthena Script =======================================
//= Dungeon Party System
//===== By ===================================================
//= lllchrislll
//===== Version ==============================================
//= 1.0
//===== Compatible With ======================================
//= Every rAthena Version
//===== Description ==========================================
//= Additional EXP Bonus (in Percent) based on Dungeon's Difficulty
//  - Difficulties: Easy, Medium, Hard
//  - EXP Rates: 50%, 100%, 150% (changeable)
//= Dungeon Warp Service
//  - Warp to the Entrance only
//= Party Settings dynamically changeable
//  - Quantity of Parties in 1 Dungeon
//= Party Join Feature
//  - Requesting to join an existing Party, on accept the Leader can decide
//    to which member the applicant will be warped to
//= Dungeons only access able via this NPC
//  So nobody can interfere, except other parties depending on the Party Limit
//= Dungeon Rewards:
//  - Regular Dungeon Points (On/Off Function)
//    Base Points*Difficulty of Dungeon
//  - MvP Dungeon Points (On/Off Function)
//    Per slain MvP, you gain "x" Points (changeable)
//    Different kind of Points are: Custom Character Permanent Variable for Exchanger or #CASHPOINTS
//  - Dungeon Points Exchanger
//===== Credits	==============================================
//= To the author of the "Ultimate Warper" from the eAthena Board.
//	Since no header was included and I forgot the name of him/her,
//	I couldn't ask the permission to use an part of the script.
//	I used the map coordinates.
//===== ToDo List ============================================
//= Dungeons:
//  - Removing Dungeon Warps, custom scripts_warps.cfg
//  - Dungeon/MvP Points Exchanger - complete with calculation
//============================================================
prontera,151,185,4	script	Dungeon Party Service	110,{

mes .n$;
mes "Hello, "+strcharinfo(0)+"!";
mes "How can I help you?";
next;
switch(select("- Dungeon Menu:- Information:- "+ ( (.dg_rew == 1)?"Points Exchanger:- Nothing":"Nothing") )) {
	case 1:
	mes .n$;
	if(getd("$@pty_"+getcharid(1)+"_m$") == "") {
		set @join,0;
		if(!getcharid(1)) {
			mes "Do you want to join a party?";
			if(getarraysize(.pty_id) < 1) {
				mes "But since there is no party yet you could join, you need to create one yourself.";
				mes "Also you require 2 or more members to use the Dungeon Party Service.";
				close;
			}
			next;
			if(select("- Yes:- No") - 1) {
				mes .n$;
				mes "Then you need to create one first, also you require 2 and more members to use the Party EXP Service.";
				close;
			}
			mes .n$;
			mes "Please choose the dungeon first, then the party you want to join in.";
			next;
			mes .n$;
			set @join,1;
		}
		if(!@join) {
			if(strcharinfo(0) != getpartyleader(getcharid(1))) {
				mes "Only the party leader can register your party for the Party EXP Service.";
				close;
			}
			getpartymember(getcharid(1),2);
			copyarray .@pty_aid[0],$@partymemberaid[0],$@partymembercount;
			for ( set .@p,0; .@p < $@partymembercount; set .@p,.@p + 1) 
				if(isloggedin(.@pty_aid[.@p]) == 1)  // Member logged in?
					set .@ct,.@ct + 1;
					
			if(.@ct < 2) {
				mes "A party requires 2 members minimum to use the Party EXP Service.";
				close;
			}
			set .@partyct,$@partymembercount;
		}
		next;
		set .men_dung$,"";
		// =============== Creating Dungeon Menu ===============
		for ( set .@du,0; .@du < getarraysize(.dungn$); set .@du,.@du + 1) {
			
			// ========== Dungeon Party Counter =========
			for( set .@i,0; .@i < getarraysize(.pty_id); set .@i,.@i + 1) {
				// Checking if the current Party is in this dungeon
				if(getd(".pty_"+.pty_id[.@i]+"$") == .dungpre$[.@du])
					setd(".@"+.dungpre$[.@du]+"_ct"),getd(".@"+.dungpre$[.@du]+"_ct") + 1;
			}
			set .men_dung$,.men_dung$ + "- "+.dungn$[.@du] +" ("+getd(".@"+.dungpre$[.@du]+"_ct")+"/"+.pt_limit+") (Minimum Level: "+.level[.@du]+")"+ ( (.dungn$[.@du+1] != "")?":":"");
		}
			
		set @d,select( .men_dung$ ) - 1;
		mes .n$;
		mes "Dungeon: "+.dungn$[@d];
		mes "Difficulty: "+( (.diff[@d] == 1)?"Easy":( (.diff[@d] == 2)?"Medium":"Hard") );
		mes "Minimum Level: "+.level[@d];
		mes "Existing Parties: "+getd(".@"+.dungpre$[@d]+"_ct");
		next;
		mes .n$;
		if(@join) {
			if(BaseLevel < .level[@d]) {
				mes "I'm sorry, but you don't meet the level requirement, which is "+.level[@d]+"!";
				mes "Please try an other dungeon or level up until you reach that level.";
				close;
			}
			mes "I will now list the available parties:";
			mes " ";
			set @pty_menu$,"";
			deletearray @pty_list[0],128;
			for ( set .@l,0; .@l < getarraysize(.pty_id); set .@l,.@l + 1) {
				getpartymember(.pty_id[.@l]);
				if(getd(".pty_"+.pty_id[.@l]+"$") == .dungpre$[@d] && $@partymembercount < .pt_max) {
					mes "===================";
					mes "Party Name: "+getpartyname(.pty_id[.@l]);
					mes "Leader: "+getpartyleader(.pty_id[.@l]);
					mes "Current Members: "+$@partymembercount;
					setarray @pty_list[getarraysize(@pty_list)],.pty_id[.@l];
					set @pty_menu$,@pty_menu$ + "- "+getpartyname(.pty_id[.@l]) + ( (.pty_id[.@l+1] != 0)?":":"");
					mes ( (.pty_id[.@l+1] != 0)?"":"===================");
				}
			}
			next;
			if(getarraysize(@pty_list) < 1) {
				mes .n$;
				mes "I'm sorry, but there is no party on this map.";
				close;
			}
			set @p,select(@pty_menu$) - 1;
			mes .n$;
			if(isloggedin(getpartyleader(.pty_id[@p],1),getpartyleader(.pty_id[@p],2)) == 1) {
				mes "I will send now an request to the party leader with your Level and Class.";
				mes "Please wait until the leader will accept or decline your request.";
				mes "If the leader doesn't respond in any way, please try to PM him/her by yourself.";
				mes "The leader's name is ["+getpartyleader(.pty_id[@p])+"].";
				close2;
				// Creating Applicant array for the party
				setarray getd("$@req_"+.pty_id[@p]+"_id["+(getarraysize(getd("$@req_"+.pty_id[@p]+"_id"))+1 )+"]"),getcharid(0);
				// Applicant Info
				setarray getd("$@req_"+getcharid(0)+"$[0]"),strcharinfo(0),""+BaseLevel+"/"+JobLevel,"Class: "+jobname(Class);
				detachrid;
				attachrid(getpartyleader(.pty_id[@p],1));
				announce .n$+": The player ["+getd("$@req_"+getcharid(0)+"$[0]")+"] with "+getd("$@req_"+getcharid(0)+"$[1]")+", "+getd("$@req_"+getcharid(0)+"$[2]")+" requests to join your party. You can accept/decline by sending an whisper to me via \"NPC:Party_Join\" and as text \"List\". There you gain additional information.",bc_self;
				end;

			} else {
				mes "It seems like that the party leader of "+getpartyname(.pty_id[@p])+" isn't online.";
				mes "Please try another party.";
				close;
			}
		}
		next;
		mes .n$;
		if(getd(".@"+.dungpre$[@d]+"_ct") > .pt_limit) {
			mes "I'm sorry, but this dungeon already reached the maximum of parties it can hold.";
			mes "Please choose a different one.";
			close;
		}
		// Adding Level check for party members
		mes "Your party will recieve an bonus of "+.exp[.diff[@d]]+"%."; 
		mes "I will warp you and your party now to the "+.dungn$[@d]+ ( (compare(.dungn$[@d],"Dungeon") == 1)?" ":" Dungeon ");
		mes "Happy leveling!!!";
		close2;
		// Saving Array Index of the Dungeon for .dungpre$ or .dungn$
		setd(".pty_"+getcharid(1)+"_ix"),@d;
		// Used to save the current Leveling Map of the party
		setd("$@pty_"+getcharid(1)+"_m$"),""+getd("."+.dungpre$[@d]+"$[1]"); 
		// Saving Dungeon Prefix
		setd("$@pty_"+getcharid(1)+"$"),""+.dungpre$[@d];
		// Setting Mob Counter
		setd("@pt_"+.dungpre$[@d]+"_mct"),.mob_base[@d];
		// Setting Start Point
		setarray getd(".pty_"+getcharid(1)+"_st$[0]"),""+getd("."+.dungpre$[@d]+"$[1]"),""+getd("."+.dungpre$[@d]+"$[2]"),""+getd("."+.dungpre$[@d]+"$[3]");
		// Warping Party ...
		warpparty getd(".pty_"+getcharid(1)+"_st$[0]")+".gat",getd(".pty_"+getcharid(1)+"_st$[1]"),getd(".pty_"+getcharid(1)+"_st$[2]"),getcharid(1);
		
	setarray .pty_id[getarraysize(.pty_id)],getcharid(1);
	
	// ============ Party is already registered ==============
	} else {
		mes "How can I help you?";
		next;
		switch(select("- Remove Party from list:- Warp Options:- "+( (.dg_rew == 1)?"Dungeon Reward":"Nothing") )) {
			
			case 1:
			mes .n$;
			if(strcharinfo(0) != getpartyleader(getcharid(1))) {
				mes "I'm sorry, but only your party leader can can do this.";
				close;
			}
			mes "Do you really want to delete your party from my list?";
			mes "You won't be able to gain any bonus EXP until you re-register your party!"
			next;
			if(select("- Yes:- No") - 1) close;
			if(getd("$@pt_"+getcharid(1)+"_m$") == "Reward") {
				mes .n$;
				mes "I'm sorry, but you still haven't collected your reward from your completed dungeon.";
				close;
			}
			close2;
			getpartymember(getcharid(1));
			set .@partyct,$@partymembercount;
			copyarray .@partymemb$[0],$@partymembername$[0],.@partyct;
			for ( set .@p,0; .@p < .@partyct; set .@p,.@p + 1) {
				if(isloggedin(.@pty_aid[.@p]) == 1 && .@pty_aid[.@p] != getpartyleader(getcharid(1),1)) {
					detachrid;
					attachrid(.@pty_aid[.@p]);
					dispbottom .n$+": Your party leader wants to remove your party from my list, so....";
					dispbottom .n$+": I will warp you all in 10 seconds to your Save Points.";
				}
			}
			sleep2 10000;
			warpparty "SavePointAll",0,0,getcharid(1);
			setd("$@pty_"+getcharid(1)+"_m$"),"";
			setd(".pty_"+getcharid(1)+"_ix"),0;
			setd("$@pty_"+getcharid(1)+"$"),"";
			deletearray getd(".pty_"+getcharid(1)+"_st$[0]"),128;
			for ( set .@d,0; .@d < getarraysize(.pty_id); set .@d,.@d + 1) 
				if(getcharid(1) == .pty_id[.@d]) 
					deletearray .pty_id[.@d],1;
			end;
		
			case 2:
			mes .n$;
			mes "Do you want to be warped to one of your party members or to the start point?";
			if(select("- To my comrades:- Start Point") - 1) {
				close2;
				warp getd(".pty_"+getcharid(1)+"_st$[0]")+".gat",getd(".pty_"+getcharid(1)+"_st$[1]"),getd(".pty_"+getcharid(1)+"_st$[2]");
				end;
			}
			next;
			mes .n$;
			mes "Please select to which party member you want to be warped to:";
			next;
			set @pty_ml$,"";
			getpartymember(getcharid(1));
			set @partyct,$@partymembercount;
			copyarray @partymemb$[0],$@partymembername$[0],@partyct;
			for ( set .@p,0; .@p < @partyct; set .@p,.@p + 1) {
				if(isloggedin(getcharid(3,@partymemb$[.@p]),getcharid(0,@partymemb$[.@p])) == 1) { // Member logged in?
					getmapxy(@map$,@mapx,@mapy,0,@partymemb$[.@p]);
					if(@map$ == getd("$@pty_"+getcharid(1)+"_m$")) { // Member on same Map as registered?
						set @pty_ml$,@pty_ml$ + "- "+@partymemb$[.@p] + ( (@partymemb$[.@p] == getpartyleader(getcharid(1)))?" (Leader)":"");
					}
				}
			}
			if(@pty_ml$ == "") {
				mes .n$;
				mes "I'm sorry, but no member of your party has been found on the dungeon map.";
				close;
			}
			set @pm,select(@pty_ml$) - 1;
			mes .n$;
			mes @partymemb$[@pm] + ( (@partymemb$[@pm] == getpartyleader(getcharid(1)))?" (Leader)":"");
			mes "Correct?";
			if(select("- Yes:- No") - 1) close;
			close2;
			// Since there is no server command for warping an player to another one
			// and I didn't wanted to create another array for that ...
			atcommand "@warpto "+@partymemb$[@pm];
			end;
			
			// Dungeon Reward
			case 3:
			if(!.dg_rew) close;
			mes .n$;
			mes "Hello!";
			mes "Let me check, if you have completed an dungeon to claim an reward.";
			next;
			mes .n$;
			if(getd("$@pty_"+getcharid(1)+"_m$") != "Reward") {
				mes "I'm sorry, but it seems like your party didn't complete an dungeon yet.";
				mes "Come again, when you did.";
				close;
			}
			mes "Congratulation for completing the dungeon, "+.dungn$[getd(".pty_"+getcharid(1)+"_ix")]+"!";
			mes "I will now reward you and your party with "+set(.@res, (.dg_pts*.diff[getd(".pty_"+getcharid(1)+"_ix")]) )+"x Dungeon Points.";
			mes "To reuse my service, please register your party again for the next dungeon.";
			close2;
			getpartymember(getcharid(1));
			set .@partyct,$@partymembercount;
			copyarray .@partymemb$[0],$@partymembername$[0],.@partyct;
			for ( set .@p,0; .@p < .@partyct; set .@p,.@p + 1) {
				if(isloggedin(.@pty_aid[.@p]) == 1 && .@pty_aid[.@p]) {
					detachrid;
					attachrid(.@pty_aid[.@p]);
					setd(""+.dg_var$),getd(""+.dg_var$) + .@res;
					dispbottom .n$+": For completing the dungeon, "+.dungn$[getd(".pty_"+getcharid(1)+"_ix")]+", you will be rewarded with "+.@res+"x Dungeon Points!";
					dispbottom .n$+": Your new balance is: "+getd(""+.dg_var$)+" Dungeon Points!";
					dispbottom .n$+": Also just in case you are still in the dungeon, I will warp you to your Save Point!";
				}
			}
			sleep2 10000;
			warpparty "SavePointAll",0,0,getcharid(1);
			setd("$@pty_"+getcharid(1)+"_m$"),"";
			setd(".pty_"+getcharid(1)+"_ix"),0;
			setd("$@pty_"+getcharid(1)+"$"),"";
			deletearray getd(".pty_"+getcharid(1)+"_st$[0]"),128;
			for ( set .@d,0; .@d < getarraysize(.pty_id); set .@d,.@d + 1) 
				if(getcharid(1) == .pty_id[.@d]) 
					deletearray .pty_id[.@d],1;
			end;
		}
	}

	case 2:
	mes .n$;
	mes "I can offer my Dungeon Party Service to any Party, which uses my Dungeon Warp Service, which allows the party to recieve more EXP based on the dungeons difficulty.";
	mes "For each Dungeon exists an party limit, how many parties can be in one Dungeon at once. Which is "+.pt_limit;
	mes "Also every Dungeon has a Level Requirement, minimum level is 10, which each party member must have reached!";
	next;
	mes .n$;
	if(.dg_rew == 1) {
		mes "[====== Dungeon Rewards ======]";
		mes "Depending on the Dungeon's Difficulty, you can get different amount of rewards.";
		mes "You can gain currently "+.dg_pts+" Dungeon Points multiplied by \"1\" for Easy, \"2\" for Medium, \"3\" for Hard.";
		if(.mvp_rew == 1) {
			mes "Also you can gain special points for each MvP your party kill:";
			mes .mvp_pts +" "( (.mvp_rew == 1?)"MvP Points":"Cash Points")+", which also be multiplied by the same as above.";
		}
	}
	next;
	mes .n$;
	mes "Here is the list for the EXP Rates.";
	mes " ";
	mes "[====== EXP Rates per Difficulty ======]";
	mes "Easy: "+.exp[1]+"%";
	mes "Medium: "+.exp[2]+"%";
	mes "Hard: "+.exp[3]+"%";
	close;
	
	// Dungeon Points Exchanger, if .dg_rew == 1
	case 3:
	if(!.dg_rew) close;
	mes .n$;
	
	
	case 4:
	if(.dg_rew) close;
	close;
}
end;

OnInit:
// =============== NPC Name ===============
set .n$,"["+strnpcinfo(1)+"]";
// ============== Party Settings ================== //
set .pt_limit,2; // x Parties per Dungeon
// Maximum x Members per Party
// (see src/common/mmo.h > #define MAX_PARTY to put it on the same value)
set .pt_max,12;
// ============== Dungeon Settings ================== //
setarray .exp[1],50,100,150; // EXP Rate in % for Difficulty: Easy/Medium/Hard
// Dungeon Reward > 0 = Off, 1 = On
set .dg_rew,1; 
if(.dg_rew == 1) {
	set .dg_var$,"DG_Pts";
	set .dg_pts,10; // Base Dungeon Points, will be multiplied by Difficulty
	// Dungeon Points Exchanger:
	// > Item IDs 
	setarray .dg_ex[0],512;
	// > How many items you get per exchange?
	setarray .dg_ex_am[0],10;
	// > How much does one exchange cost?
	setarray .dg_ex_cost[0],2;
	// MvP Reward for each MvP > 0 = Off, 1 = Permanent Character Variable, 2 = #CASHPOINTS
	set .mvp_rew,1;
	if(.mvp_rew == 1) {
		set .mvp_var$,"MvP_Pts";
		set .mvp_pts,1; // Base MvP Points, will also be multiplied by Difficulty
		// MvP Points Exchanger:
		// > Item IDs 
		setarray .mvp_ex[0],512;
		// > How many items you get per exchange?
		setarray .mvp_ex_am[0],10;
		// > How much does one exchange cost?
		setarray .mvp_ex_cost[0],2;
	}
// =============== Dungeon Names ===============
setarray .dungn$[0],"Abyss Lake","Amatsu Dungeon","Ant Hell","Ayothaya Dungeon","Bylan","Clock Tower","Coal Mine","Culvert","Einbech Dungeon","Gefenia","Geffen Dungeon","Glast Heim","Gonyrun Dungeon","Ice Dungeon","Labyrinth","Juperos","Lightalzen Bio Lab","Louyang Dungeon","Magma Dungeon","Odin Temple","Orc Dungeon","Payon Dungeon","Pyramid Dungeon","Sphinx Dungeon","Sunken Ship Dungeon","Thanatos Tower","Toy Factory Dungeon","Turtle Dungeon","Umbala Dungeon","Thor Volcano Dungeon";
// =============== Dungeon Difficulty ===============
// 1 = Easy, 2 = Medium, 3 = Hard
setarray .diff[0],1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;
// =============== Dungeon Level Requirements ===============
// 1 = None, 2+ = Level Requirement
setarray .level[0],1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;
// =============== Dungeon Mob Counter ===============
// = Every dungeon has a base mob quantity, which has to be killed before a party can proceed
//   This counter will be multiplied for each next level a party succeeds
//   For the actual calculation, see line "xxx" > Dungeon Guard
setarray .mob_base[0],20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20;
// =============== Dungeon Prefixes ===============
setarray .dungpre$[0],"abyss","amat","anth","ayot","bylan","c_tower","coal","culv","einb","gefenia","gefd","glast","gonr","iced","maze","jupe","lhz","louy","magma","odin","orcsd","payd","pyram","sphinx","pirate","thana","toy","turtle","umbal","thor_v";
// =============== Dungeon Data ===============
// = Format: Menu Name, Map Name.gat, X, Y, .....
setarray .abyss$[0],"Entrance","hu_fild05","189","207","Level 1","abyss_01","264","271","Level 2","abyss_02","275","270","Level 3","abyss_03","116","27";
setarray .amat$[0],"Level 1","ama_dun01","227","10","Level 2","ama_dun02","32","43","Level 3","ama_dun03","119","15";
setarray .anth$[0],"Level 1","anthell01","32","262","Level 2","anthell02","34","263";
setarray .ayot$[0],"Level 1","ayo_dun01","9","149","Level 2","ayo_dun02","230","235";
setarray .bylan$[0],"Level 1","iz_dun00","168","168","Level 2","iz_dun01","41","37","Level 3","iz_dun02","236","204","Level 4","iz_dun03","32","63","Level 5","iz_dun04","26","27";
setarray .c_tower$[0],"Clock Tower Level 1","c_tower1","200","163","Clock Tower Level 2","c_tower2","268","26","Clock Tower Level 3","c_tower3","64","148","Clock Tower Level 4","c_tower4","32","63","Basement Level 1","alde_dun01","197","25","Basement Level 2","alde_dun02","262","41","Basement Level 3","alde_dun03","276","53","Basement Level 4","alde_dun04","130","130";
setarray .coal$[0],"Level 1","mjo_dun01","52","17","Level 2","mjo_dun02","381","343","Level 3","mjo_dun03","302","261";
setarray .culv$[0],"Level 1","prt_sewb1","132","248","Level 2","prt_sewb2","19","19;","Level 3","prt_sewb3","180","169","Level 4","prt_sewb4","100","92","Level 5","prt_sewb5","100","92";
setarray .einb$[0],"Level 1","ein_dun01","22","18","Level 2","ein_dun02","292","290";
setarray .gefenia$[0],"Level 1","gefenia01","59","167","Level 2","gefenia02","201","35","Level 3","gefenia03","264","236","Level 4","gefenia04","33","270";
setarray .gefd$[0],"Level 1","gef_dun00","104","100","Level 2","gef_dun01","115","236","Level 3","gef_dun02","106","132","Level 3","gef_dun03","203","200";
setarray .glast$[0],"St. Abbey","gl_church","156","8","Churchyard","gl_chyard","147","15","Inside Glast Heim","gl_in01","121","59","Castle Level 1","gl_cas01","199","29","Castle Level 2","gl_cas02","104","25","Chivalry Level 1","gl_knt01","150","10","Chivalry Level 2","gl_knt02","157","287","Staircaise","gl_step","117","124","Culvert Level 1","gl_sew01","258","255","Culvert Level 2","gl_sew01","258","255","Culvert Level 3","gl_sew02","108","291","Culvert Level 4","gl_sew03","171","273","Cave Level 1","gl_dun01","133","271","Cave Level 2","gl_dun02","224","274","Underground Prison Level 1","gl_prison","14","70","Underground Prison Level 2","gl_prison1","150","14";
setarray .gonr$[0],"Level 1","gon_dun01","143","59","Level 2","gon_dun02","17","114","Level 3","gon_dun03","68","9";
setarray .iced$[0],"Level 1","ice_dun01","157","14","Level 2","ice_dun02","151","155","Level 3","ice_dun03","149","22","Level 4","ice_dun04","34","139";
setarray .maze$[0],"Level 1","prt_maze01","176","7","Level 2","prt_maze02","103","18","Level 3","prt_maze03","23","8";
setarray .jupe$[0],"Level 1","juperos_01","99","92","Level 2","juperos_02","34","59","Level 3","jupe_cave","77","50";
setarray .lhz$[0],"Level 1","lhz_dun01","151","286","Level 2","lhz_dun02","18","148","Level 3","lhz_dun03","140","136";
setarray .louy$[0],"Level 1","lou_dun01","218","196","Level 2","lou_dun02","282","20","Level 3","lou_dun03","165","37";
setarray .magma$[0],"Level 1","mag_dun01","126","69","Level 2","mag_dun02","47","32";
setarray .odin$[0],"Level 1","odin_tem01","98","144","Level 2","odin_tem02","22","181","Level 3","odin_tem03","121","51";
setarray .orcsd$[0],"Level 1","orcsdun01","32","169","Level 2","orcsdun02","21","185";
setarray .payd$[0],"Level 1","pay_dun00","22","180","Level 2","pay_dun01","19","33","Level 3","pay_dun02","19","63","Level 4","pay_dun03","155","159","Level 5","pay_dun04","201","204";
setarray .pyram$[0],"Level 1","moc_pryd01","192","9","Level 2","moc_pryd02","10","192","Level 3","moc_pryd03","100","92","Level 4","moc_pryd04","181","11","Basement 1","moc_pryd05","94","96","Basement 2","moc_pryd06","192","8";
setarray .sphinx$[0],"Level 1","in_sphinx1","192","9","Level 2","in_sphinx2","149","81","Level 3","in_sphinx3","210","54","Level 4","in_sphinx4","10","222","Level 5","in_sphinx5","100","99";
setarray .pirate$[0],"Level 1 1","treasure01","69","24","Level 2","treasure02","102","27";
setarray .thana$[0],"Level 1","tha_t01","150","36","Level 2","tha_t02","150","36","Level 3","tha_t03","220","158","Level 4","tha_t04","59","143","Level 5","tha_t05","62","11","Level 6","tha_t06","206","8","Level 7","tha_t07","65","166","Level 8","tha_t08","104","44","Level 9","tha_t09","88","145","Level 10","tha_t10","0","0","Level 11","tha_t11","0","0","Level 12","tha_t12","0","0","Thanatos Boss","thana_boss","0","0";
setarray .toy$[0],"Level 1","xmas_dun01","205","16","Level 2","xmas_dun02","129","133";
setarray .turtle$[0],"Entrance","tur_dun01","161","34","Level 1","tur_dun02","148","256","Level 2","tur_dun03","132","190","Level 3","tur_dun04","100","192";
setarray .umbal$[0],"Carpender's Shop in The Tree","um_dun01","205","16","Passage to a Foreign World","um_dun02","48","30","Hvergelmir's Fountain","yggdrasil01","40","63";
// setarray .thor_v$[0],""; // Thor Volcano Dungeon
/* 
// Mapflags
for ( set .@d,0; .@d < getarraysize(.dungn$); set .@d,.@d + 1)
	for ( set .@p,1; .@p < getarraysize(getd("."+.dungpre$[.@d]+"$")); set .@p,.@p + 4) {
		setmapflag getd("."+.dungpre$[.@d]+"$["+.@p+"]"),mf_nowarp;
}

*/
end;

OnNPCKillEvent:
if(!getcharid(1)) end;
if(getmapflag(strcharinfo(3),mf_pvp) == 1 || getmapflag(strcharinfo(3),mf_gvg) == 1) end; // On PvP or GvG Maps = No effect
if(getd("$@pty_"+getcharid(1)+"$") == "") end; // Not registered at the NPC.
/*
Making this part to use less resources
Is aweful!
Idea: Storing the players account ids in an array and then calling those values
    > also adding that array code at the Party Join Feature
	> not sure about the prefix yet, $@ or . arrays
*/
getpartymember(getcharid(1));
set .@partyct,$@partymembercount;
copyarray .@partymemb$[0],$@partymembername$[0],.@partyct;
set .@expr,.exp[.diff[getd(".pty_"+getcharid(1)+"_ix")]];
set .@bexp,getmonsterinfo(killedrid,3)*.@expr/100;
set .@jexp,getmonsterinfo(killedrid,4)*.@expr/100;
for ( set .@p,0; .@p < .@partyct; set .@p,.@p + 1) {
	// Recheck of party members on the same map,
	// in case someone died or logged out.
	if(isloggedin(.@pty_aid[.@p]) == 1) { // Member is logged in
		detachrid;
		attachrid(.@pty_aid[.@p]);
		if(strcharinfo(3) == getd("$@pty_"+getcharid(1)+"_m$")) { // Member is on the leveling map
			if(HP > 0) { // Member is alive
				getexp @bexp,.@jexp;
				dispbottom .n$+": Recieved Bonus: "+.@expr+"% - Base EXP: "+.@bexp+"/Job EXP: "+.@jexp;
				// Killed MvP > rewarding with points if .mvp_rew > 0
				if(getmonsterinfo(killedrid,22) != 0 && .mvp_rew > 0) {
					switch(.mvp_rew) {
						case 1:	set MvP_Pts,MvP_Pts + set(.@m_res,(.mvp_pts*.diff[getd(".pty_"+getcharid(1)+"_ix")])); break;
						case 2: set #CASHPOINTS,#CASHPOINTS + set(.@m_res,(.mvp_pts*.diff[getd(".pty_"+getcharid(1)+"_ix")])); break;
					}
					dispbottom .n$+": Recieved MVP Points: "+.@m_res+"x "+ ( (.mvp_rew == 1)?"MvP Points":"Cash Points")+".";
				}
			}
		}
	}
}
end;

// Party Leader logged off
// > Changing Leader Position to the next Member
OnPCLogOutEvent:
if(!getcharid(1)) end; // Not in a Party > Just in Case
if(getd("$@pty_"+getcharid(1)+"_m$") == "") end; // Not registered at the NPC > same as above
if(getpartyleader(getcharid(1),1) != getcharid(3)) end; // Attached player is not party leader
getpartymember(getcharid(1),2);
for ( set .@p,0; .@p < $@partymembercount; set .@p,.@p + 1)
	// Member is logged in and is not the current Party Leader
	if(isloggedin($@partymemberaid[.@p]) == 1 && $@partymemberaid[.@p] == getpartyleader(getcharid(1),1)) 
		continue;

detachrid;
attachrid(.@pty_aid[.@p]);
party_changeleader(getcharid(1),getcharid(0));
end;
}
// ======================= Party Join Feature - NPC =====================
-	script	Party_Join	-,{

OnInit:
set .n$,getvariableofnpc(.n$,"Dungeon Party Service");
end;

OnWhisperGlobal:
if(!getcharid(1)) end;
if(getmapflag(strcharinfo(3),mf_pvp) == 1 || getmapflag(strcharinfo(3),mf_gvg) == 1) end; // On PvP or GvG Maps = No effect
if(strcharinfo(0) != getpartyleader(getcharid(1))) end;

// List of the requesters
if(@whispervar0$ == "List" || @whispervar0$ == "list") {
	dispbottom .n$+": I will now list the requesters, which want to join your party.";
	dispbottom .n$+": Each requester gets an number, like 1.<Name>.";
	dispbottom .n$+": With this number, you have to re-pm me, but instead of \"List\", you have to use \"Join\" or \"Abort\".\"Accept\" or \"Decline\" does also work.";
	dispbottom .n$+": After \"Join\"/\"Accept\" or \"Abort\"/\"Decline\", you have to add \"#<Number of requester>\".";
	dispbottom "===================";
	for ( set .@r,0; .@r < getarraysize(getd("$@req_"+getcharid(1)+"_id")); set .@r,.@r + 1)
		dispbottom "- "+(.@r+1)+": "+getd("$@req_"+getd("$@req_"+getcharid(1)+"_id["+.@r+"]")+"$[0]")+", Level: "+getd("$@req_"+getd("$@req_"+getcharid(1)+"_id["+.@r+"]")+"$[1]")+", "+getd("$@req_"+getd("$@req_"+getcharid(1)+"_id["+.@r+"]")+"$[2]");
	
	dispbottom "===================";
	dispbottom .n$+": I will now list here your party members, also with a number, to warp the chosen player to that party member.";
	dispbottom .n$+": To let the player warp to one of your party members add after the number of the player \"#<Number of Member>\".";
	dispbottom .n$+": So it would look something like this: \"Join#1#1\", this would let the 1st requester in the list to the 1st party member, most cases you.";
	dispbottom .n$+": Note: If you use \"Abort\"/\"Decline\" the number of the party member won't take effect, of course.";
	dispbottom "===================";
	getpartymember(getcharid(1));
	set @partyct,$@partymembercount;
	copyarray @partymemb$[0],$@partymembername$[0],@partyct;
	for ( set .@p,0; .@p < @partyct; set .@p,.@p + 1)
		if(isloggedin(getcharid(3,@partymemb$[.@p]),getcharid(0,@partymemb$[.@p])) == 1) // Member logged in?
			dispbottom "- "+(.@p+1)+"."+@partymemb$[.@p] + ( (@partymemb$[.@p] == getpartyleader(getcharid(1)))?" (Leader)":"");

	dispbottom "===================";

// Accepting requesters
} else if(compare(@whispervar0$,"Accept") == 1 || compare(@whispervar0$,"Join") == 1) {
	if(@whispervar1$ == "" || @whispervar2$ == "") {
		dispbottom .n$+": Either you didn't put the requesters number or the number of the party member he should be warped to!";
		end;
	}
	message getd("$@req_"+getd("$@req_"+getcharid(1)+"_id["+@whispervar1$+"]")+"$[0]"),.n$+": Your request has been accepted, you will be warped to the party member chosen from the leader.";
	sleep2 2000;
	party_addmember(getcharid(1),getd("$@req_"+getcharid(1)+"_id["+@whispervar1$+"]"));
	// In case the leader logged of, the "@" variables were deleted
	if(@partymemb$[@whispervar2$] == "") {
		dispbottom .n$+": An bug has occured, in which I couldn't find the list for your party members.";
		dispbottom .n$+": Possible Bug: You logged off or disconnected. Please repeat the previous step.";
		end;
	}
	atcommand "@warpto "+@partymemb$[@whispervar2$];
	deletearray getd("$@req_"+getcharid(1)+"_id["+@whispervar1$+"]"),1;
	deletearray getd("$@req_"+getd("$@req_"+getcharid(1)+"_id["+@whispervar1$+"]")+"$[0]"),128;
	
// Declining requesters
} else if(compare(@whispervar0$,"Decline") == 1 || compare(@whispervar0$,"Abort") == 1) {
	if(@whispervar1$ == "") {
		dispbottom .n$+": You didn't put the requesters number!";
		end;
	}
	message getd("$@req_"+getd("$@req_"+getcharid(1)+"_id["+@whispervar1$+"]")+"$[0]"),.n$+": I'm sorry, but your request has been declined.";
	deletearray getd("$@req_"+getcharid(1)+"_id["+@whispervar1$+"]"),1;
	deletearray getd("$@req_"+getd("$@req_"+getcharid(1)+"_id["+@whispervar1$+"]")+"$[0]"),128;

} else 
	dispbottom .n$+": I'm not sure, what you wanted from me, but I can't do that.";
	
end;
}
// ======================= Inside Dungeon NPC =====================
-	script	Dungeon Guard#main::DG_Main	110,{

if(!getcharid(1)) end;
set .@n$,"["+strnpcinfo(1)+"]";

mes .@n$;
if(getpartyleader(getcharid(1)) != strcharinfo(0)) {
	mes "Only the party leader can talk to me!";
	close;
}
mes "Congratulation!";
mes "You have reached the exit of this level.";
if(@pt_mkill < (getd("@pt_"+.dg_info$[0]+"_mbase")*.dg_info$[1])) {
	mes "But it seems like your party hasn't killed enough monsters to pass to the next level.";
	mes "You still have to kill "+(getd("@pt_"+.dg_info$[0]+"_mct") - @pt_mkill)+" monsters.";
	close;
}
set .@m,(.dg_info$[1]*4);
set @pt_mkill,0;

if(getd("."+.dg_info$[0]+"$["+@m+"]") == "") {
	mes "You also have completed this dungeon.";
	if(getvariableofnpc(.dg_rew,"Dungeon Party Service") == 1) {
		mes "Please visit the \"Dungeon Party Service\" for your rewards.";
		setd("$@pt_"+getcharid(1)+"_m$"),"Reward";
	}
	mes "You will now be warped to your save points.";
	close2;
	warpparty SavePointAll,0,0,getcharid(1);
	end;
}
mes "You will now be warped to next level: "+getd("."+.dg_info$[0]+"$["+.@m+"]");
close2;
setd("$@pt_"+getcharid(1)+"_m$"),getd("."+getd("$@pt_"+getcharid(1)+"$")+"$["+(@m+1)+"]");
warpparty getd("."+.dg_info$[0]+"$["+(.@m+1)+"]"),getd("."+.dg_info$[0]+"$["+(.@m+2)+"]"),getd("."+.dg_info$[0]+"$["+(.@m+3)+"]"),getcharid(1);
end;

OnInit:
if(strnpcinfo(2) == "main") end; // If its the main NPC, don't continue (would lead to errors)
explode(.dg_info$,""+strnpcinfo(2),"_");
for (set .@n,0; .@n < 128); set .@n,.@n + 1) 
	copyarray setd("."+.dg_info$[0]+"$["+.@n+"]"),getvariableofnpc(getd("."+.dg_info$[0]+"$["+.@n+"]"),"Dungeon Party Service"),1;
end;

}
	
// ======================= End of Script =====================